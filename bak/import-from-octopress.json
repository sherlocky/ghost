{
    "db": [
        {
            "data": {
                "app_fields": [], 
                "app_settings": [], 
                "apps": [], 
                "permissions": [
                    {
                        "action_type": "exportContent", 
                        "created_at": "2015-08-21T15:37:48.000Z", 
                        "created_by": 1, 
                        "id": 1, 
                        "name": "Export database", 
                        "object_id": null, 
                        "object_type": "db", 
                        "updated_at": "2015-08-21T15:37:48.000Z", 
                        "updated_by": 1, 
                        "uuid": "75713d83-acda-4dea-8cb0-b4d0c6a48341"
                    }, 
                    {
                        "action_type": "importContent", 
                        "created_at": "2015-08-21T15:37:48.000Z", 
                        "created_by": 1, 
                        "id": 2, 
                        "name": "Import database", 
                        "object_id": null, 
                        "object_type": "db", 
                        "updated_at": "2015-08-21T15:37:48.000Z", 
                        "updated_by": 1, 
                        "uuid": "cd58d461-0819-48ef-a0f6-de0b7e1bec53"
                    }, 
                    {
                        "action_type": "deleteAllContent", 
                        "created_at": "2015-08-21T15:37:48.000Z", 
                        "created_by": 1, 
                        "id": 3, 
                        "name": "Delete all content", 
                        "object_id": null, 
                        "object_type": "db", 
                        "updated_at": "2015-08-21T15:37:48.000Z", 
                        "updated_by": 1, 
                        "uuid": "a9b1bb43-d3fd-419e-822f-8310c145c3c2"
                    }, 
                    {
                        "action_type": "send", 
                        "created_at": "2015-08-21T15:37:48.000Z", 
                        "created_by": 1, 
                        "id": 4, 
                        "name": "Send mail", 
                        "object_id": null, 
                        "object_type": "mail", 
                        "updated_at": "2015-08-21T15:37:48.000Z", 
                        "updated_by": 1, 
                        "uuid": "1a477de5-03f1-4ad5-96b2-665b3a0d3927"
                    }, 
                    {
                        "action_type": "browse", 
                        "created_at": "2015-08-21T15:37:48.000Z", 
                        "created_by": 1, 
                        "id": 5, 
                        "name": "Browse notifications", 
                        "object_id": null, 
                        "object_type": "notification", 
                        "updated_at": "2015-08-21T15:37:48.000Z", 
                        "updated_by": 1, 
                        "uuid": "647115c5-7ac9-448a-8083-5713a72cb19b"
                    }, 
                    {
                        "action_type": "add", 
                        "created_at": "2015-08-21T15:37:48.000Z", 
                        "created_by": 1, 
                        "id": 6, 
                        "name": "Add notifications", 
                        "object_id": null, 
                        "object_type": "notification", 
                        "updated_at": "2015-08-21T15:37:48.000Z", 
                        "updated_by": 1, 
                        "uuid": "658a751a-9dac-4ea4-b66a-5e25c56b8d68"
                    }, 
                    {
                        "action_type": "destroy", 
                        "created_at": "2015-08-21T15:37:48.000Z", 
                        "created_by": 1, 
                        "id": 7, 
                        "name": "Delete notifications", 
                        "object_id": null, 
                        "object_type": "notification", 
                        "updated_at": "2015-08-21T15:37:48.000Z", 
                        "updated_by": 1, 
                        "uuid": "db3fd8c2-9e9d-4ed8-93a9-91e074b0718a"
                    }, 
                    {
                        "action_type": "browse", 
                        "created_at": "2015-08-21T15:37:48.000Z", 
                        "created_by": 1, 
                        "id": 8, 
                        "name": "Browse posts", 
                        "object_id": null, 
                        "object_type": "post", 
                        "updated_at": "2015-08-21T15:37:48.000Z", 
                        "updated_by": 1, 
                        "uuid": "60ff6e0a-e921-489c-a088-3032c11cc37f"
                    }, 
                    {
                        "action_type": "read", 
                        "created_at": "2015-08-21T15:37:48.000Z", 
                        "created_by": 1, 
                        "id": 9, 
                        "name": "Read posts", 
                        "object_id": null, 
                        "object_type": "post", 
                        "updated_at": "2015-08-21T15:37:48.000Z", 
                        "updated_by": 1, 
                        "uuid": "3ba8e18b-6b40-408a-89fa-e0e5c7109860"
                    }, 
                    {
                        "action_type": "edit", 
                        "created_at": "2015-08-21T15:37:48.000Z", 
                        "created_by": 1, 
                        "id": 10, 
                        "name": "Edit posts", 
                        "object_id": null, 
                        "object_type": "post", 
                        "updated_at": "2015-08-21T15:37:48.000Z", 
                        "updated_by": 1, 
                        "uuid": "175fb001-e6f9-4f8e-b914-b72319371b71"
                    }, 
                    {
                        "action_type": "add", 
                        "created_at": "2015-08-21T15:37:48.000Z", 
                        "created_by": 1, 
                        "id": 11, 
                        "name": "Add posts", 
                        "object_id": null, 
                        "object_type": "post", 
                        "updated_at": "2015-08-21T15:37:48.000Z", 
                        "updated_by": 1, 
                        "uuid": "16b53062-1ac5-49a3-90dd-79737f697f7d"
                    }, 
                    {
                        "action_type": "destroy", 
                        "created_at": "2015-08-21T15:37:48.000Z", 
                        "created_by": 1, 
                        "id": 12, 
                        "name": "Delete posts", 
                        "object_id": null, 
                        "object_type": "post", 
                        "updated_at": "2015-08-21T15:37:48.000Z", 
                        "updated_by": 1, 
                        "uuid": "373251e6-12c4-4ede-b5a7-25e2d7071b31"
                    }, 
                    {
                        "action_type": "browse", 
                        "created_at": "2015-08-21T15:37:48.000Z", 
                        "created_by": 1, 
                        "id": 13, 
                        "name": "Browse settings", 
                        "object_id": null, 
                        "object_type": "setting", 
                        "updated_at": "2015-08-21T15:37:48.000Z", 
                        "updated_by": 1, 
                        "uuid": "ca854957-4684-4a5f-aeec-702f7b090624"
                    }, 
                    {
                        "action_type": "read", 
                        "created_at": "2015-08-21T15:37:48.000Z", 
                        "created_by": 1, 
                        "id": 14, 
                        "name": "Read settings", 
                        "object_id": null, 
                        "object_type": "setting", 
                        "updated_at": "2015-08-21T15:37:48.000Z", 
                        "updated_by": 1, 
                        "uuid": "ae98805d-b784-4bf7-afb5-bc72240b41e2"
                    }, 
                    {
                        "action_type": "edit", 
                        "created_at": "2015-08-21T15:37:48.000Z", 
                        "created_by": 1, 
                        "id": 15, 
                        "name": "Edit settings", 
                        "object_id": null, 
                        "object_type": "setting", 
                        "updated_at": "2015-08-21T15:37:48.000Z", 
                        "updated_by": 1, 
                        "uuid": "f9379ee1-6a0b-438d-8d6e-fb6cc579af0f"
                    }, 
                    {
                        "action_type": "generate", 
                        "created_at": "2015-08-21T15:37:48.000Z", 
                        "created_by": 1, 
                        "id": 16, 
                        "name": "Generate slugs", 
                        "object_id": null, 
                        "object_type": "slug", 
                        "updated_at": "2015-08-21T15:37:48.000Z", 
                        "updated_by": 1, 
                        "uuid": "e1ffb298-f9c7-413d-b8a5-c48d06cf8024"
                    }, 
                    {
                        "action_type": "browse", 
                        "created_at": "2015-08-21T15:37:48.000Z", 
                        "created_by": 1, 
                        "id": 17, 
                        "name": "Browse tags", 
                        "object_id": null, 
                        "object_type": "tag", 
                        "updated_at": "2015-08-21T15:37:48.000Z", 
                        "updated_by": 1, 
                        "uuid": "cda6077c-dd2e-44f9-bde6-e897f40d902c"
                    }, 
                    {
                        "action_type": "read", 
                        "created_at": "2015-08-21T15:37:48.000Z", 
                        "created_by": 1, 
                        "id": 18, 
                        "name": "Read tags", 
                        "object_id": null, 
                        "object_type": "tag", 
                        "updated_at": "2015-08-21T15:37:48.000Z", 
                        "updated_by": 1, 
                        "uuid": "3d7bebfc-e4e3-470e-88fe-9cc2d5312405"
                    }, 
                    {
                        "action_type": "edit", 
                        "created_at": "2015-08-21T15:37:48.000Z", 
                        "created_by": 1, 
                        "id": 19, 
                        "name": "Edit tags", 
                        "object_id": null, 
                        "object_type": "tag", 
                        "updated_at": "2015-08-21T15:37:48.000Z", 
                        "updated_by": 1, 
                        "uuid": "aacfe724-d6e8-460d-aa54-808e52f76482"
                    }, 
                    {
                        "action_type": "add", 
                        "created_at": "2015-08-21T15:37:48.000Z", 
                        "created_by": 1, 
                        "id": 20, 
                        "name": "Add tags", 
                        "object_id": null, 
                        "object_type": "tag", 
                        "updated_at": "2015-08-21T15:37:48.000Z", 
                        "updated_by": 1, 
                        "uuid": "88c09f4b-4b03-4ae4-9ff6-6f69d27eccfb"
                    }, 
                    {
                        "action_type": "destroy", 
                        "created_at": "2015-08-21T15:37:48.000Z", 
                        "created_by": 1, 
                        "id": 21, 
                        "name": "Delete tags", 
                        "object_id": null, 
                        "object_type": "tag", 
                        "updated_at": "2015-08-21T15:37:48.000Z", 
                        "updated_by": 1, 
                        "uuid": "1cafb119-06da-4619-bd2f-b004022bbc9d"
                    }, 
                    {
                        "action_type": "browse", 
                        "created_at": "2015-08-21T15:37:48.000Z", 
                        "created_by": 1, 
                        "id": 22, 
                        "name": "Browse themes", 
                        "object_id": null, 
                        "object_type": "theme", 
                        "updated_at": "2015-08-21T15:37:48.000Z", 
                        "updated_by": 1, 
                        "uuid": "78de8ae9-7ad7-44ef-887e-e1c555dff7a3"
                    }, 
                    {
                        "action_type": "edit", 
                        "created_at": "2015-08-21T15:37:48.000Z", 
                        "created_by": 1, 
                        "id": 23, 
                        "name": "Edit themes", 
                        "object_id": null, 
                        "object_type": "theme", 
                        "updated_at": "2015-08-21T15:37:48.000Z", 
                        "updated_by": 1, 
                        "uuid": "3db1c3d8-0080-4a64-bbe3-ca1027fa977e"
                    }, 
                    {
                        "action_type": "browse", 
                        "created_at": "2015-08-21T15:37:48.000Z", 
                        "created_by": 1, 
                        "id": 24, 
                        "name": "Browse users", 
                        "object_id": null, 
                        "object_type": "user", 
                        "updated_at": "2015-08-21T15:37:48.000Z", 
                        "updated_by": 1, 
                        "uuid": "990ae5dc-def5-4059-88be-a76cf9fb1c95"
                    }, 
                    {
                        "action_type": "read", 
                        "created_at": "2015-08-21T15:37:48.000Z", 
                        "created_by": 1, 
                        "id": 25, 
                        "name": "Read users", 
                        "object_id": null, 
                        "object_type": "user", 
                        "updated_at": "2015-08-21T15:37:48.000Z", 
                        "updated_by": 1, 
                        "uuid": "53d4e761-2e54-4a53-a4de-26cec0c091bd"
                    }, 
                    {
                        "action_type": "edit", 
                        "created_at": "2015-08-21T15:37:48.000Z", 
                        "created_by": 1, 
                        "id": 26, 
                        "name": "Edit users", 
                        "object_id": null, 
                        "object_type": "user", 
                        "updated_at": "2015-08-21T15:37:48.000Z", 
                        "updated_by": 1, 
                        "uuid": "578c6b44-6aec-46ce-a4e6-b991a05ea5bf"
                    }, 
                    {
                        "action_type": "add", 
                        "created_at": "2015-08-21T15:37:48.000Z", 
                        "created_by": 1, 
                        "id": 27, 
                        "name": "Add users", 
                        "object_id": null, 
                        "object_type": "user", 
                        "updated_at": "2015-08-21T15:37:48.000Z", 
                        "updated_by": 1, 
                        "uuid": "bb512689-14eb-45b6-8ed9-f27f9985accb"
                    }, 
                    {
                        "action_type": "destroy", 
                        "created_at": "2015-08-21T15:37:48.000Z", 
                        "created_by": 1, 
                        "id": 28, 
                        "name": "Delete users", 
                        "object_id": null, 
                        "object_type": "user", 
                        "updated_at": "2015-08-21T15:37:48.000Z", 
                        "updated_by": 1, 
                        "uuid": "5656d803-a314-4295-8f57-74a14b65ac82"
                    }, 
                    {
                        "action_type": "assign", 
                        "created_at": "2015-08-21T15:37:48.000Z", 
                        "created_by": 1, 
                        "id": 29, 
                        "name": "Assign a role", 
                        "object_id": null, 
                        "object_type": "role", 
                        "updated_at": "2015-08-21T15:37:48.000Z", 
                        "updated_by": 1, 
                        "uuid": "27ed3064-226e-4f6a-b9d1-2e9b015328ac"
                    }, 
                    {
                        "action_type": "browse", 
                        "created_at": "2015-08-21T15:37:48.000Z", 
                        "created_by": 1, 
                        "id": 30, 
                        "name": "Browse roles", 
                        "object_id": null, 
                        "object_type": "role", 
                        "updated_at": "2015-08-21T15:37:48.000Z", 
                        "updated_by": 1, 
                        "uuid": "b7116c7e-e262-4c0a-b0b8-acbaf7f73772"
                    }
                ], 
                "permissions_apps": [], 
                "permissions_roles": [
                    {
                        "id": 1, 
                        "permission_id": 1, 
                        "role_id": 1
                    }, 
                    {
                        "id": 2, 
                        "permission_id": 2, 
                        "role_id": 1
                    }, 
                    {
                        "id": 3, 
                        "permission_id": 3, 
                        "role_id": 1
                    }, 
                    {
                        "id": 4, 
                        "permission_id": 4, 
                        "role_id": 1
                    }, 
                    {
                        "id": 5, 
                        "permission_id": 5, 
                        "role_id": 1
                    }, 
                    {
                        "id": 6, 
                        "permission_id": 6, 
                        "role_id": 1
                    }, 
                    {
                        "id": 7, 
                        "permission_id": 7, 
                        "role_id": 1
                    }, 
                    {
                        "id": 8, 
                        "permission_id": 8, 
                        "role_id": 1
                    }, 
                    {
                        "id": 9, 
                        "permission_id": 9, 
                        "role_id": 1
                    }, 
                    {
                        "id": 10, 
                        "permission_id": 10, 
                        "role_id": 1
                    }, 
                    {
                        "id": 11, 
                        "permission_id": 11, 
                        "role_id": 1
                    }, 
                    {
                        "id": 12, 
                        "permission_id": 12, 
                        "role_id": 1
                    }, 
                    {
                        "id": 13, 
                        "permission_id": 13, 
                        "role_id": 1
                    }, 
                    {
                        "id": 14, 
                        "permission_id": 14, 
                        "role_id": 1
                    }, 
                    {
                        "id": 15, 
                        "permission_id": 15, 
                        "role_id": 1
                    }, 
                    {
                        "id": 16, 
                        "permission_id": 16, 
                        "role_id": 1
                    }, 
                    {
                        "id": 17, 
                        "permission_id": 17, 
                        "role_id": 1
                    }, 
                    {
                        "id": 18, 
                        "permission_id": 18, 
                        "role_id": 1
                    }, 
                    {
                        "id": 19, 
                        "permission_id": 19, 
                        "role_id": 1
                    }, 
                    {
                        "id": 20, 
                        "permission_id": 20, 
                        "role_id": 1
                    }, 
                    {
                        "id": 21, 
                        "permission_id": 21, 
                        "role_id": 1
                    }, 
                    {
                        "id": 22, 
                        "permission_id": 22, 
                        "role_id": 1
                    }, 
                    {
                        "id": 23, 
                        "permission_id": 23, 
                        "role_id": 1
                    }, 
                    {
                        "id": 24, 
                        "permission_id": 24, 
                        "role_id": 1
                    }, 
                    {
                        "id": 25, 
                        "permission_id": 25, 
                        "role_id": 1
                    }, 
                    {
                        "id": 26, 
                        "permission_id": 26, 
                        "role_id": 1
                    }, 
                    {
                        "id": 27, 
                        "permission_id": 27, 
                        "role_id": 1
                    }, 
                    {
                        "id": 28, 
                        "permission_id": 28, 
                        "role_id": 1
                    }, 
                    {
                        "id": 29, 
                        "permission_id": 29, 
                        "role_id": 1
                    }, 
                    {
                        "id": 30, 
                        "permission_id": 30, 
                        "role_id": 1
                    }, 
                    {
                        "id": 31, 
                        "permission_id": 8, 
                        "role_id": 2
                    }, 
                    {
                        "id": 32, 
                        "permission_id": 9, 
                        "role_id": 2
                    }, 
                    {
                        "id": 33, 
                        "permission_id": 10, 
                        "role_id": 2
                    }, 
                    {
                        "id": 34, 
                        "permission_id": 11, 
                        "role_id": 2
                    }, 
                    {
                        "id": 35, 
                        "permission_id": 12, 
                        "role_id": 2
                    }, 
                    {
                        "id": 36, 
                        "permission_id": 13, 
                        "role_id": 2
                    }, 
                    {
                        "id": 37, 
                        "permission_id": 14, 
                        "role_id": 2
                    }, 
                    {
                        "id": 38, 
                        "permission_id": 16, 
                        "role_id": 2
                    }, 
                    {
                        "id": 39, 
                        "permission_id": 17, 
                        "role_id": 2
                    }, 
                    {
                        "id": 40, 
                        "permission_id": 18, 
                        "role_id": 2
                    }, 
                    {
                        "id": 41, 
                        "permission_id": 19, 
                        "role_id": 2
                    }, 
                    {
                        "id": 42, 
                        "permission_id": 20, 
                        "role_id": 2
                    }, 
                    {
                        "id": 43, 
                        "permission_id": 21, 
                        "role_id": 2
                    }, 
                    {
                        "id": 44, 
                        "permission_id": 24, 
                        "role_id": 2
                    }, 
                    {
                        "id": 45, 
                        "permission_id": 25, 
                        "role_id": 2
                    }, 
                    {
                        "id": 46, 
                        "permission_id": 26, 
                        "role_id": 2
                    }, 
                    {
                        "id": 47, 
                        "permission_id": 27, 
                        "role_id": 2
                    }, 
                    {
                        "id": 48, 
                        "permission_id": 28, 
                        "role_id": 2
                    }, 
                    {
                        "id": 49, 
                        "permission_id": 29, 
                        "role_id": 2
                    }, 
                    {
                        "id": 50, 
                        "permission_id": 30, 
                        "role_id": 2
                    }, 
                    {
                        "id": 51, 
                        "permission_id": 8, 
                        "role_id": 3
                    }, 
                    {
                        "id": 52, 
                        "permission_id": 9, 
                        "role_id": 3
                    }, 
                    {
                        "id": 53, 
                        "permission_id": 11, 
                        "role_id": 3
                    }, 
                    {
                        "id": 54, 
                        "permission_id": 13, 
                        "role_id": 3
                    }, 
                    {
                        "id": 55, 
                        "permission_id": 14, 
                        "role_id": 3
                    }, 
                    {
                        "id": 56, 
                        "permission_id": 16, 
                        "role_id": 3
                    }, 
                    {
                        "id": 57, 
                        "permission_id": 17, 
                        "role_id": 3
                    }, 
                    {
                        "id": 58, 
                        "permission_id": 18, 
                        "role_id": 3
                    }, 
                    {
                        "id": 59, 
                        "permission_id": 20, 
                        "role_id": 3
                    }, 
                    {
                        "id": 60, 
                        "permission_id": 24, 
                        "role_id": 3
                    }, 
                    {
                        "id": 61, 
                        "permission_id": 25, 
                        "role_id": 3
                    }, 
                    {
                        "id": 62, 
                        "permission_id": 30, 
                        "role_id": 3
                    }
                ], 
                "permissions_users": [], 
                "posts": [
                    {
                        "created_at": 1432545180000, 
                        "created_by": 1, 
                        "id": 1, 
                        "language": "en_US", 
                        "markdown": "&nbsp;&nbsp;&nbsp;&nbsp;\u5e74\u521d\u7684\u65f6\u5019\uff0c\u81ea\u5df1\u4f7f\u7528Shadowsocks\u548cBandwagon\u642d\u5efa\u4e86\u4e00\u4e2aSS\u68af\u5b50\uff0c\u987a\u7545\u65e0\u6bd4\u3002\u524d\u6bb5\u65f6\u95f4\u767b\u4e0aKiviVM\u4e00\u770b\uff0c\u6211\u7684VPS\u5c45\u7136\u88abSuspend\u4e86\uff0c\u539f\u56e0\u662f\u906d\u9047DDos\u5171\u8ba1\uff0c\u6211\u7684VPS\u4e00\u76f4\u5411\u5916\u53d1\u9001\u8bf7\u6c42\u3002\n\n&nbsp;&nbsp;&nbsp;&nbsp;\u53c8\u662f\u6539\u5bc6\u7801\uff0c\u53c8\u662f\u6539ip\u7684\uff0c\u7edf\u7edf\u4e0d\u884c\u3002\u7ec8\u4e8e\u6ca1\u6709\u6d6a\u8d39\u6700\u540e\u4e00\u6b21\u673a\u4f1a\uff0cInstall A New OS\uff0c\u8fd9\u4e0b\u6ca1\u95ee\u9898\u4e86\u3002(\u4e09\u6b21\u5931\u8d25\u5c31\u88abban\u4e00\u5e74)\n##\u4e00\u3001\u4f7f\u7528SSH\u8bc1\u4e66\u5bc6\u94a5\u767b\u5f55\nssh\u767b\u5f55\u63d0\u4f9b\u4e24\u79cd\u8ba4\u8bc1\u65b9\u5f0f\uff1a\u53e3\u4ee4(\u5bc6\u7801)\u8ba4\u8bc1\u65b9\u5f0f\u548c\u5bc6\u94a5\u8ba4\u8bc1\u65b9\u5f0f\u3002\u5176\u4e2d\u53e3\u4ee4(\u5bc6\u7801)\u8ba4\u8bc1\u65b9\u5f0f\u662f\u6211\u4eec\u6700\u5e38\u7528\u7684\u4e00\u79cd\uff0c\u8fd9\u91cc\u4ecb\u7ecd\u5bc6\u94a5\u8ba4\u8bc1\u65b9\u5f0f\u767b\u5f55\u5230linux/unix\u7684\u65b9\u6cd5\u3002\n\n\u4f7f\u7528\u5bc6\u94a5\u767b\u5f55\u5206\u4e3a3\u6b65\uff1a\n\n- 1\u3001\u751f\u6210\u5bc6\u94a5\uff08\u516c\u94a5\u4e0e\u79c1\u94a5\uff09\uff1b\n- 2\u3001\u653e\u7f6e\u516c\u94a5(Public Key)\u5230\u670d\u52a1\u5668~/.ssh/authorized_key\u6587\u4ef6\u4e2d\uff1b\n- 3\u3001\u914d\u7f6essh\u5ba2\u6237\u7aef\u4f7f\u7528\u5bc6\u94a5\u767b\u5f55\u3002\n- 4\u3001\u4fee\u6539`sshd_config`\u914d\u7f6e\n\n<!--more-->\n\n###1) \u751f\u6210\u5bc6\u94a5\u516c\u94a5\uff08Public key\uff09\u4e0e\u79c1\u94a5(Private Key)\n\u6253\u5f00Xshell\uff0c`tools`\n\n--> `User Key Generation Wizard...`(\u5bc6\u94a5\u751f\u6210\u5411\u5bfc)\n\n--> `Key Type` --> `DSA`\u516c\u94a5\u52a0\u5bc6\u7b97\u6cd5\uff0c`Key Length`\u9009\u62e9\u4e3a\u201c1024\u201d\u4f4d\u5bc6\u94a5\u957f\u5ea6.\n\n--> `Next`\uff0c\u7b49\u5f85\u5bc6\u94a5\u751f\u6210, --> `Key Name`\u4e2d\u8f93\u5165Key\u7684\u6587\u4ef6\u540d\u79f0,\u4f8b\u5982`id_dsa_1024_sherlocky`\uff1b --> `Passphrase`\u5904\u8f93\u5165\u4e00\u4e2a\u5bc6\u7801\u7528\u4e8e\u52a0\u5bc6\u79c1\u94a5\uff0c\u5e76\u518d\u6b21\u8f93\u5165\u5bc6\u7801\u786e\u8ba4.\n\n--> `Next`\uff0c\u5bc6\u94a5\u751f\u6210\u5b8c\u6bd5\uff08`Public key Format`\u9009\u62e9`SSH2-OpenSSH`\u683c\u5f0f\uff09\uff0c\u8fd9\u91cc\u663e\u793a\u7684\u662f\u516c\u94a5\uff0c\u6211\u4eec\u53ef\u4ee5\u590d\u5236\u516c\u94a5\u7136\u540e\u518d\u4fdd\u5b58\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u4fdd\u5b58\u516c\u94a5\u5230\u6587\u4ef6\uff0c\u79c1\u94a5\u8fd9\u91cc\u4e0d\u663e\u793a\uff0c\u53ef\u4ee5\u5728`User Key Mangager...`\u5bfc\u51fa\u5230\u6587\u4ef6.\n\n--> `Save as file...`\uff0c\u5c06\u516c\u94a5(Public key)\u4fdd\u5b58\u5230\u78c1\u76d8\uff0c\u6587\u4ef6\u540d\u4e3a`id_dsa_1024_sherlocky.pub`\uff0c\u5907\u7528\u3002\n###2) \u4e0a\u4f20\u516c\u94a5(Public Key)\u5230\u670d\u52a1\u5668\n\u4f7f\u7528\u5230Xshell\u767b\u5f55\u5230\u670d\u52a1\u5668\uff0c\u8fdb\u5165\u5230`/root/.ssh/`\u76ee\u5f55\uff0c\u5c06`id_dsa_1024_sherlocky.pub`\u53d1\u9001\u5230\u670d\u52a1\u5668\uff0c\u7136\u540e\u8fd0\u884c\u5982\u4e0b\u547d\u4ee4\uff0c\u5c06\u516c\u94a5(Public Key)\u5bfc\u5165\u5230`authorized_keys`\u6587\u4ef6\uff1a\n\n\tcd /root/.ssh/\n\tcat id_dsa_1024_sherlocky.pub >> authorized_keys\n\tchmod 600 authorized_keys #\u4fee\u6539\u6587\u4ef6\u7684\u6743\u9650\uff0c\u5426\u5219\u53ef\u80fd\u4f1a\u9047\u5230\u95ee\u9898\n\tcat authorized_keys\n\n###3) \u914d\u7f6eXshell\u4f7f\u7528\u5bc6\u94a5\u8ba4\u8bc1\u65b9\u5f0f\u767b\u5f55\u5230\u670d\u52a1\u5668\n\u6253\u5f00Xshell\uff0c--> `New` --> `Authentication`\u5207\u6362\u5230\u8ba4\u8bc1\u680f\u76ee\uff0c\n\n--> `Method`\u9009\u62e9`Public Key`\u8ba4\u8bc1\uff0c\u7528\u6237\u540d\u8f93\u5165`root`(\u516c\u94a5\u662f\u653e\u5728root\u76ee\u5f55\u4e0b\u7684.ssh\u6587\u4ef6\u5939\u4e2d)\uff0c\n\n--> `User Key`\u4e2d\u9009\u62e9\u6211\u4eec\u521a\u624d\u751f\u6210\u7684\u79c1\u94a5`id_dsa_1024_sherlocky`,`Passphrase`\u4e2d\u8f93\u5165\u79c1\u94a5\u7684\u52a0\u5bc6\u5bc6\u7801 \u3002\u3002\u3002\n\n###4) \u4fee\u6539`sshd_config`\u914d\u7f6e\n\u4e3a\u4e86\u7cfb\u7edf\u5b89\u5168\u7740\u60f3\uff0c\u8981\u5173\u95ed\u5bc6\u7801\u8ba4\u8bc1\u7684\u65b9\u5f0f\uff0c\u8fd8\u8981\u53ca\u65f6\u66f4\u6539`ssh`\u7aef\u53e3\u4e3a\u975e\u9ed8\u8ba4\u7aef\u53e3\uff0c\u540c\u65f6\u4ec5\u5141\u8bb8\u8bc1\u4e66\u767b\u5f55\u3002\n\n\tvim /etc/ssh/sshd_config\n\n\u4fee\u6539\u4e0b\u9762\u51e0\u5904\uff1a\n\n\tPubkeyAuthentication  yes  \t\t\t\t #\u542f\u7528PublicKey\u8ba4\u8bc1\n\tAuthorizedKeysFile .ssh/authorized_keys  #PublicKey\u6587\u4ef6\u8def\u5f84\n\tPasswordAuthentication  no  \t\t\t #\u4e0d\u4f7f\u7528\u5bc6\u7801\u8ba4\u8bc1\u767b\u5f55\n##\u4e8c\u3001\u914d\u7f6e`iptabls`\n&nbsp;&nbsp;&nbsp;&nbsp;\u53ef\u4ee5\u5b89\u88c5`fail2ban`\u6765\u9632\u6b62\u66b4\u529b\u7834\u89e3SSH,\u8981\u4ed4\u7ec6\u8bbe\u7f6e`iptables`\uff0c\u53ea\u5141\u8bb8`80 443 53`\u7aef\u53e3\u7684\u901a\u4fe1.\n\n\u9644\u4e0axudshen\u7684`iptables`\u8bbe\u7f6e\u3002\n\n\n<script src=\"https://gist.github.com/y836097668/ce82285335a09e5ad424.js\"></script>\n\n\n\u672c\u6587\u8f6c\u81ea[xudshen's blog](http://xudshen.info/2014/10/15/securing-vps-with-iptables/)\uff0c\u6709\u4e00\u4e9b\u6539\u52a8\u3002", 
                        "published_at": 1432545180000, 
                        "published_by": 1, 
                        "slug": "bandwagon-\u88ab\u9ed1\u5c0f\u8bb0", 
                        "status": "published", 
                        "title": "Bandwagon \u88ab\u9ed1\u5c0f\u8bb0", 
                        "updated_at": 1432545180000, 
                        "updated_by": 1, 
                        "uuid": "39ee40ad-f1df-4489-9336-6ed0c9b6f202"
                    }, 
                    {
                        "created_at": 1439103000000, 
                        "created_by": 1, 
                        "id": 2, 
                        "language": "en_US", 
                        "markdown": "1. [\u4e3a\u67e5\u8be2\u4f18\u5316\u4f60\u7684\u67e5\u8be2](#mysql1)\n1. [EXPLAIN \u4f60\u7684SELECT\u67e5\u8be2](#mysql2)\n1. [\u5f53\u53ea\u8981\u4e00\u884c\u6570\u636e\u65f6\u4f7f\u7528LIMIT 1](#mysql3)\n1. [\u4e3a\u641c\u7d22\u5b57\u6bb5\u5efa\u7d22\u5f15](#mysql4)\n1. [\u5728Join\u8868\u7684\u65f6\u5019\u4f7f\u7528\u76f8\u5f53\u7c7b\u578b\u7684\u5217, \u5e76\u5c06\u5176\u7d22\u5f15](#mysql5)\n1. [\u5343\u4e07\u4e0d\u8981ORDER BY RAND()](#mysql6)\n1. [\u907f\u514dSELECT *](#mysql7)\n1. [\u6c38\u8fdc\u4e3a\u4e24\u5f20\u8868\u8bbe\u7f6e\u4e00\u4e2aID](#mysql8)\n1. [\u4f7f\u7528 ENUM \u800c\u4e0d\u662f VARCHAR \uff1f](#mysql9)\n1. [\u4ece PROCEDURE ANALYSE() \u53d6\u5f97\u5efa\u8bae \uff1f](#mysql10)\n1. [\u5c3d\u53ef\u80fd\u7684\u4f7f\u7528 NOT NULL](#mysql11)\n1. [\u628aIP\u5730\u5740\u5b58\u6210 UNSIGNED INT](#mysql12)\n1. [\u56fa\u5b9a\u957f\u5ea6\u7684\u8868\u4f1a\u66f4\u5feb](#mysql13)\n1. [\u5782\u76f4\u5206\u5272](#mysql14)\n1. [\u62c6\u5206\u5927\u7684 DELETE \u6216 INSERT \u8bed\u53e5](#mysql15)\n1. [\u8d8a\u5c0f\u7684\u5217\u4f1a\u8d8a\u5feb](#mysql16)\n1. [\u9009\u62e9\u4e00\u4e2a\u6b63\u786e\u7684\u5b58\u50a8\u5f15\u64ce](#mysql17)\n1. [\u5c0f\u5fc3\u201c\u6c38\u4e45\u94fe\u63a5\u201d](#mysql18)\n1. [\u5f53\u67e5\u8be2\u8f83\u6162\u7684\u65f6\u5019, \u53ef\u7528Join\u6765\u6539\u5199\u4e00\u4e0b\u8be5\u67e5\u8be2\u6765\u8fdb\u884c\u4f18\u5316](#mysql19)\n\n<!--more-->\n<h2 id=\"mysql1\">1\u3001\u4e3a\u67e5\u8be2\u4f18\u5316\u4f60\u7684\u67e5\u8be2</h2>\n\n\u5927\u591a\u6570\u7684MySQL\u670d\u52a1\u5668\u90fd\u5f00\u542f\u4e86\u67e5\u8be2\u7f13\u5b58\u3002\u8fd9\u662f\u63d0\u9ad8\u6027\u6700\u6709\u6548\u7684\u65b9\u6cd5\u4e4b\u4e00, \u800c\u4e14\u8fd9\u662f\u88abMySQL\u7684\u6570\u636e\u5e93\u5f15\u64ce\u5904\u7406\u7684\u3002\u5f53\u6709\u5f88\u591a\u76f8\u540c\u7684\u67e5\u8be2\u88ab\u6267\u884c\u4e86\u591a\u6b21\u7684\u65f6\u5019, \u8fd9\u4e9b\u67e5\u8be2\u7ed3\u679c\u4f1a\u88ab\u653e\u5230\u4e00\u4e2a\u7f13\u5b58\u4e2d, \u8fd9\u6837, \u540e\u7eed\u7684\u76f8\u540c\u7684\u67e5\u8be2\u5c31\u4e0d\u7528\u64cd\u4f5c\u8868\u800c\u76f4\u63a5\u8bbf\u95ee\u7f13\u5b58\u7ed3\u679c\u4e86\u3002\n\n\u8fd9\u91cc\u6700\u4e3b\u8981\u7684\u95ee\u9898\u662f, \u5bf9\u4e8e\u7a0b\u5e8f\u5458\u6765\u8bf4, \u8fd9\u4e2a\u4e8b\u60c5\u662f\u5f88\u5bb9\u6613\u88ab\u5ffd\u7565\u7684\u3002\u56e0\u4e3a, \u6211\u4eec\u67d0\u4e9b\u67e5\u8be2\u8bed\u53e5\u4f1a\u8ba9MySQL\u4e0d\u4f7f\u7528\u7f13\u5b58\u3002\u8bf7\u770b\u4e0b\u9762\u7684\u793a\u4f8b:\n\n```\n\t// \u67e5\u8be2\u7f13\u5b58\u4e0d\u5f00\u542f\n\t$r = mysql_query(\"SELECT username FROM user WHERE signup_date >= CURDATE()\");\n \t// \u5f00\u542f\u67e5\u8be2\u7f13\u5b58\n\t$today = date(\"Y-m-d\");\n\t$r = mysql_query(\"SELECT username FROM user WHERE signup_date >= '$today'\");\n```\n\n\u4e0a\u9762\u4e24\u6761SQL\u8bed\u53e5\u7684\u5dee\u522b\u5c31\u662f CURDATE() , MySQL\u7684\u67e5\u8be2\u7f13\u5b58\u5bf9\u8fd9\u4e2a\u51fd\u6570\u4e0d\u8d77\u4f5c\u7528\u3002\u6240\u4ee5, \u50cf NOW() \u548c RAND() \u6216\u662f\u5176\u5b83\u7684\u8bf8\u5982\u6b64\u7c7b\u7684SQL\u51fd\u6570\u90fd\u4e0d\u4f1a\u5f00\u542f\u67e5\u8be2\u7f13\u5b58, \u56e0\u4e3a\u8fd9\u4e9b\u51fd\u6570\u7684\u8fd4\u56de\u662f\u4f1a\u4e0d\u5b9a\u7684\u6613\u53d8\u7684\u3002\u6240\u4ee5, \u4f60\u6240\u9700\u8981\u7684\u5c31\u662f\u7528\u4e00\u4e2a\u53d8\u91cf\u6765\u4ee3\u66ffMySQL\u7684\u51fd\u6570, \u4ece\u800c\u5f00\u542f\u7f13\u5b58\u3002\n\n<h2 id=\"mysql2\">2\u3001EXPLAIN \u4f60\u7684SELECT\u67e5\u8be2</h2>\n\n\u4f7f\u7528EXPLAIN\u5173\u952e\u5b57\u53ef\u4ee5\u8ba9\u4f60\u77e5\u9053MySQL\u662f\u5982\u4f55\u5904\u7406\u4f60\u7684SQL\u8bed\u53e5\u7684\u3002\n\n\u6709\u8868\u5173\u8054\u7684\u67e5\u8be2, \u5982\u4e0b\u5217:\n```\n\n\tselect username, group_name from users u joins groups g on (u.group_id = g.id)\n```\n\u53d1\u73b0\u67e5\u8be2\u7f13\u6162, \u7136\u540e\u5728group_id\u5b57\u6bb5\u4e0a\u589e\u52a0\u7d22\u5f15, \u5219\u4f1a\u52a0\u5feb\u67e5\u8be2\n\n<h2 id=\"mysql3\">3\u3001\u5f53\u53ea\u8981\u4e00\u884c\u6570\u636e\u65f6\u4f7f\u7528LIMIT 1</h2>\n\n\u5f53\u4f60\u67e5\u8be2\u8868\u7684\u6709\u4e9b\u65f6\u5019, \u4f60\u5df2\u7ecf\u77e5\u9053\u7ed3\u679c\u53ea\u4f1a\u6709\u4e00\u6761\u7ed3\u679c, \u5355\u56e0\u4e3a\u4f60\u53ef\u80fd\u9700\u8981\u53bbfetch\u6e38\u6807, \u6216\u662f\u4f60\u4e5f\u8bb8\u4f1a\u53bb\u68c0\u67e5\u8fd4\u56de\u7684\u8bb0\u5f55\u6570\u3002\n\n\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b, \u52a0\u4e0aLIMIT 1 \u53ef\u4ee5\u589e\u52a0\u6027\u80fd\u3002\u8fd9\u6837\u4e00\u6837,  MySQL\u6570\u636e\u5e93\u5f15\u64ce\u4f1a\u5728\u627e\u5230\u4e00\u6761\u6570\u636e\u540e\u505c\u6b62\u641c\u7d22, \u800c\u4e0d\u662f\u7ee7\u7eed\u5f80\u540e\u67e5\u627e\u4e0b\u4e00\u6761\u7b26\u5408\u8bb0\u5f55\u7684\u6570\u636e\u3002\n\n\u4e0b\u9762\u7684\u793a\u4f8b, \u53ea\u662f\u4e3a\u4e86\u627e\u4e00\u4e0b\u662f\u5426\u6709\u201c\u4e2d\u56fd\u201d\u7684\u7528\u6237, \u5f88\u660e\u663e, \u540e\u9762\u7684\u4f1a\u6bd4\u524d\u9762\u7684\u66f4\u6709\u6548\u7387\u3002\uff08\u8bf7\u6ce8\u610f, \u7b2c\u4e00\u6761\u4e2d\u662fSelect *, \u7b2c\u4e8c\u6761\u662fSelect 1\uff09\n```\n\n\t// \u6ca1\u6709\u6548\u7387\u7684:\n\t$r = mysql_query(\"SELECT * FROM user WHERE country = 'China'\");\n\tif (mysql_num_rows($r) > 0) {     // ... }\n\t// \u6709\u6548\u7387\u7684:\n\t$r = mysql_query(\"SELECT 1 FROM user WHERE country = 'China' LIMIT 1\");\n\tif (mysql_num_rows($r) > 0) { // ... }\n```\n<h2 id=\"mysql4\">4\u3001\u4e3a\u641c\u7d22\u5b57\u6bb5\u5efa\u7d22\u5f15</h2>\n\n\u7d22\u5f15\u5e76\u4e0d\u4e00\u5b9a\u5c31\u662f\u7ed9\u4e3b\u952e\u6216\u662f\u552f\u4e00\u7684\u5b57\u6bb5\u3002\u5982\u679c\u5728\u4f60\u7684\u8868\u4e2d, \u6709\u67d0\u4e2a\u5b57\u6bb5\u4f60\u603b\u8981\u4f1a\u7ecf\u5e38\u7528\u6765\u505a\u641c\u7d22, \u90a3\u4e48, \u8bf7\u4e3a\u5176\u5efa\u7acb\u7d22\u5f15\u5427\u3002\n\n<h2 id=\"mysql5\">5\u3001\u5728Join\u8868\u7684\u65f6\u5019\u4f7f\u7528\u76f8\u5f53\u7c7b\u578b\u7684\u5217, \u5e76\u5c06\u5176\u7d22\u5f15</h2>\n\n\u5982\u679c\u4f60\u7684\u5e94\u7528\u7a0b\u5e8f\u6709\u5f88\u591aJOIN\u67e5\u8be2, \u4f60\u5e94\u8be5\u786e\u8ba4\u4e24\u4e2a\u8868\u4e2dJoin\u7684\u5b57\u6bb5\u662f\u88ab\u5efa\u8fc7\u7d22\u5f15\u7684\u3002\u8fd9\u6837, MySQL\u5185\u90e8\u4f1a\u542f\u52a8\u4e3a\u4f60\u4f18\u5316Join\u7684SQL\u8bed\u53e5\u7684\u673a\u5236\u3002\n\n\u800c\u4e14, \u8fd9\u4e9b\u88ab\u7528\u6765Join\u7684\u5b57\u6bb5, \u5e94\u8be5\u662f\u76f8\u540c\u7684\u7c7b\u578b\u7684\u3002\u4f8b\u5982: \u5982\u679c\u4f60\u8981\u628aDECIMAL\u5b57\u6bb5\u548c\u4e00\u4e2aINT\u5b57\u6bb5JOIN\u5728\u4e00\u8d77, MYSQL\u5c31\u65e0\u6cd5\u4f7f\u7528\u4ed6\u4eec\u7684\u7d22\u5f15\u3002\u5bf9\u4e8e\u90a3\u4e9bSTRING\u7c7b\u578b, \u8fd8\u9700\u8981\u6709\u76f8\u540c\u7684\u5b57\u7b26\u96c6\u624d\u884c\uff08\u4e24\u4e2a\u8868\u7684\u5b57\u7b26\u96c6\u6709\u53ef\u80fd\u4e0d\u4e00\u6837\uff09\n\n<h2 id=\"mysql6\">6\u3001\u5343\u4e07\u4e0d\u8981ORDER BY RAND()</h2>\n\n<h2 id=\"mysql7\">7\u3001\u907f\u514dSELECT *</h2>\n\n\u4ece\u6570\u636e\u5e93\u91cc\u8bfb\u51fa\u8d8a\u591a\u7684\u6570\u636e, \u90a3\u4e48\u67e5\u8be2\u5c31\u4f1a\u53d8\u5f97\u8d8a\u6162\u3002\u5e76\u4e14, \u5982\u679c\u4f60\u7684\u6570\u636e\u5e93\u670d\u52a1\u5668\u548cWEB\u670d\u52a1\u5668\u662f\u4e24\u53f0\u72ec\u7acb\u7684\u670d\u52a1\u5668\u7684\u8bdd, \u8fd9\u8fd8\u4f1a\u589e\u52a0\u7f51\u7edc\u4f20\u8f93\u7684\u8d1f\u8f7d\u3002\n\n\u6240\u4ee5, \u4f60\u5e94\u8be5\u517b\u6210\u4e00\u4e2a\u9700\u8981\u4ec0\u4e48\u5c31\u53d6\u4ec0\u4e48\u7684\u597d\u7684\u4e60\u60ef\u3002\n```\n\n\t// \u4e0d\u63a8\u8350\n\t$r = mysql_query(\"SELECT * FROM user WHERE user_id = 1\");\n\t$d = mysql_fetch_assoc($r); echo \"Welcome {$d['username']}\";\n\t// \u63a8\u8350\n\t$r = mysql_query(\"SELECT username FROM user WHERE user_id = 1\");\n\t$d = mysql_fetch_assoc($r); echo \"Welcome {$d['username']}\";\n```\n<h2 id=\"mysql8\">8\u3001\u6c38\u8fdc\u4e3a\u4e24\u5f20\u8868\u8bbe\u7f6e\u4e00\u4e2aID</h2>\n\n\u6211\u4eec\u5e94\u8be5\u4e3a\u6570\u636e\u5e93\u91cc\u7684\u6bcf\u5f20\u8868\u90fd\u8bbe\u7f6e\u4e00\u4e2aID\u4f5c\u4e3a\u5176\u4e3b\u952e, \u800c\u6700\u597d\u7684\u662f\u4e00\u4e2aINT\u578b\uff08\u63a8\u8350\u4f7f\u7528UNSIGNED\uff09, \u5e76\u8bbe\u7f6e\u4e0a\u81ea\u52a8\u589e\u957f\u7684AUTO INCREMENT\u6807\u5fd7\u3002\n\n\u5c31\u7b97\u662f\u4f60 users \u8868\u6709\u4e00\u4e2a\u4e3b\u952e\u53eb \u201cemail\u201d\u7684\u5b57\u6bb5, \u4f60\u4e5f\u522b\u8ba9\u5b83\u6210\u4e3a\u4e3b\u952e\u3002\u4f7f\u7528 VARCHAR \u7c7b\u578b\u6765\u5f53\u4e3b\u952e\u4f1a\u4f7f\u7528\u5f97\u6027\u80fd\u4e0b\u964d\u3002\u53e6\u5916, \u5728\u4f60\u7684\u7a0b\u5e8f\u4e2d, \u4f60\u5e94\u8be5\u4f7f\u7528\u8868\u7684ID\u6765\u6784\u9020\u4f60\u7684\u6570\u636e\u7ed3\u6784\u3002 \u800c\u4e14, \u5728MySQL\u6570\u636e\u5f15\u64ce\u4e0b, \u8fd8\u6709\u4e00\u4e9b\u64cd\u4f5c\u9700\u8981\u4f7f\u7528\u4e3b\u952e, \u5728\u8fd9\u4e9b\u60c5\u51b5\u4e0b, \u4e3b\u952e\u7684\u6027\u80fd\u548c\u8bbe\u7f6e\u53d8\u5f97\u975e\u5e38\u91cd\u8981, \u6bd4\u5982, \u96c6\u7fa4, \u5206\u533a\u2026\u2026\n\n<h2 id=\"mysql9\">9\u3001\u4f7f\u7528 ENUM \u800c\u4e0d\u662f VARCHAR \uff1f</h2>\n\nENUM \u7c7b\u578b\u662f\u975e\u5e38\u5feb\u548c\u7d27\u51d1\u7684\u3002\u5728\u5b9e\u9645\u4e0a, \u5176\u4fdd\u5b58\u7684\u662f TINYINT, \u4f46\u5176\u5916\u8868\u4e0a\u663e\u793a\u4e3a\u5b57\u7b26\u4e32\u3002\u8fd9\u6837\u4e00\u6765, \u7528\u8fd9\u4e2a\u5b57\u6bb5\u6765\u505a\u4e00\u4e9b\u9009\u9879\u5217\u8868\u53d8\u5f97\u76f8\u5f53\u7684\u5b8c\u7f8e\u3002\n\n\u5982\u679c\u4f60\u6709\u4e00\u4e2a\u5b57\u6bb5, \u6bd4\u5982\u201c\u6027\u522b\u201d, \u201c\u56fd\u5bb6\u201d, \u201c\u6c11\u65cf\u201d, \u201c\u72b6\u6001\u201d\u6216\u201c\u90e8\u95e8\u201d, \u4f60\u77e5\u9053\u8fd9\u4e9b\u5b57\u6bb5\u7684\u53d6\u503c\u662f\u6709\u9650\u800c\u4e14\u56fa\u5b9a\u7684, \u90a3\u4e48, \u4f60\u5e94\u8be5\u4f7f\u7528 ENUM \u800c\u4e0d\u662f VARCHAR\u3002\n\n<h2 id=\"mysql10\">10\u3001\u4ece PROCEDURE ANALYSE() \u53d6\u5f97\u5efa\u8bae \uff1f</h2>\n\nPROCEDURE ANALYSE() \u4f1a\u8ba9 MySQL \u5e2e\u4f60\u53bb\u5206\u6790\u4f60\u7684\u5b57\u6bb5\u548c\u5176\u5b9e\u9645\u7684\u6570\u636e, \u5e76\u4f1a\u7ed9\u4f60\u4e00\u4e9b\u6709\u7528\u7684\u5efa\u8bae\u3002\u53ea\u6709\u8868\u4e2d\u6709\u5b9e\u9645\u7684\u6570\u636e, \u8fd9\u4e9b\u5efa\u8bae\u624d\u4f1a\u53d8\u5f97\u6709\u7528, \u56e0\u4e3a\u8981\u505a\u4e00\u4e9b\u5927\u7684\u51b3\u5b9a\u662f\u9700\u8981\u6709\u6570\u636e\u4f5c\u4e3a\u57fa\u7840\u7684\u3002\n\n\u4f8b\u5982, \u5982\u679c\u4f60\u521b\u5efa\u4e86\u4e00\u4e2a INT \u5b57\u6bb5\u4f5c\u4e3a\u4f60\u7684\u4e3b\u952e, \u7136\u800c\u5e76\u6ca1\u6709\u592a\u591a\u7684\u6570\u636e, \u90a3\u4e48, PROCEDURE ANALYSE()\u4f1a\u5efa\u8bae\u4f60\u628a\u8fd9\u4e2a\u5b57\u6bb5\u7684\u7c7b\u578b\u6539\u6210 MEDIUMINT \u3002\u6216\u662f\u4f60\u4f7f\u7528\u4e86\u4e00\u4e2a VARCHAR \u5b57\u6bb5, \u56e0\u4e3a\u6570\u636e\u4e0d\u591a, \u4f60\u53ef\u80fd\u4f1a\u5f97\u5230\u4e00\u4e2a\u8ba9\u4f60\u628a\u5b83\u6539\u6210 ENUM \u7684\u5efa\u8bae\u3002\u8fd9\u4e9b\u5efa\u8bae, \u90fd\u662f\u53ef\u80fd\u56e0\u4e3a\u6570\u636e\u4e0d\u591f\u591a, \u6240\u4ee5\u51b3\u7b56\u505a\u5f97\u5c31\u4e0d\u591f\u51c6\u3002\n\n<h2 id=\"mysql11\">11\u3001\u5c3d\u53ef\u80fd\u7684\u4f7f\u7528 NOT NULL</h2>\n\n\u9664\u975e\u4f60\u6709\u4e00\u4e2a\u5f88\u7279\u522b\u7684\u539f\u56e0\u53bb\u4f7f\u7528 NULL \u503c, \u4f60\u5e94\u8be5\u603b\u662f\u8ba9\u4f60\u7684\u5b57\u6bb5\u4fdd\u6301 NOT NULL\u3002\u8fd9\u770b\u8d77\u6765\u597d\u50cf\u6709\u70b9\u4e89\u8bae, \u8bf7\u5f80\u4e0b\u770b\u3002\n\n\u9996\u5148, \u95ee\u95ee\u4f60\u81ea\u5df1\u201cEmpty\u201d\u548c\u201cNULL\u201d\u6709\u591a\u5927\u7684\u533a\u522b\uff08\u5982\u679c\u662fINT, \u90a3\u5c31\u662f0\u548cNULL\uff09\uff1f\u5982\u679c\u4f60\u89c9\u5f97\u5b83\u4eec\u4e4b\u95f4\u6ca1\u6709\u4ec0\u4e48\u533a\u522b, \u90a3\u4e48\u4f60\u5c31\u4e0d\u8981\u4f7f\u7528NULL\u3002\uff08\u4f60\u77e5\u9053\u5417\uff1f\u5728 Oracle \u91cc, NULL \u548c Empty \u7684\u5b57\u7b26\u4e32\u662f\u4e00\u6837\u7684\uff01)\n\n\u4e0d\u8981\u4ee5\u4e3a NULL \u4e0d\u9700\u8981\u7a7a\u95f4, \u5176\u9700\u8981\u989d\u5916\u7684\u7a7a\u95f4, \u5e76\u4e14, \u5728\u4f60\u8fdb\u884c\u6bd4\u8f83\u7684\u65f6\u5019, \u4f60\u7684\u7a0b\u5e8f\u4f1a\u66f4\u590d\u6742\u3002 \u5f53\u7136, \u8fd9\u91cc\u5e76\u4e0d\u662f\u8bf4\u4f60\u5c31\u4e0d\u80fd\u4f7f\u7528NULL\u4e86, \u73b0\u5b9e\u60c5\u51b5\u662f\u5f88\u590d\u6742\u7684, \u4f9d\u7136\u4f1a\u6709\u4e9b\u60c5\u51b5\u4e0b, \u4f60\u9700\u8981\u4f7f\u7528NULL\u503c\u3002\n\n\u4e0b\u9762\u6458\u81eaMySQL\u81ea\u5df1\u7684\u6587\u6863\n\n*\u201cNULL columns require additional space in the row to record whether their values are NULL. For MyISAM tables, each NULL column takes one bit extra, rounded up to the nearest byte.\u201d*\n\n<h2 id=\"mysql12\">12\u3001\u628aIP\u5730\u5740\u5b58\u6210 UNSIGNED INT</h2>\n\n\u5f88\u591a\u7a0b\u5e8f\u5458\u90fd\u4f1a\u521b\u5efa\u4e00\u4e2a VARCHAR(15) \u5b57\u6bb5\u6765\u5b58\u653e\u5b57\u7b26\u4e32\u5f62\u5f0f\u7684IP\u800c\u4e0d\u662f\u6574\u5f62\u7684IP\u3002\u5982\u679c\u4f60\u7528\u6574\u5f62\u6765\u5b58\u653e, \u53ea\u9700\u89814\u4e2a\u5b57\u8282, \u5e76\u4e14\u4f60\u53ef\u4ee5\u6709\u5b9a\u957f\u7684\u5b57\u6bb5\u3002\u800c\u4e14, \u8fd9\u4f1a\u4e3a\u4f60\u5e26\u6765\u67e5\u8be2\u4e0a\u7684\u4f18\u52bf, \u5c24\u5176\u662f\u5f53\u4f60\u9700\u8981\u4f7f\u7528\u8fd9\u6837\u7684WHERE\u6761\u4ef6: IP between ip1 and ip2\u3002\n\n\u6211\u4eec\u5fc5\u9700\u8981\u4f7f\u7528UNSIGNED INT, \u56e0\u4e3a IP\u5730\u5740\u4f1a\u4f7f\u7528\u6574\u4e2a32\u4f4d\u7684\u65e0\u7b26\u53f7\u6574\u5f62\n\n<h2 id=\"mysql13\">13\u3001\u56fa\u5b9a\u957f\u5ea6\u7684\u8868\u4f1a\u66f4\u5feb</h2>\n\n\u5982\u679c\u8868\u4e2d\u7684\u6240\u6709\u5b57\u6bb5\u90fd\u662f\u201c\u56fa\u5b9a\u957f\u5ea6\u201d\u7684, \u6574\u4e2a\u8868\u4f1a\u88ab\u8ba4\u4e3a\u662f \u201cstatic\u201d \u6216 \u201cfixed-length\u201d\u3002 \u4f8b\u5982, \u8868\u4e2d\u6ca1\u6709\u5982\u4e0b\u7c7b\u578b\u7684\u5b57\u6bb5:  VARCHAR, TEXT, BLOB\u3002\u53ea\u8981\u4f60\u5305\u62ec\u4e86\u5176\u4e2d\u4e00\u4e2a\u8fd9\u4e9b\u5b57\u6bb5, \u90a3\u4e48\u8fd9\u4e2a\u8868\u5c31\u4e0d\u662f\u201c\u56fa\u5b9a\u957f\u5ea6\u9759\u6001\u8868\u201d\u4e86, \u8fd9\u6837, MySQL \u5f15\u64ce\u4f1a\u7528\u53e6\u4e00\u79cd\u65b9\u6cd5\u6765\u5904\u7406\u3002\n\n\u56fa\u5b9a\u957f\u5ea6\u7684\u8868\u4f1a\u63d0\u9ad8\u6027\u80fd, \u56e0\u4e3aMySQL\u641c\u5bfb\u5f97\u4f1a\u66f4\u5feb\u4e00\u4e9b, \u56e0\u4e3a\u8fd9\u4e9b\u56fa\u5b9a\u7684\u957f\u5ea6\u662f\u5f88\u5bb9\u6613\u8ba1\u7b97\u4e0b\u4e00\u4e2a\u6570\u636e\u7684\u504f\u79fb\u91cf\u7684, \u6240\u4ee5\u8bfb\u53d6\u7684\u81ea\u7136\u4e5f\u4f1a\u5f88\u5feb\u3002\u800c\u5982\u679c\u5b57\u6bb5\u4e0d\u662f\u5b9a\u957f\u7684, \u90a3\u4e48, \u6bcf\u4e00\u6b21\u8981\u627e\u4e0b\u4e00\u6761\u7684\u8bdd, \u9700\u8981\u7a0b\u5e8f\u627e\u5230\u4e3b\u952e\u3002\n\n\u5e76\u4e14, \u56fa\u5b9a\u957f\u5ea6\u7684\u8868\u4e5f\u66f4\u5bb9\u6613\u88ab\u7f13\u5b58\u548c\u91cd\u5efa\u3002\u4e0d\u8fc7, \u552f\u4e00\u7684\u526f\u4f5c\u7528\u662f, \u56fa\u5b9a\u957f\u5ea6\u7684\u5b57\u6bb5\u4f1a\u6d6a\u8d39\u4e00\u4e9b\u7a7a\u95f4, \u56e0\u4e3a\u5b9a\u957f\u7684\u5b57\u6bb5\u65e0\u8bba\u4f60\u7528\u4e0d\u7528, \u4ed6\u90fd\u662f\u8981\u5206\u914d\u90a3\u4e48\u591a\u7684\u7a7a\u95f4\u3002\n\n<h2 id=\"mysql14\">14\u3001\u5782\u76f4\u5206\u5272</h2>\n\n\u201c\u5782\u76f4\u5206\u5272\u201d\u662f\u4e00\u79cd\u628a\u6570\u636e\u5e93\u4e2d\u7684\u8868\u6309\u5217\u53d8\u6210\u51e0\u5f20\u8868\u7684\u65b9\u6cd5, \u8fd9\u6837\u53ef\u4ee5\u964d\u4f4e\u8868\u7684\u590d\u6742\u5ea6\u548c\u5b57\u6bb5\u7684\u6570\u76ee, \u4ece\u800c\u8fbe\u5230\u4f18\u5316\u7684\u76ee\u7684\u3002\uff08\u4ee5\u524d, \u5728\u94f6\u884c\u505a\u8fc7\u9879\u76ee, \u89c1\u8fc7\u4e00\u5f20\u8868\u6709100\u591a\u4e2a\u5b57\u6bb5, \u5f88\u6050\u6016\uff09\n\n\u793a\u4f8b\u4e00: \u5728Users\u8868\u4e2d\u6709\u4e00\u4e2a\u5b57\u6bb5\u662f\u5bb6\u5ead\u5730\u5740, \u8fd9\u4e2a\u5b57\u6bb5\u662f\u53ef\u9009\u5b57\u6bb5, \u76f8\u6bd4\u8d77, \u800c\u4e14\u4f60\u5728\u6570\u636e\u5e93\u64cd\u4f5c\u7684\u65f6\u5019\u9664\u4e86\u4e2a\u4eba\u4fe1\u606f\u5916, \u4f60\u5e76\u4e0d\u9700\u8981\u7ecf\u5e38\u8bfb\u53d6\u6216\u662f\u6539\u5199\u8fd9\u4e2a\u5b57\u6bb5\u3002\u90a3\u4e48, \u4e3a\u4ec0\u4e48\u4e0d\u628a\u4ed6\u653e\u5230\u53e6\u5916\u4e00\u5f20\u8868\u4e2d\u5462\uff1f \u8fd9\u6837\u4f1a\u8ba9\u4f60\u7684\u8868\u6709\u66f4\u597d\u7684\u6027\u80fd, \u5927\u5bb6\u60f3\u60f3\u662f\u4e0d\u662f, \u5927\u91cf\u7684\u65f6\u5019, \u6211\u5bf9\u4e8e\u7528\u6237\u8868\u6765\u8bf4, \u53ea\u6709\u7528\u6237ID, \u7528\u6237\u540d, \u53e3\u4ee4, \u7528\u6237\u89d2\u8272\u7b49\u4f1a\u88ab\u7ecf\u5e38\u4f7f\u7528\u3002\u5c0f\u4e00\u70b9\u7684\u8868\u603b\u662f\u4f1a\u6709\u597d\u7684\u6027\u80fd\u3002\n\n\u793a\u4f8b\u4e8c:  \u4f60\u6709\u4e00\u4e2a\u53eb \u201clast_login\u201d \u7684\u5b57\u6bb5, \u5b83\u4f1a\u5728\u6bcf\u6b21\u7528\u6237\u767b\u5f55\u65f6\u88ab\u66f4\u65b0\u3002\u4f46\u662f, \u6bcf\u6b21\u66f4\u65b0\u65f6\u4f1a\u5bfc\u81f4\u8be5\u8868\u7684\u67e5\u8be2\u7f13\u5b58\u88ab\u6e05\u7a7a\u3002\u6240\u4ee5, \u4f60\u53ef\u4ee5\u628a\u8fd9\u4e2a\u5b57\u6bb5\u653e\u5230\u53e6\u4e00\u4e2a\u8868\u4e2d, \u8fd9\u6837\u5c31\u4e0d\u4f1a\u5f71\u54cd\u4f60\u5bf9\u7528\u6237ID, \u7528\u6237\u540d, \u7528\u6237\u89d2\u8272\u7684\u4e0d\u505c\u5730\u8bfb\u53d6\u4e86, \u56e0\u4e3a\u67e5\u8be2\u7f13\u5b58\u4f1a\u5e2e\u4f60\u589e\u52a0\u5f88\u591a\u6027\u80fd\u3002\n\n\u53e6\u5916, \u4f60\u9700\u8981\u6ce8\u610f\u7684\u662f, \u8fd9\u4e9b\u88ab\u5206\u51fa\u53bb\u7684\u5b57\u6bb5\u6240\u5f62\u6210\u7684\u8868, \u4f60\u4e0d\u4f1a\u7ecf\u5e38\u6027\u5730\u53bbJoin\u4ed6\u4eec, \u4e0d\u7136\u7684\u8bdd, \u8fd9\u6837\u7684\u6027\u80fd\u4f1a\u6bd4\u4e0d\u5206\u5272\u65f6\u8fd8\u8981\u5dee, \u800c\u4e14, \u4f1a\u662f\u6781\u6570\u7ea7\u7684\u4e0b\u964d\u3002\n\n<h2 id=\"mysql15\">15\u3001\u62c6\u5206\u5927\u7684 DELETE \u6216 INSERT \u8bed\u53e5</h2>\n\n\u5982\u679c\u4f60\u9700\u8981\u5728\u4e00\u4e2a\u5728\u7ebf\u7684\u7f51\u7ad9\u4e0a\u53bb\u6267\u884c\u4e00\u4e2a\u5927\u7684 DELETE \u6216 INSERT \u67e5\u8be2, \u4f60\u9700\u8981\u975e\u5e38\u5c0f\u5fc3, \u8981\u907f\u514d\u4f60\u7684\u64cd\u4f5c\u8ba9\u4f60\u7684\u6574\u4e2a\u7f51\u7ad9\u505c\u6b62\u76f8\u5e94\u3002\u56e0\u4e3a\u8fd9\u4e24\u4e2a\u64cd\u4f5c\u662f\u4f1a\u9501\u8868\u7684, \u8868\u4e00\u9501\u4f4f\u4e86, \u522b\u7684\u64cd\u4f5c\u90fd\u8fdb\u4e0d\u6765\u4e86\u3002\n\nApache \u4f1a\u6709\u5f88\u591a\u7684\u5b50\u8fdb\u7a0b\u6216\u7ebf\u7a0b\u3002\u6240\u4ee5, \u5176\u5de5\u4f5c\u8d77\u6765\u76f8\u5f53\u6709\u6548\u7387, \u800c\u6211\u4eec\u7684\u670d\u52a1\u5668\u4e5f\u4e0d\u5e0c\u671b\u6709\u592a\u591a\u7684\u5b50\u8fdb\u7a0b, \u7ebf\u7a0b\u548c\u6570\u636e\u5e93\u94fe\u63a5, \u8fd9\u662f\u6781\u5927\u7684\u5360\u670d\u52a1\u5668\u8d44\u6e90\u7684\u4e8b\u60c5, \u5c24\u5176\u662f\u5185\u5b58\u3002\n\n\u5982\u679c\u4f60\u628a\u4f60\u7684\u8868\u9501\u4e0a\u4e00\u6bb5\u65f6\u95f4, \u6bd4\u598230\u79d2\u949f, \u90a3\u4e48\u5bf9\u4e8e\u4e00\u4e2a\u6709\u5f88\u9ad8\u8bbf\u95ee\u91cf\u7684\u7ad9\u70b9\u6765\u8bf4, \u8fd930\u79d2\u6240\u79ef\u7d2f\u7684\u8bbf\u95ee\u8fdb\u7a0b/\u7ebf\u7a0b, \u6570\u636e\u5e93\u94fe\u63a5, \u6253\u5f00\u7684\u6587\u4ef6\u6570, \u53ef\u80fd\u4e0d\u4ec5\u4ec5\u4f1a\u8ba9\u4f60\u6ccaWEB\u670d\u52a1Crash, \u8fd8\u53ef\u80fd\u4f1a\u8ba9\u4f60\u7684\u6574\u53f0\u670d\u52a1\u5668\u9a6c\u4e0a\u6302\u4e86\u3002\n\n\u6240\u4ee5, \u5982\u679c\u4f60\u6709\u4e00\u4e2a\u5927\u7684\u5904\u7406, \u4f60\u5b9a\u4f60\u4e00\u5b9a\u628a\u5176\u62c6\u5206, \u4f7f\u7528 LIMIT \u6761\u4ef6\u662f\u4e00\u4e2a\u597d\u7684\u65b9\u6cd5\u3002\u4e0b\u9762\u662f\u4e00\u4e2a\u793a\u4f8b:\n```\n\n\twhile (1) { //\u6bcf\u6b21\u53ea\u505a1000\u6761\n\t\tmysql_query(\"DELETE FROM logs WHERE log_date <= '2009-11-01' LIMIT 1000\");\n\t\tif (mysql_affected_rows() == 0) {\n\t\t\t// \u6ca1\u5f97\u53ef\u5220\u4e86, \u9000\u51fa\uff01!\n\t\t\tbreak;\n\t\t}\n\t\t// \u6bcf\u6b21\u90fd\u8981\u4f11\u606f\u4e00\u4f1a\u513f usleep(50000);\n\t}\n```\n<h2 id=\"mysql16\">16\u3001 \u8d8a\u5c0f\u7684\u5217\u4f1a\u8d8a\u5feb</h2>\n\n\u5bf9\u4e8e\u5927\u591a\u6570\u7684\u6570\u636e\u5e93\u5f15\u64ce\u6765\u8bf4, \u786c\u76d8\u64cd\u4f5c\u53ef\u80fd\u662f\u6700\u91cd\u5927\u7684\u74f6\u9888\u3002\u6240\u4ee5, \u628a\u4f60\u7684\u6570\u636e\u53d8\u5f97\u7d27\u51d1\u4f1a\u5bf9\u8fd9\u79cd\u60c5\u51b5\u975e\u5e38\u6709\u5e2e\u52a9, \u56e0\u4e3a\u8fd9\u51cf\u5c11\u4e86\u5bf9\u786c\u76d8\u7684\u8bbf\u95ee\u3002\n\n\u53c2\u770b MySQL \u7684\u6587\u6863 Storage Requirements \u67e5\u770b\u6240\u6709\u7684\u6570\u636e\u7c7b\u578b\u3002\n\n\u5982\u679c\u4e00\u4e2a\u8868\u53ea\u4f1a\u6709\u51e0\u5217\u7f62\u4e86\uff08\u6bd4\u5982\u8bf4\u5b57\u5178\u8868, \u914d\u7f6e\u8868\uff09, \u90a3\u4e48, \u6211\u4eec\u5c31\u6ca1\u6709\u7406\u7531\u4f7f\u7528 INT \u6765\u505a\u4e3b\u952e, \u4f7f\u7528 MEDIUMINT, SMALLINT \u6216\u662f\u66f4\u5c0f\u7684 TINYINT \u4f1a\u66f4\u7ecf\u6d4e\u4e00\u4e9b\u3002\u5982\u679c\u4f60\u4e0d\u9700\u8981\u8bb0\u5f55\u65f6\u95f4, \u4f7f\u7528 DATE \u8981\u6bd4 DATETIME \u597d\u5f97\u591a\u3002\n\n\u5f53\u7136, \u4f60\u4e5f\u9700\u8981\u7559\u591f\u8db3\u591f\u7684\u6269\u5c55\u7a7a\u95f4, \u4e0d\u7136, \u4f60\u65e5\u540e\u6765\u5e72\u8fd9\u4e2a\u4e8b, \u4f60\u4f1a\u6b7b\u7684\u5f88\u96be\u770b, \u53c2\u770bSlashdot\u7684\u4f8b\u5b50\uff082009\u5e7411\u670806\u65e5\uff09, \u4e00\u4e2a\u7b80\u5355\u7684ALTER TABLE\u8bed\u53e5\u82b1\u4e863\u4e2a\u591a\u5c0f\u65f6, \u56e0\u4e3a\u91cc\u9762\u6709\u4e00\u5343\u516d\u767e\u4e07\u6761\u6570\u636e\u3002\n\n<h2 id=\"mysql17\">17\u3001\u9009\u62e9\u4e00\u4e2a\u6b63\u786e\u7684\u5b58\u50a8\u5f15\u64ce</h2>\n\n\u5728 MySQL \u4e2d\u6709\u4e24\u4e2a\u5b58\u50a8\u5f15\u64ce MyISAM \u548c InnoDB, \u6bcf\u4e2a\u5f15\u64ce\u90fd\u6709\u5229\u6709\u5f0a\u3002\u9177\u58f3\u4ee5\u524d\u6587\u7ae0\u300aMySQL: InnoDB \u8fd8\u662f MyISAM?\u300b\u8ba8\u8bba\u548c\u8fd9\u4e2a\u4e8b\u60c5\u3002\n\nMyISAM \u9002\u5408\u4e8e\u4e00\u4e9b\u9700\u8981\u5927\u91cf\u67e5\u8be2\u7684\u5e94\u7528, \u4f46\u5176\u5bf9\u4e8e\u6709\u5927\u91cf\u5199\u64cd\u4f5c\u5e76\u4e0d\u662f\u5f88\u597d\u3002\u751a\u81f3\u4f60\u53ea\u662f\u9700\u8981update\u4e00\u4e2a\u5b57\u6bb5, \u6574\u4e2a\u8868\u90fd\u4f1a\u88ab\u9501\u8d77\u6765, \u800c\u522b\u7684\u8fdb\u7a0b, \u5c31\u7b97\u662f\u8bfb\u8fdb\u7a0b\u90fd\u65e0\u6cd5\u64cd\u4f5c\u76f4\u5230\u8bfb\u64cd\u4f5c\u5b8c\u6210\u3002\u53e6\u5916, MyISAM \u5bf9\u4e8e SELECT COUNT(*) \u8fd9\u7c7b\u7684\u8ba1\u7b97\u662f\u8d85\u5feb\u65e0\u6bd4\u7684\u3002\n\nInnoDB \u7684\u8d8b\u52bf\u4f1a\u662f\u4e00\u4e2a\u975e\u5e38\u590d\u6742\u7684\u5b58\u50a8\u5f15\u64ce, \u5bf9\u4e8e\u4e00\u4e9b\u5c0f\u7684\u5e94\u7528, \u5b83\u4f1a\u6bd4 MyISAM \u8fd8\u6162\u3002\u4ed6\u662f\u5b83\u652f\u6301\u201c\u884c\u9501\u201d , \u4e8e\u662f\u5728\u5199\u64cd\u4f5c\u6bd4\u8f83\u591a\u7684\u65f6\u5019, \u4f1a\u66f4\u4f18\u79c0\u3002\u5e76\u4e14, \u4ed6\u8fd8\u652f\u6301\u66f4\u591a\u7684\u9ad8\u7ea7\u5e94\u7528, \u6bd4\u5982: \u4e8b\u52a1\u3002\n\n<h2 id=\"mysql18\">18\u3001\u5c0f\u5fc3\u201c\u6c38\u4e45\u94fe\u63a5\u201d</h2>\n\n\u201c\u6c38\u4e45\u94fe\u63a5\u201d\u7684\u76ee\u7684\u662f\u7528\u6765\u51cf\u5c11\u91cd\u65b0\u521b\u5efaMySQL\u94fe\u63a5\u7684\u6b21\u6570\u3002\u5f53\u4e00\u4e2a\u94fe\u63a5\u88ab\u521b\u5efa\u4e86, \u5b83\u4f1a\u6c38\u8fdc\u5904\u5728\u8fde\u63a5\u7684\u72b6\u6001, \u5c31\u7b97\u662f\u6570\u636e\u5e93\u64cd\u4f5c\u5df2\u7ecf\u7ed3\u675f\u4e86\u3002\u800c\u4e14, \u81ea\u4ece\u6211\u4eec\u7684Apache\u5f00\u59cb\u91cd\u7528\u5b83\u7684\u5b50\u8fdb\u7a0b\u540e\u2014\u2014\u4e5f\u5c31\u662f\u8bf4, \u4e0b\u4e00\u6b21\u7684HTTP\u8bf7\u6c42\u4f1a\u91cd\u7528Apache\u7684\u5b50\u8fdb\u7a0b, \u5e76\u91cd\u7528\u76f8\u540c\u7684 MySQL \u94fe\u63a5\u3002\n\nPHP\u624b\u518c: mysql_pconnect()\n\n\u5728\u7406\u8bba\u4e0a\u6765\u8bf4, \u8fd9\u542c\u8d77\u6765\u975e\u5e38\u7684\u4e0d\u9519\u3002\u4f46\u662f\u4ece\u4e2a\u4eba\u7ecf\u9a8c\uff08\u4e5f\u662f\u5927\u591a\u6570\u4eba\u7684\uff09\u4e0a\u6765\u8bf4, \u8fd9\u4e2a\u529f\u80fd\u5236\u9020\u51fa\u6765\u7684\u9ebb\u70e6\u4e8b\u66f4\u591a\u3002\u56e0\u4e3a, \u4f60\u53ea\u6709\u6709\u9650\u7684\u94fe\u63a5\u6570, \u5185\u5b58\u95ee\u9898, \u6587\u4ef6\u53e5\u67c4\u6570, \u7b49\u7b49\u3002\n\n\u800c\u4e14, Apache \u8fd0\u884c\u5728\u6781\u7aef\u5e76\u884c\u7684\u73af\u5883\u4e2d, \u4f1a\u521b\u5efa\u5f88\u591a\u5f88\u591a\u7684\u4e86\u8fdb\u7a0b\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u8fd9\u79cd\u201c\u6c38\u4e45\u94fe\u63a5\u201d\u7684\u673a\u5236\u5de5\u4f5c\u5730\u4e0d\u597d\u7684\u539f\u56e0\u3002\u5728\u4f60\u51b3\u5b9a\u8981\u4f7f\u7528\u201c\u6c38\u4e45\u94fe\u63a5\u201d\u4e4b\u524d, \u4f60\u9700\u8981\u597d\u597d\u5730\u8003\u8651\u4e00\u4e0b\u4f60\u7684\u6574\u4e2a\u7cfb\u7edf\u7684\u67b6\u6784\u3002\n\n<h2 id=\"mysql19\">19\u3001\u5f53\u67e5\u8be2\u8f83\u6162\u7684\u65f6\u5019, \u53ef\u7528Join\u6765\u6539\u5199\u4e00\u4e0b\u8be5\u67e5\u8be2\u6765\u8fdb\u884c\u4f18\u5316</h2>\n```\n\n    mysql> select sql_no_cache * from guang_deal_outs where deal_id in (select id from guang_deals where id = 100017151) ;\n\tEmpty set (18.87 sec)\n\tmysql> select sql_no_cache a.* from guang_deal_outs a inner join guang_deals b on a.deal_id = b.id where b.id = 100017151;\n\tEmpty set (0.01 sec)\n```\n\u539f\u56e0\n```\n\n\tmysql> desc select sql_no_cache * from guang_deal_outs where deal_id in (select id from guang_deals where id = 100017151) ;\n\t+----+--------------------+-----------------+-------+---------------+---------+---------+-------+----------+-------------+ | id | select_type        | table           | type  | possible_keys | key     | key_len | ref   | rows     | Extra       | +----+--------------------+-----------------+-------+---------------+---------    +---------+-------+----------+-------------+ |  1 | PRIMARY            | guang_deal_outs | ALL   | NULL          | NULL    |     NULL    | NULL  | 18633779 | Using where | |  2 | DEPENDENT SUBQUERY | guang_deals     | const | PRIMARY       | PRIMARY |     4       | const |        1 | Using index | +----+--------------------+-----------------+-------+---------------+---------    +---------+-------+----------+-------------+ 2 rows in set (0.04 sec)\n\tmysql> desc select sql_no_cache a.* from guang_deal_outs a inner join guang_deals b on a.deal_id = b.id where b.id = 100017151;\n\t+----+-------------+-------+-------+----------------------    +----------------------+---------+-------+------+-------------+ | id | select_type | table | type  | possible_keys        | key                      | key_len | ref   | rows | Extra       | +----+-------------+-------+-------+----------------------    +----------------------+---------+-------+------+-------------+ |  1 | SIMPLE      | b     | const | PRIMARY              | PRIMARY                  | 4       | const |    1 | Using index | |  1 | SIMPLE      | a     | ref   | idx_guang_dlout_dlid |     idx_guang_dlout_dlid | 4       | const |    1 |             | +----+-------------+-------+-------+----------------------    +----------------------+---------+-------+------+-------------+    2 rows in set (0.05 sec)\n```\n\u5176\u5b9e\u5728  guang_deal_outs \u5728deal_id \u4e0a\u4e5f\u662f\u6709\u7d22\u5f15\u7684\u3002 \u5176\u5b9e\u6211\u60f3\u628a\u5b50\u67e5\u8be2\u8bbe\u7f6e\u4e3a\n```\n\n\tselect * from guang_deal_outs where deal_id in (select id from guang_deals where id = 100017151);\n```\n\u53d8\u6210\u4e0b\u9762\u7684\u6837\u5b50\n```mysql\n\n\tselect * from guang_deal_outs where deal_id in (100017151);\n```\n\u4f46\u4e0d\u5e78\u7684\u662f, \u5b9e\u9645\u60c5\u51b5\u6b63\u597d\u76f8\u53cd\u3002MySQL\u8bd5\u56fe\u8ba9\u5b83\u548c\u5916\u9762\u7684\u8868\u4ea7\u751f\u8054\u7cfb\u6765\u201c\u5e2e\u52a9\u201d\u4f18\u5316\u67e5\u8be2, \u5b83\u8ba4\u4e3a\u4e0b\u9762\u7684exists\u5f62\u5f0f\u66f4\u6709\u6548\u7387\n```mysql\n\n    select * from guang_deal_outs where exists (select * from guang_deals where id = 100017151 and id = guang_deal_outs.deal_id);\n```\n\u8fd9\u79cdin\u5b50\u67e5\u8be2\u7684\u5f62\u5f0f, \u5728\u5916\u90e8\u8868\uff08\u6bd4\u5982\u4e0a\u9762\u7684guang_deals\uff09\u6570\u636e\u91cf\u6bd4\u8f83\u5927\u7684\u65f6\u5019\u6548\u7387\u662f\u5f88\u5dee\u7684\uff08\u5982\u679c\u5bf9\u4e8e\u8f83\u5c0f\u7684\u8868, \u4e0d\u4f1a\u9020\u6210\u663e\u8457\u5730\u5f71\u54cd\uff09\n\n\n\n\u672c\u6587\u8f6c\u81ea [mysql\u6027\u80fd\u4f18\u5316\u768419\u4e2a\u8981\u70b9 -  \u738b\u989c\u57f9\u7684\u4e2a\u4eba\u7a7a\u95f4 - \u5f00\u6e90\u4e2d\u56fd\u793e\u533a](http://my.oschina.net/wangyanpei/blog/489498)\n", 
                        "published_at": 1439103000000, 
                        "published_by": 1, 
                        "slug": "mysql\u6027\u80fd\u4f18\u5316\u768419\u4e2a\u8981\u70b9", 
                        "status": "published", 
                        "title": "mysql\u6027\u80fd\u4f18\u5316\u768419\u4e2a\u8981\u70b9", 
                        "updated_at": 1439103000000, 
                        "updated_by": 1, 
                        "uuid": "fdad8d57-e03e-4b96-b118-69e1664be536"
                    }, 
                    {
                        "created_at": 1431583920000, 
                        "created_by": 1, 
                        "id": 3, 
                        "language": "en_US", 
                        "markdown": "\n\u8f6c\u81ea:paddingme\u7684 [Markdown \u8bed\u6cd5\u7b14\u8bb0](#http://padding.me/blog/2015/01/14/my-markdown-syntax-notes/)\n\u672c\u6587\u4e3b\u8981\u5206\u4e3a\u4ee5\u4e0b\u51e0\u90e8\u5206\uff1a\n\n- [Markdown \u57fa\u672c\u8bed\u6cd5](#syntax)\n    +  [\u517c\u5bb9 HTML](#html)\n    +  [\u6bb5\u843d\u548c\u6362\u884c](#p)\n    +  [\u533a\u5757\u5f15\u7528 Blockquotes](#blockquote)\n    +  [\u5217\u8868](#list)\n    +  [\u4ee3\u7801\u533a\u5757](#pre)\n    +  [\u5206\u9694\u7ebf](#hr)\n    +  [\u94fe\u63a5](#link)\n    +  [\u5f3a\u8c03](#em)\n    +  [\u4ee3\u7801](#code)\n    +  [\u56fe\u7247](#img)\n    +  [\u81ea\u52a8\u94fe\u63a5](#autolink)\n- [GitHub \u98ce\u683c\u7684 Markdown \u8bed\u6cd5](#gfm)\n  + [\u94fe\u63a5\u81ea\u52a8\u8bc6\u522b](#autolink-gfm)\n  + [\u56f4\u680f\u5f0f\u4ee3\u7801\u5757](#fenced)\n  + [\u4efb\u52a1\u6e05\u5355](#task-lists)\n  + [\u4efb\u52a1\u6e05\u5355](#task-lists)\n  + [@](#at)\n  + [Emoji](#emoji)\n  + [table](#table)\n  + [\u5f3a\u8c03](#del)\n- [\u4e00\u4e9b\u548c\u6392\u7248\u6709\u5173\u7684\u8d44\u6e90](#layout)\n- [\u53c2\u8003\u6587\u7ae0](#acknowledgement)\n\n<h2 id=\"syntax\">Markdown \u8bed\u6cd5</h2>\n\n\u60f3\u8981\u4ece\u5934\u5230\u5c3e\u4e00\u6b65\u6b65\u5b66\u4e60 Markdown \u8bed\u6cd5\uff0c\u8bf7\u70b9\u51fb <http://wowubuntu.com/markdown/> \u9605\u8bfb, \u8fd9\u91cc\u53ea\u8bb0\u5f55\u4e0b\u5bf9\u6211\u6765\u8bf4\u6bd4\u8f83\u5bb9\u6613\u5f04\u6df7\u7684\u8bed\u6cd5\u3002\n\n<h3 id=\"html\">\u517c\u5bb9 HTML</h3>\n\n\u4e00\u4e9b HTML \u533a\u5757\u5143\u7d20\u2015\u2015\u6bd4\u5982 `<div>`\u3001`<table>`\u3001`<pre>`\u3001`<p>` \u7b49\u6807\u7b7e\uff0c\u5fc5\u987b\u5728\u524d\u540e\u52a0\u4e0a\u7a7a\u884c\u4e0e\u5176\u5b83\u5185\u5bb9\u533a\u9694\u5f00\uff0c\u8fd8\u8981\u6c42\u5b83\u4eec\u7684\u5f00\u59cb\u6807\u7b7e\u4e0e\u7ed3\u5c3e\u6807\u7b7e\u4e0d\u80fd\u7528\u5236\u8868\u7b26\u6216\u7a7a\u683c\u6765\u7f29\u8fdb\u3002\u5728 HTML \u533a\u5757\u6807\u7b7e\u95f4\u7684 Markdown \u683c\u5f0f\u8bed\u6cd5\u5c06\u4e0d\u4f1a\u88ab\u5904\u7406\u3002\u6bd4\u5982\uff0c\u4f60\u5728 HTML \u533a\u5757\u5185\u4f7f\u7528 Markdown \u6837\u5f0f\u7684 \\* \u5f3a\u8c03 \\* \u4f1a\u6ca1\u6709\u6548\u679c\u3002\n\n    \u8fd9\u662f\u4e00\u4e2a\u666e\u901a\u6bb5\u843d\u3002\n\n    <table>\n        <tr>\n            <td>Foo</td>\n        </tr>\n    </table>\n\n    \u8fd9\u662f\u53e6\u4e00\u4e2a\u666e\u901a\u6bb5\u843d\u3002\n\n\u6548\u679c\uff1a\n\n\u8fd9\u662f\u4e00\u4e2a\u666e\u901a\u6bb5\u843d\u3002\n\n    <table>\n        <tr>\n            <td>Foo</td>\n        </tr>\n    </table>\n\n\u8fd9\u662f\u53e6\u4e00\u4e2a\u666e\u901a\u6bb5\u843d\u3002\n\n<h3 id=\"p\">\u6bb5\u843d\u548c\u6362\u884c</h3>\n\n\u4e00\u4e2a Markdown \u6bb5\u843d\u662f\u7531\u4e00\u4e2a\u6216\u591a\u4e2a\u8fde\u7eed\u7684\u6587\u672c\u884c\u7ec4\u6210\uff0c\u5b83\u7684\u524d\u540e\u8981\u6709\u4e00\u4e2a\u4ee5\u4e0a\u7684\u7a7a\u884c\uff08\u7a7a\u884c\u7684\u5b9a\u4e49\u662f\u663e\u793a\u4e0a\u770b\u8d77\u6765\u50cf\u662f\u7a7a\u7684\uff0c\u4fbf\u4f1a\u88ab\u89c6\u4e3a\u7a7a\u884c\u3002\u6bd4\u65b9\u8bf4\uff0c\u82e5\u67d0\u4e00\u884c\u53ea\u5305\u542b\u7a7a\u683c\u548c\u5236\u8868\u7b26\uff0c\u5219\u8be5\u884c\u4e5f\u4f1a\u88ab\u89c6\u4e3a\u7a7a\u884c\uff09\u3002\u666e\u901a\u6bb5\u843d\u4e0d\u8be5\u7528\u7a7a\u683c\u6216\u5236\u8868\u7b26\u6765\u7f29\u8fdb\u3002\n\n\u5982\u679c\u4f60\u786e\u5b9e\u60f3\u8981\u4f9d\u8d56 Markdown \u6765\u63d2\u5165 `<br />` \u6807\u7b7e\u7684\u8bdd\uff0c\u5728\u63d2\u5165\u5904\u5148\u6309\u5165\u4e24\u4e2a\u4ee5\u4e0a\u7684\u7a7a\u683c\u7136\u540e\u56de\u8f66\u3002\n\n<h3 id=\"blockquotes\">\u533a\u5757\u5f15\u7528</h3>\n\n    > This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,\n    > consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.\n    > Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitrisus.\n    >\n    > Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse\n    > id sem consectetuer libero luctus adipiscing.\n\n\u6548\u679c\uff1a\n\n> This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,\n> consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.\n> Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.\n>\n> Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse\n> id sem consectetuer libero luctus adipiscing.\n\n\u6216\u8005\u53ea\u5728\u6574\u4e2a\u6bb5\u843d\u7684\u7b2c\u4e00\u884c\u6700\u524d\u9762\u52a0\u4e0a `>` \uff1a\n\n    > This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,\n      consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.\n      Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.\n\n    > Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse\n      id sem consectetuer libero luctus adipiscing.\n\n\u6548\u679c\uff1a\n\n> This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,\n  consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.\n  Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.\n\n> Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse\n  id sem consectetuer libero luctus adipiscing.\n\n\u533a\u5757\u5f15\u7528\u53ef\u4ee5\u5d4c\u5957\uff08\u4f8b\u5982\uff1a\u5f15\u7528\u5185\u7684\u5f15\u7528\uff09\uff0c\u53ea\u8981\u6839\u636e\u5c42\u6b21\u52a0\u4e0a\u4e0d\u540c\u6570\u91cf\u7684 > \uff1a\n\n    > This is the first level of quoting.\n    >\n    > > This is nested blockquote.\n    >\n    > Back to the first level.\n\n\u6548\u679c\uff1a\n\n> This is the first level of quoting.\n>\n> > This is nested blockquote.\n>\n> Back to the first level.\n\n\u5f15\u7528\u7684\u533a\u5757\u5185\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5176\u4ed6\u7684 Markdown \u8bed\u6cd5\uff0c\u5305\u62ec\u6807\u9898\u3001\u5217\u8868\u3001\u4ee3\u7801\u533a\u5757\u7b49\uff1a\n\n    > ## \u8fd9\u662f\u4e00\u4e2a\u6807\u9898\u3002\n    >\n    > 1.   \u8fd9\u662f\u7b2c\u4e00\u884c\u5217\u8868\u9879\u3002\n    > 2.   \u8fd9\u662f\u7b2c\u4e8c\u884c\u5217\u8868\u9879\u3002\n    >\n    > \u7ed9\u51fa\u4e00\u4e9b\u4f8b\u5b50\u4ee3\u7801\uff1a\n    >\n    >     return shell_exec(\"echo $input | $markdown_script\");\n\n\u6548\u679c\uff1a\n\n> ## \u8fd9\u662f\u4e00\u4e2a\u6807\u9898\u3002\n>\n> 1.   \u8fd9\u662f\u7b2c\u4e00\u884c\u5217\u8868\u9879\u3002\n> 2.   \u8fd9\u662f\u7b2c\u4e8c\u884c\u5217\u8868\u9879\u3002\n>\n> \u7ed9\u51fa\u4e00\u4e9b\u4f8b\u5b50\u4ee3\u7801\uff1a\n>\n>     return shell_exec(\"echo $input | $markdown_script\");\n\n<h3 id=\"list\">\u5217\u8868</h3>\n\n\u5217\u8868\u9879\u76ee\u6807\u8bb0\u901a\u5e38\u662f\u653e\u5728\u6700\u5de6\u8fb9\uff0c\u4f46\u662f\u5176\u5b9e\u4e5f\u53ef\u4ee5\u7f29\u8fdb\uff0c\u6700\u591a 3 \u4e2a\u7a7a\u683c\uff0c\u9879\u76ee\u6807\u8bb0\u540e\u9762\u5219\u4e00\u5b9a\u8981\u63a5\u7740\u81f3\u5c11\u4e00\u4e2a\u7a7a\u683c\u6216\u5236\u8868\u7b26\u3002\n\n\u5982\u679c\u5217\u8868\u9879\u76ee\u95f4\u7528\u7a7a\u884c\u5206\u5f00\uff0c\u5728\u8f93\u51fa HTML \u65f6 Markdown \u5c31\u4f1a\u5c06\u9879\u76ee\u5185\u5bb9\u7528 `<p>` \u6807\u7b7e\u5305\u8d77\u6765\uff0c\u4e3e\u4f8b\u6765\u8bf4\uff1a\n\n    * Bird\n    * Magic\n\n\u4f1a\u88ab\u8f6c\u6362\u4e3a\uff1a\n\n    <ul>\n    <li>Bird</li>\n    <li>Magic</li>\n    </ul>\n\n\u4f46\u662f\u8fd9\u4e2a\uff1a\n\n    * Bird\n\n    * Magic\n\n\u4f1a\u88ab\u8f6c\u6362\u4e3a\uff1a\n\n    <ul>\n    <li><p>Bird</p></li>\n    <li><p>Magic</p></li>\n    </ul>\n\n\n\u5217\u8868\u9879\u76ee\u53ef\u4ee5\u5305\u542b\u591a\u4e2a\u6bb5\u843d\uff0c\u6bcf\u4e2a\u9879\u76ee\u4e0b\u7684\u6bb5\u843d\u90fd\u5fc5\u987b\u7f29\u8fdb 4 \u4e2a\u7a7a\u683c\u6216\u662f 1 \u4e2a\u5236\u8868\u7b26\uff1a\n\n    1.  This is a list item with two paragraphs. Lorem ipsum dolor\n        sit amet, consectetuer adipiscing elit. Aliquam hendrerit\n        mi posuere lectus.\n\n        Vestibulum enim wisi, viverra nec, fringilla in, laoreet\n        vitae, risus. Donec sit amet nisl. Aliquam semper ipsum\n        sit amet velit.\n\n    2.  Suspendisse id sem consectetuer libero luctus adipiscing.\n\n\u6548\u679c\uff1a\n\n1.  This is a list item with two paragraphs. Lorem ipsum dolor\n    sit amet, consectetuer adipiscing elit. Aliquam hendrerit\n    mi posuere lectus.\n\n    Vestibulum enim wisi, viverra nec, fringilla in, laoreet\n    vitae, risus. Donec sit amet nisl. Aliquam semper ipsum\n    sit amet velit.\n\n2.  Suspendisse id sem consectetuer libero luctus adipiscing.\n\n\u5982\u679c\u8981\u5728\u5217\u8868\u9879\u76ee\u5185\u653e\u8fdb\u5f15\u7528\uff0c\u90a3 `>` \u5c31\u9700\u8981\u7f29\u8fdb\uff1a\n\n    *   A list item with a blockquote:\n\n        > This is a blockquote\n        > inside a list item.\n\n\u6548\u679c\uff1a\n\n*   A list item with a blockquote:\n\n    > This is a blockquote\n    > inside a list item.\n\n**\u5982\u679c\u8981\u653e\u4ee3\u7801\u533a\u5757\u7684\u8bdd\uff0c\u8be5\u533a\u5757\u5c31\u9700\u8981\u7f29\u8fdb*\u4e24\u6b21*\uff0c\u4e5f\u5c31\u662f 8 \u4e2a\u7a7a\u683c\u6216\u662f 2 \u4e2a\u5236\u8868\u7b26**\uff1a\n\n    *   \u4e00\u5217\u8868\u9879\u5305\u542b\u4e00\u4e2a\u5217\u8868\u533a\u5757\uff1a\n\n                <\u4ee3\u7801\u5199\u5728\u8fd9>\n\u6548\u679c\uff1a\n\n*   \u4e00\u5217\u8868\u9879\u5305\u542b\u4e00\u4e2a\u5217\u8868\u533a\u5757\uff1a\n\n        <\u4ee3\u7801\u5199\u5728\u8fd9>\n\n\u5f53\u7136\uff0c\u9879\u76ee\u5217\u8868\u5f88\u53ef\u80fd\u4f1a\u4e0d\u5c0f\u5fc3\u4ea7\u751f\uff0c\u50cf\u662f\u4e0b\u9762\u8fd9\u6837\u7684\u5199\u6cd5\uff1a\n\n    1986. What a great season.\n\n\u6548\u679c\uff1a\n\n1986. What a great season.\n\n\u6362\u53e5\u8bdd\u8bf4\uff0c\u4e5f\u5c31\u662f\u5728\u884c\u9996\u51fa\u73b0*\u6570\u5b57-\u53e5\u70b9-\u7a7a\u767d*\uff0c\u8981\u907f\u514d\u8fd9\u6837\u7684\u72b6\u51b5\uff0c\u4f60\u53ef\u4ee5\u5728\u53e5\u70b9\u524d\u9762\u52a0\u4e0a\u53cd\u659c\u6760\u3002\n\n    1986\\. What a great season.\n\n\u6548\u679c\uff1a\n\n1986\\. What a great season.\n\n<h3 id=\"pre\">\u4ee3\u7801\u533a\u5757</h3>\n\n\u8981\u5728 Markdown \u4e2d\u5efa\u7acb\u4ee3\u7801\u533a\u5757\u5f88\u7b80\u5355\uff0c\u53ea\u8981\u7b80\u5355\u5730\u7f29\u8fdb 4 \u4e2a\u7a7a\u683c\u6216\u662f 1 \u4e2a\u5236\u8868\u7b26\u5c31\u53ef\u4ee5\uff0c\u4e00\u4e2a\u4ee3\u7801\u533a\u5757\u4f1a\u4e00\u76f4\u6301\u7eed\u5230\u6ca1\u6709\u7f29\u8fdb\u7684\u90a3\u4e00\u884c\uff08\u6216\u662f\u6587\u4ef6\u7ed3\u5c3e\uff09\u3002\u4f8b\u5982\uff0c\u4e0b\u9762\u7684\u8f93\u5165\uff1a\n\n    \u8fd9\u662f\u4e00\u4e2a\u666e\u901a\u6bb5\u843d\uff1a\n\n        \u8fd9\u662f\u4e00\u4e2a\u4ee3\u7801\u533a\u5757\u3002\n\n\u6548\u679c\uff1a\n\n\u8fd9\u662f\u4e00\u4e2a\u666e\u901a\u6bb5\u843d\uff1a\n\n    \u8fd9\u662f\u4e00\u4e2a\u4ee3\u7801\u533a\u5757\u3002\n\n<h3 id=\"hr\">\u6bb5\u843d\u548c\u6362\u884c</h3>\n\n\u4f60\u53ef\u4ee5\u5728\u4e00\u884c\u4e2d\u7528\u4e09\u4e2a\u4ee5\u4e0a\u7684\u661f\u53f7\u3001\u51cf\u53f7\u3001\u5e95\u7ebf\u6765\u5efa\u7acb\u4e00\u4e2a\u5206\u9694\u7ebf\uff0c\u884c\u5185\u4e0d\u80fd\u6709\u5176\u4ed6\u4e1c\u897f\u3002\u4f60\u4e5f\u53ef\u4ee5\u5728\u661f\u53f7\u6216\u662f\u51cf\u53f7\u4e2d\u95f4\u63d2\u5165\u7a7a\u683c\u3002\n\n<h3 id=\"link\">\u94fe\u63a5</h3>\n\nMarkdown \u652f\u6301\u4e24\u79cd\u5f62\u5f0f\u7684\u94fe\u63a5\u8bed\u6cd5\uff1a *\u884c\u5185\u5f0f* \u548c *\u53c2\u8003\u5f0f* \u4e24\u79cd\u5f62\u5f0f\u3002\n\n\u4e0d\u7ba1\u662f\u54ea\u4e00\u79cd\uff0c\u94fe\u63a5\u6587\u5b57\u90fd\u662f\u7528 [\u65b9\u62ec\u53f7] \u6765\u6807\u8bb0\u3002\n\n\u8981\u5efa\u7acb\u4e00\u4e2a *\u884c\u5185\u5f0f* \u7684\u94fe\u63a5\uff0c\u53ea\u8981\u5728\u65b9\u5757\u62ec\u53f7\u540e\u9762\u7d27\u63a5\u7740\u5706\u62ec\u53f7\u5e76\u63d2\u5165\u7f51\u5740\u94fe\u63a5\u5373\u53ef\uff0c\u5982\u679c\u4f60\u8fd8\u60f3\u8981\u52a0\u4e0a\u94fe\u63a5\u7684 title \u6587\u5b57\uff0c\u53ea\u8981\u5728\u7f51\u5740\u540e\u9762\uff0c\u7528\u53cc\u5f15\u53f7\u628a title \u6587\u5b57\u5305\u8d77\u6765\u5373\u53ef\uff0c\u4f8b\u5982\uff1a\n\n    This is [an example](http://example.com/ \"Title\") inline link.\n\n    [This link](http://example.net/) has no title attribute.\n\n\u4f1a\u4ea7\u751f\uff1a\n\n    <p>This is <a href=\"http://example.com/\" title=\"Title\">\n        an example</a> inline link.</p>\n\n    <p><a href=\"http://example.net/\">This link</a> has no\n        title attribute.</p>\n\n\u5982\u679c\u4f60\u662f\u8981\u94fe\u63a5\u5230\u540c\u6837\u4e3b\u673a\u7684\u8d44\u6e90\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u76f8\u5bf9\u8def\u5f84\uff1a\n\n    See my [About](/about/) page for details.\n\n*\u53c2\u8003\u5f0f* \u7684\u94fe\u63a5\u662f\u5728\u94fe\u63a5\u6587\u5b57\u7684\u62ec\u53f7\u540e\u9762\u518d\u63a5\u4e0a\u53e6\u4e00\u4e2a\u65b9\u62ec\u53f7\uff0c\u800c\u5728\u7b2c\u4e8c\u4e2a\u65b9\u62ec\u53f7\u91cc\u9762\u8981\u586b\u5165\u7528\u4ee5\u8fa8\u8bc6\u94fe\u63a5\u7684\u6807\u8bb0\uff1a\n\n    This is [an example][id] reference-style link.\n\n\u4f60\u4e5f\u53ef\u4ee5\u9009\u62e9\u6027\u5730\u5728\u4e24\u4e2a\u65b9\u62ec\u53f7\u4e2d\u95f4\u52a0\u4e0a\u4e00\u4e2a\u7a7a\u683c\uff1a\n\n    This is [an example] [id] reference-style link.\n\n\u63a5\u7740\uff0c\u5728\u6587\u4ef6\u7684\u4efb\u610f\u5904\uff0c\u4f60\u53ef\u4ee5\u628a\u8fd9\u4e2a\u6807\u8bb0\u7684\u94fe\u63a5\u5185\u5bb9\u5b9a\u4e49\u51fa\u6765\uff1a\n\n    [id]: http://example.com/  \"Optional Title Here\"\n\n\u94fe\u63a5\u5185\u5bb9\u5b9a\u4e49\u7684\u5f62\u5f0f\u4e3a\uff1a\n\n*   \u65b9\u62ec\u53f7\uff08\u524d\u9762\u53ef\u4ee5\u9009\u62e9\u6027\u5730\u52a0\u4e0a\u81f3\u591a\u4e09\u4e2a\u7a7a\u683c\u6765\u7f29\u8fdb\uff09\uff0c\u91cc\u9762\u8f93\u5165\u94fe\u63a5\u6587\u5b57\n*   \u63a5\u7740\u4e00\u4e2a\u5192\u53f7\n*   \u63a5\u7740\u4e00\u4e2a\u4ee5\u4e0a\u7684\u7a7a\u683c\u6216\u5236\u8868\u7b26\n*   \u63a5\u7740\u94fe\u63a5\u7684\u7f51\u5740\n*   \u9009\u62e9\u6027\u5730\u63a5\u7740 title \u5185\u5bb9\uff0c\u53ef\u4ee5\u7528\u5355\u5f15\u53f7\u3001\u53cc\u5f15\u53f7\u6216\u662f\u62ec\u5f27\u5305\u7740\n\n\u4e0b\u9762\u8fd9\u4e09\u79cd\u94fe\u63a5\u7684\u5b9a\u4e49\u90fd\u662f\u76f8\u540c\uff1a\n\n    [foo]: http://example.com/  \"Optional Title Here\"\n    [foo]: http://example.com/  'Optional Title Here'\n    [foo]: http://example.com/  (Optional Title Here)\n\n**\u8bf7\u6ce8\u610f\uff1a**\u6709\u4e00\u4e2a\u5df2\u77e5\u7684\u95ee\u9898\u662f Markdown.pl 1.0.1 \u4f1a\u5ffd\u7565\u5355\u5f15\u53f7\u5305\u8d77\u6765\u7684\u94fe\u63a5 title\u3002\n\n\u94fe\u63a5\u7f51\u5740\u4e5f\u53ef\u4ee5\u7528\u5c16\u62ec\u53f7\u5305\u8d77\u6765\uff1a\n\n    [id]: <http://example.com/>  \"Optional Title Here\"\n\n\u4f60\u4e5f\u53ef\u4ee5\u628a title \u5c5e\u6027\u653e\u5230\u4e0b\u4e00\u884c\uff0c\u4e5f\u53ef\u4ee5\u52a0\u4e9b\u7f29\u8fdb\uff0c\u82e5\u7f51\u5740\u592a\u957f\u7684\u8bdd\uff0c\u8fd9\u6837\u4f1a\u6bd4\u8f83\u597d\u770b\uff1a\n\n    [id]: http://example.com/longish/path/to/resource/here\n            \"Optional Title Here\"\n\n\u7f51\u5740\u5b9a\u4e49\u53ea\u6709\u5728\u4ea7\u751f\u94fe\u63a5\u7684\u65f6\u5019\u7528\u5230\uff0c\u5e76\u4e0d\u4f1a\u76f4\u63a5\u51fa\u73b0\u5728\u6587\u4ef6\u4e4b\u4e2d\u3002\n\n\u94fe\u63a5\u8fa8\u522b\u6807\u7b7e\u53ef\u4ee5\u6709\u5b57\u6bcd\u3001\u6570\u5b57\u3001\u7a7a\u767d\u548c\u6807\u70b9\u7b26\u53f7\uff0c\u4f46\u662f\u5e76 *\u4e0d* \u533a\u5206\u5927\u5c0f\u5199\uff0c\u56e0\u6b64\u4e0b\u9762\u4e24\u4e2a\u94fe\u63a5\u662f\u4e00\u6837\u7684\uff1a\n\n    [link text][a]\n    [link text][A]\n\n*\u9690\u5f0f\u94fe\u63a5\u6807\u8bb0* \u529f\u80fd\u8ba9\u4f60\u53ef\u4ee5\u7701\u7565\u6307\u5b9a\u94fe\u63a5\u6807\u8bb0\uff0c\u8fd9\u79cd\u60c5\u5f62\u4e0b\uff0c\u94fe\u63a5\u6807\u8bb0\u4f1a\u89c6\u4e3a\u7b49\u540c\u4e8e\u94fe\u63a5\u6587\u5b57\uff0c\u8981\u7528\u9690\u5f0f\u94fe\u63a5\u6807\u8bb0\u53ea\u8981\u5728\u94fe\u63a5\u6587\u5b57\u540e\u9762\u52a0\u4e0a\u4e00\u4e2a\u7a7a\u7684\u65b9\u62ec\u53f7\uff0c\u5982\u679c\u4f60\u8981\u8ba9 \"Google\" \u94fe\u63a5\u5230 google.com\uff0c\u4f60\u53ef\u4ee5\u7b80\u5316\u6210\uff1a\n\n    [Google][]\n\n\u7136\u540e\u5b9a\u4e49\u94fe\u63a5\u5185\u5bb9\uff1a\n\n    [Google]: http://google.com/\n\n\u7531\u4e8e\u94fe\u63a5\u6587\u5b57\u53ef\u80fd\u5305\u542b\u7a7a\u767d\uff0c\u6240\u4ee5\u8fd9\u79cd\u7b80\u5316\u578b\u7684\u6807\u8bb0\u5185\u4e5f\u8bb8\u5305\u542b\u591a\u4e2a\u5355\u8bcd\uff1a\n\n    Visit [Daring Fireball][] for more information.\n    \u7136\u540e\u63a5\u7740\u5b9a\u4e49\u94fe\u63a5\uff1a\n\n    [Daring Fireball]: http://daringfireball.net/\n\n\u94fe\u63a5\u7684\u5b9a\u4e49\u53ef\u4ee5\u653e\u5728\u6587\u4ef6\u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\u5730\u65b9\uff0c\u6211\u6bd4\u8f83\u504f\u597d\u76f4\u63a5\u653e\u5728\u94fe\u63a5\u51fa\u73b0\u6bb5\u843d\u7684\u540e\u9762\uff0c\u4f60\u4e5f\u53ef\u4ee5\u628a\u5b83\u653e\u5728\u6587\u4ef6\u6700\u540e\u9762\uff0c\u5c31\u50cf\u662f\u6ce8\u89e3\u4e00\u6837\u3002\n\n\u4e0b\u9762\u662f\u4e00\u4e2a\u53c2\u8003\u5f0f\u94fe\u63a5\u7684\u8303\u4f8b\uff1a\n\n    I get 10 times more traffic from [Google] [1] than from\n        [Yahoo] [2] or [MSN] [3].\n\n        [1]: http://google.com/        \"Google\"\n        [2]: http://search.yahoo.com/  \"Yahoo Search\"\n        [3]: http://search.msn.com/    \"MSN Search\"\n\n\u5982\u679c\u6539\u6210\u7528\u94fe\u63a5\u540d\u79f0\u7684\u65b9\u5f0f\u5199\uff1a\n\n    I get 10 times more traffic from [Google][] than from\n        [Yahoo][] or [MSN][].\n\n        [google]: http://google.com/        \"Google\"\n        [yahoo]:  http://search.yahoo.com/  \"Yahoo Search\"\n        [msn]:    http://search.msn.com/    \"MSN Search\"\n\n\u4e0a\u9762\u4e24\u79cd\u5199\u6cd5\u90fd\u4f1a\u4ea7\u751f\u4e0b\u9762\u7684 HTML\u3002\n\n    <p>I get 10 times more traffic from <a href=\"http://google.com/\"\n        title=\"Google\">Google</a> than from\n        <a href=\"http://search.yahoo.com/\" title=\"Yahoo Search\">Yahoo</a>\n        or <a href=\"http://search.msn.com/\" title=\"MSN Search\">MSN</a>.</p>\n\n\u4e0b\u9762\u662f\u7528\u884c\u5185\u5f0f\u5199\u7684\u540c\u6837\u4e00\u6bb5\u5185\u5bb9\u7684 Markdown \u6587\u4ef6\uff0c\u63d0\u4f9b\u4f5c\u4e3a\u6bd4\u8f83\u4e4b\u7528\uff1a\n\n    I get 10 times more traffic from [Google](http://google.com/ \"Google\")\n        than from [Yahoo](http://search.yahoo.com/ \"Yahoo Search\") or\n        [MSN](http://search.msn.com/ \"MSN Search\").\n\n\u53c2\u8003\u5f0f\u7684\u94fe\u63a5\u5176\u5b9e\u91cd\u70b9\u4e0d\u5728\u4e8e\u5b83\u6bd4\u8f83\u597d\u5199\uff0c\u800c\u662f\u5b83\u6bd4\u8f83\u597d\u8bfb\uff0c\u6bd4\u8f83\u4e00\u4e0b\u4e0a\u9762\u7684\u8303\u4f8b\uff0c\u4f7f\u7528\u53c2\u8003\u5f0f\u7684\u6587\u7ae0\u672c\u8eab\u53ea\u6709 81 \u4e2a\u5b57\u7b26\uff0c\u4f46\u662f\u7528\u884c\u5185\u5f62\u5f0f\u7684\u5374\u4f1a\u589e\u52a0\u5230 176 \u4e2a\u5b57\u5143\uff0c\u5982\u679c\u662f\u7528\u7eaf HTML \u683c\u5f0f\u6765\u5199\uff0c\u4f1a\u6709 234 \u4e2a\u5b57\u5143\uff0c\u5728 HTML \u683c\u5f0f\u4e2d\uff0c\u6807\u7b7e\u6bd4\u6587\u672c\u8fd8\u8981\u591a\u3002\n\n\u4f7f\u7528 Markdown \u7684\u53c2\u8003\u5f0f\u94fe\u63a5\uff0c\u53ef\u4ee5\u8ba9\u6587\u4ef6\u66f4\u50cf\u662f\u6d4f\u89c8\u5668\u6700\u540e\u4ea7\u751f\u7684\u7ed3\u679c\uff0c\u8ba9\u4f60\u53ef\u4ee5\u628a\u4e00\u4e9b\u6807\u8bb0\u76f8\u5173\u7684\u5143\u6570\u636e\u79fb\u5230\u6bb5\u843d\u6587\u5b57\u4e4b\u5916\uff0c\u4f60\u5c31\u53ef\u4ee5\u589e\u52a0\u94fe\u63a5\u800c\u4e0d\u8ba9\u6587\u7ae0\u7684\u9605\u8bfb\u611f\u89c9\u88ab\u6253\u65ad\u3002\n\n<h3 id=\"em\">\u5f3a\u8c03</h3>\n\nMarkdown \u4f7f\u7528\u661f\u53f7\uff08`*`\uff09\u548c\u5e95\u7ebf\uff08`_`\uff09\u4f5c\u4e3a\u6807\u8bb0\u5f3a\u8c03\u5b57\u8bcd\u7684\u7b26\u53f7\uff0c\u88ab `*` \u6216 `_` \u5305\u56f4\u7684\u5b57\u8bcd\u4f1a\u88ab\u8f6c\u6210\u7528 `<em>` \u6807\u7b7e\u5305\u56f4\uff0c\u7528\u4e24\u4e2a `*` \u6216 `_` \u5305\u8d77\u6765\u7684\u8bdd\uff0c\u5219\u4f1a\u88ab\u8f6c\u6210 `<strong>`\n\n\u4f46\u662f**\u5982\u679c\u4f60\u7684 `*` \u548c `_` \u4e24\u8fb9\u90fd\u6709\u7a7a\u767d\u7684\u8bdd\uff0c\u5b83\u4eec\u5c31\u53ea\u4f1a\u88ab\u5f53\u6210\u666e\u901a\u7684\u7b26\u53f7**\u3002\n\n\u5982\u679c\u8981\u5728\u6587\u5b57\u524d\u540e\u76f4\u63a5\u63d2\u5165\u666e\u901a\u7684\u661f\u53f7\u6216\u5e95\u7ebf\uff0c\u4f60\u53ef\u4ee5\u7528\u53cd\u659c\u7ebf\uff1a\n\n<h3 id=\"code\">\u4ee3\u7801</h3>\n\n\u5982\u679c\u8981\u5728\u4ee3\u7801\u533a\u6bb5\u5185\u63d2\u5165\u53cd\u5f15\u53f7\uff0c\u4f60\u53ef\u4ee5\u7528\u591a\u4e2a\u53cd\u5f15\u53f7\u6765\u5f00\u542f\u548c\u7ed3\u675f\u4ee3\u7801\u533a\u6bb5\uff1a\n\n    ``There is a literal backtick (`) here.``\u3001\n\n\u6548\u679c\uff1a\n\n``There is a literal backtick (`) here.``\u3001\n\n\n<h3 id=\"img\">\u56fe\u7247</h3>\n\nMarkdown \u6807\u8bb0\u56fe\u7247\u5141\u8bb8\u4e24\u79cd\u6837\u5f0f\uff1a *\u884c\u5185\u5f0f* \u548c *\u53c2\u8003\u5f0f*\u3002\n\n\u884c\u5185\u5f0f\u7684\u56fe\u7247\u8bed\u6cd5\u770b\u8d77\u6765\u50cf\u662f\uff1a\n\n    ![Alt text](/path/to/img.jpg)\n\n    ![Alt text](/path/to/img.jpg \"Optional title\")\n\n\u8be6\u7ec6\u53d9\u8ff0\u5982\u4e0b\uff1a\n\n*   \u4e00\u4e2a\u60ca\u53f9\u53f7 `!`\n*   \u63a5\u7740\u4e00\u4e2a\u65b9\u62ec\u53f7\uff0c\u91cc\u9762\u653e\u4e0a\u56fe\u7247\u7684\u66ff\u4ee3\u6587\u5b57\n*   \u63a5\u7740\u4e00\u4e2a\u666e\u901a\u62ec\u53f7\uff0c\u91cc\u9762\u653e\u4e0a\u56fe\u7247\u7684\u7f51\u5740\uff0c\u6700\u540e\u8fd8\u53ef\u4ee5\u7528\u5f15\u53f7\u5305\u4f4f\u5e76\u52a0\u4e0a\n    \u9009\u62e9\u6027\u7684 'title' \u6587\u5b57\u3002\n\n\u53c2\u8003\u5f0f\u7684\u56fe\u7247\u8bed\u6cd5\u5219\u957f\u5f97\u50cf\u8fd9\u6837\uff1a\n\n    ![Alt text][id]\n\n\u300cid\u300d\u662f\u56fe\u7247\u53c2\u8003\u7684\u540d\u79f0\uff0c\u56fe\u7247\u53c2\u8003\u7684\u5b9a\u4e49\u65b9\u5f0f\u5219\u548c\u8fde\u7ed3\u53c2\u8003\u4e00\u6837\uff1a\n\n    [id]: url/to/image  \"Optional title attribute\"\n\n<h3 id=\"autolink\">\u81ea\u52a8\u94fe\u63a5</h3>\n\nMarkdown \u652f\u6301\u4ee5\u6bd4\u8f83\u7b80\u77ed\u7684\u81ea\u52a8\u94fe\u63a5\u5f62\u5f0f\u6765\u5904\u7406\u7f51\u5740\u548c\u7535\u5b50\u90ae\u4ef6\u4fe1\u7bb1\uff0c\u53ea\u8981\u662f\u7528\u5c16\u62ec\u53f7\u5305\u8d77\u6765\uff0c Markdown \u5c31\u4f1a\u81ea\u52a8\u628a\u5b83\u8f6c\u6210\u94fe\u63a5\u3002\u4e00\u822c\u7f51\u5740\u7684\u94fe\u63a5\u6587\u5b57\u5c31\u548c\u94fe\u63a5\u5730\u5740\u4e00\u6837\n\n    <http://example.com/>\n\nMarkdown \u4f1a\u8f6c\u4e3a\uff1a\n\n    <a href=\"http://example.com/\">http://example.com/</a>\n\n\u7535\u5b50\u90ae\u4ef6\u5730\u5740\uff1a\n\n    <address@example.com>\n\nMarkdown \u4f1a\u8f6c\u6210\uff1a\n\n    <a href=\"&#x6D;&#x61;i&#x6C;&#x74;&#x6F;:&#x61;&#x64;&#x64;&#x72;&#x65;\n    &#115;&#115;&#64;&#101;&#120;&#x61;&#109;&#x70;&#x6C;e&#x2E;&#99;&#111;\n    &#109;\">&#x61;&#x64;&#x64;&#x72;&#x65;&#115;&#115;&#64;&#101;&#120;&#x61;\n    &#109;&#x70;&#x6C;e&#x2E;&#99;&#111;&#109;</a>\n\n\u5728\u6d4f\u89c8\u5668\u91cc\u9762\uff0c\u8fd9\u6bb5\u5b57\u4e32\uff08\u5176\u5b9e\u662f   `<a href=\"mailto:address@example.com\"> address@example.com </a>`\uff09\u4f1a\u53d8\u6210\u4e00\u4e2a\u53ef\u4ee5\u70b9\u51fb\u7684\u300caddress@example.com\u300d\u94fe\u63a5\u3002\n\n\n\n\n<h2 id=\"gfm\">GitHub \u98ce\u683c\u7684 Markdown \u8bed\u6cd5</h2>\n\n\n\n<h3 id=\"autolink-gfm\">\u94fe\u63a5\u81ea\u52a8\u8bc6\u522b</h3>\n\n\u4f20\u7edf Markdown \u81ea\u52a8\u8bc6\u522b\u94fe\u63a5\u9700\u8981\u5728\u94fe\u63a5\u4e0a\u7528\u4e00\u5bf9\u5c16\u62ec\u53f7\u95ed\u5408\uff0c\u800c GFM \u53ea\u9700\u8981\u8f93\u5165\u94fe\u63a5\u5373\u81ea\u52a8\u8bc6\u522b\u3002Email \u5730\u5740\u4ea6\u662f\u3002\n\n<h3 id=\"fenced\">\u56f4\u680f\u5f0f\u4ee3\u7801\u5757</h3>\n\n\u4f20\u7edf Markdown \u4f7f\u7528 4 \u4e2a\u7a7a\u683c\u7f29\u8fdb\u5c06\u6587\u672c\u8f6c\u6362\u4e3a\u4ee3\u7801\u5757\uff0cGFM \u652f\u6301\u5728\u4ee3\u7801\u5757\u524d\u540e\u52a0\u4e09\u4e2a\u53cd\u5f15\u53f7 `\\``\uff0c\u800c\u4e14\u8fd8\u53ef\u4ee5\u5728\u4ee3\u7801\u5757\u524d\u52a0\u4e0a\u8bed\u8a00\u7c7b\u578b\u6807\u8bc6\uff0cGithub \u4f1a\u81ea\u52a8\u8bc6\u522b\u8bed\u8a00\uff0c\u7ed9\u8bed\u6cd5\u7740\u8272\u3001\u4ee3\u7801\u52a0\u4eae\u3002\n\n\u4f8b\u5982\uff1a\n\n    ```js\n    alet(\"Hello world!\");\n    ```\n\n<h3 id=\"task-lists\">\u4efb\u52a1\u6e05\u5355</h3>\n\n\u5217\u8868\u53ef\u88ab\u8f6c\u6362\u4e3a\u4efb\u52a1\u6e05\u5355\uff0c\u53ea\u9700\u8981\u4e3a\u5217\u8868\u9879\u7684\u5f00\u5934\u52a0\u4e0a `[ ]` \u6216 `[x]` \u5373\u53ef\uff08\u5206\u522b\u8868\u793a\u672a\u5b8c\u6210\u548c\u5df2\u5b8c\u6210\uff09\u3002\n\n    - [x] @mentions, #refs, [links](), **formatting**, and <del>tags</del> supported\n    - [x] list syntax required (any unordered or ordered list supported)\n    - [x] this is a complete item\n    - [ ] this is an incomplete item\n\n\n    - [x] \u652f\u6301 @\u63d0\u5230\u67d0\u4eba\u3001#\u5f15\u7528\u3001[\u94fe\u63a5]()\u3001**\u683c\u5f0f\u5316** \u548c <del>\u6807\u7b7e</del> \u7b49\u8bed\u6cd5\n    - [x] \u9700\u8981\u4f7f\u7528\u5217\u8868\u8bed\u6cd5\u6765\u6fc0\u6d3b\uff08\u65e0\u5e8f\u6216\u6709\u5e8f\u5217\u8868\u5747\u53ef\uff09\n    - [x] \u8fd9\u662f\u4e00\u4e2a\u5df2\u5b8c\u6210\u9879\u76ee\n    - [ ] \u8fd9\u662f\u4e00\u4e2a\u672a\u5b8c\u6210\u9879\u76ee\n\n\n![](http://paddingme.qiniudn.com/markdown.gif \"\")\n\n\u8fd9\u4e2a\u7279\u6027\u4f1a\u5728 Issue \u548c Pull Request \u7684\u63cf\u8ff0\u548c\u8bc4\u8bba\u4e2d\u542f\u7528\u3002\u4efb\u52a1\u6e05\u5355\u540c\u6837\u53ef\u7528\u4e8e Gist \u7684\u8bc4\u8bba\u548c Markdown \u683c\u5f0f\u7684 Gist\u3002\u5728\u8fd9\u4e9b\u573a\u5408\uff0c\u4efb\u52a1\u6e05\u5355\u5c06\u6e32\u67d3\u51fa\u590d\u9009\u6846\uff0c\u4f9b\u52fe\u9009\u6216\u6e05\u9664\u3002\n\n<h3 id=\"at\">@</h3>\n\n\u6309\u4e0b @ \u7b26\u53f7\u5c06\u5f39\u51fa\u4e00\u4e2a\u5217\u8868\uff0c\u5217\u51fa\u8fd9\u4e2a\u9879\u76ee\u76f8\u5173\u7684\u4eba\u6216\u56e2\u961f,\u5373 @ \u63d0\u5230\u4eba\u540d\u6216\u56e2\u961f\u540d\u65f6\u7684\u81ea\u52a8\u8865\u5168\u3002\u8fd9\u4e2a\u5217\u8868\u4f1a\u968f\u7740\u4f60\u7684\u8f93\u5165\u4e0d\u65ad\u5339\u914d\u7b5b\u9009\uff0c\u56e0\u6b64\u4e00\u65e6\u4f60\u5728\u5217\u8868\u4e2d\u53d1\u73b0\u4e86\u4f60\u8981\u627e\u7684\u4eba\u540d\u6216\u56e2\u961f\u540d\uff0c\u4f60\u5c31\u53ef\u4ee5\u7528\u65b9\u5411\u952e\u6765\u9009\u4e2d\u5b83\uff0c\u7136\u540e\u6309\u56de\u8f66\u6216 tab \u952e\u6765\u8865\u5168\u3002\u5bf9\u4e8e\u56e2\u961f\u6765\u8bf4\uff0c\u53ea\u9700\u8981\u8f93\u5165 @\u7ec4\u7ec7\u540d/\u56e2\u961f\u540d\uff0c\u90a3\u4e48\u56e2\u961f\u5185\u7684\u6240\u6709\u6210\u5458\u90fd\u5c06\u6536\u5230\u63d0\u9192\u3002\n\n\u5217\u8868\u7684\u5339\u914d\u8303\u56f4\u4ec5\u9650\u5236\u5728\u5f53\u524d\u4ed3\u5e93\u7684\u8d21\u732e\u8005\u4ee5\u53ca\u5f53\u524d\u8ba8\u8bba\u7684\u53c2\u4e0e\u8005\uff0c\u56e0\u6b64\u5b83\u5e76\u4e0d\u662f\u4e00\u4e2a\u5168\u5c40\u6027\u7684\u641c\u7d22\u3002\u5b83\u548c\u6587\u4ef6\u67e5\u627e\u5668\u4f7f\u7528\u76f8\u540c\u7684\u6a21\u7cca\u7b5b\u9009\u7b97\u6cd5\uff0c\u5e76\u4e14\u540c\u65f6\u9002\u7528\u4e8e\u7528\u6237\u540d\u548c\u5168\u540d\u3002\n\n<h3 id=\"emoji\">Emoji</h3>\n\u6309\u4e0b : \u5c06\u4f1a\u5f39\u51fa\u4e00\u4e2a\u8868\u60c5\u7b26\u53f7\u7684\u5efa\u8bae\u5217\u8868\u3002\u8fd9\u4e2a\u5217\u8868\u4f1a\u968f\u7740\u4f60\u7684\u8f93\u5165\u4e0d\u65ad\u5339\u914d\u7b5b\u9009\uff0c\u56e0\u6b64\u4e00\u65e6\u4f60\u5728\u5217\u8868\u4e2d\u53d1\u73b0\u4e86\u4f60\u8981\u627e\u7684\u8868\u60c5\u7b26\u53f7\uff0c\u4f60\u5c31\u53ef\u4ee5\u6309\u56de\u8f66\u6216 tab \u952e\u6765\u8865\u5168\u5f53\u524d\u9ad8\u4eae\u7684\u90a3\u4e00\u9879\u3002\n\n\u66f4\u591a\u7684 emoji \u8868\u60c5 \u53ef\u4ee5\u731b\u51fb [EMOJI CHEAT SHEET](http://www.emoji-cheat-sheet.com/)\u3002\n\n<h3 id=\"table\">table</h3>\n\n\u4f60\u53ef\u4ee5\u4f7f\u7528\u82e5\u5e72\u5217\u6587\u5b57\u5e76\u4e8e\u7b2c\u4e00\u884c\u4e0b\u9762\u7528\u8f6c\u6298\u53f7-\u5206\u5f00\u5b83\u4eec\uff0c\u7136\u540e\u7528\u7ba1\u9053\u7b26|\u9694\u5f00\u6bcf\u4e00\u5217\uff1a\n\n    First Header  | Second Header\n    ------------- | -------------\n    Content Cell  | Content Cell\n    Content Cell  | Content Cell\n\n\u4e3a\u4e86\u770b\u4e0a\u53bb\u7f8e\u89c2\uff0c\u4f60\u4e5f\u53ef\u4ee5\u5728\u4e24\u7aef\u52a0\u4e0a\u989d\u5916\u7684\u7ba1\u9053\u7b26\uff1a\n\n    | First Header  | Second Header |\n    | ------------- | ------------- |\n    | Content Cell  | Content Cell  |\n    | Content Cell  | Content Cell  |\n\n\u6ce8\u610f\u9876\u90e8\u7684\u865a\u7ebf\u4e0d\u9700\u8981\u51c6\u786e\u5339\u914d\u8868\u5934\u6587\u672c\u7684\u957f\u5ea6\uff1a\n\n    | Name | Description          |\n    | ------------- | ----------- |\n    | Help      | Display the help window.|\n    | Close     | Closes a window     |\n\n\u4f60\u4e5f\u53ef\u4ee5\u5728\u5176\u4e2d\u5305\u62ec\u5185\u8054 Markdown \u5143\u7d20\uff0c\u6bd4\u5982\u94fe\u63a5\uff0c\u52a0\u7c97\uff0c\u659c\u4f53\u6216\u5220\u9664\n\n    | Name | Description          |\n    | ------------- | ----------- |\n    | Help      | ~~Display the~~ help window.|\n    | Close     | _Closes_ a window     |\n\n\u6700\u540e\uff0c\u901a\u8fc7\u5728\u8868\u5934\u884c\u52a0\u5165\u5192\u53f7:\uff0c\u4f60\u53ef\u4ee5\u51b3\u5b9a\u6587\u672c\u662f\u5de6\u5bf9\u9f50\uff0c\u53f3\u5bf9\u9f50\uff0c\u8fd8\u662f\u5c45\u4e2d\uff1a\n\n    | Left-Aligned  | Center Aligned  | Right Aligned |\n    | :------------ |:---------------:| -----:|\n    | col 3 is      | some wordy text | $1600 |\n    | col 2 is      | centered        |   $12 |\n    | zebra stripes | are neat        |    $1 |\n\n\u4e00\u4e2a\u5728\u6700\u5de6\u8fb9\u7684\u5192\u53f7\u8868\u793a\u4e00\u4e2a\u5de6\u5bf9\u9f50\u7684\u5217\uff1b\u4e00\u4e2a\u5728\u6700\u53f3\u8fb9\u7684\u5192\u53f7\u8868\u793a\u4e00\u4e2a\u53f3\u5bf9\u9f50\u7684\u5217\uff1b\u4e24\u8fb9\u90fd\u6709\u7684\u5192\u53f7\u8868\u793a\u4e00\u4e2a\u5c45\u4e2d\u7684\u5217\u3002\n\n\n<h3 id=\"del\">\u5f3a\u8c03</h3>\n\n\u7528\u5728\u5b57\u6bcd\u4e2d\u95f4\u653e\u4e00\u6761\u7ebf\u6765\u5f3a\u8c03\u6587\u5b57 \u53ef\u4f7f\u7528\n\n    ~~this~~\n\n\u6548\u679c\u4e3a\n\n<del>this</del>\n\n\n\n<h2 id=\"layout\">\u4e00\u4e9b\u548c\u6392\u7248\u6709\u5173\u7684\u8d44\u6e90</h2>\n\n-  [Web \u4e2d\u6587\u5b57\u4f53\u5e94\u7528\u6307\u5357](https://ruby-china.org/topics/14005)\n-  [\u4e2d\u6587\u6392\u7248\u7684\u6700\u4f73\u5b9e\u8df5](http://zhuanlan.zhihu.com/FrontendMagazine/19891152)\n-  [Entry.css](https://github.com/zmmbreeze/Entry.css/)\n\n   > Customizable and readable less library for Chinese text. \u4e00\u4e2a\u53ef\u914d\u7f6e\u7684\u3001\u66f4\u9002\u5408\u9605\u8bfb\u7684\u4e2d\u6587\u6587\u7ae0\u6837\u5f0f\u5e93\n-  [typo.css ](https://github.com/sofish/typo.css)\n\n   > \u4e2d\u6587\u7f51\u9875\u91cd\u8bbe\u4e0e\u6392\u7248\uff1a\u4e00\u81f4\u5316\u6d4f\u89c8\u5668\u6392\u7248\u6548\u679c\uff0c\u6784\u5efa\u6700\u9002\u5408\u4e2d\u6587\u9605\u8bfb\u7684\u7f51\u9875\u6392\u7248\n-  [yue.css](https://github.com/lepture/yue.css)\n\n   > A typography stylesheet for readable content\n-  [chinese-copywriting-guidelines](https://github.com/sparanoid/chinese-copywriting-guidelines)\n\n   > Chinese Copywriting Guidelines\uff1a\u4e2d\u6587\u6587\u6848\u6392\u7248\u6307\u5317\n-  [Han.css](https://github.com/ethantw/Han)\n\n   > \u300c\u6f22\u5b57\u6a19\u6e96\u683c\u5f0f\u300d\u5370\u5237\u54c1\u822c\u7684\u6f22\u5b57\u6392\u7248\u6846\u67b6 Han.css: the CSS typography framework optimised for Hanzi.\n\n<h2 id=\"acknowledgement\">\u53c2\u8003\u6587\u7ae0</h2>\n\n- <http://wowubuntu.com/markdown/>\n- <https://github.com/cssmagic/blog/issues/13>\n- <https://help.github.com/articles/github-flavored-markdown/>\n- <https://guides.github.com/features/mastering-markdown/>\n- <https://guides.github.com/features/mastering-markdown/>\n\n<!--\n1. \u5927 V \u90fd\u5728 \u5b66 Markdown \u4f60\u8fd8\u5728\u5e72\u561b\uff1f\n2. markdown \u4e4b \u4f20\u7edf\u8bed\u6cd5\n - http://wowubuntu.com/markdown/\n3. github markdown \u8bed\u6cd5\n4. \u5404\u5e73\u53f0\u4e3a\u5565 markdown \u4e0d\u4e00\u6837\u5462\uff08github\uff0csf.gg\uff0chtml-js\uff0c\u4ee5\u53ca W3CTech\uff08\u4e0d\u652f\u6301\u8868\u683c\u5d4c\u5957\uff09\uff09\n5. \u4e00\u4e9b\u548c\u6587\u5b57\uff0c\u6392\u7248\u6709\u5173\u7cfb\u7684\u4e1c\u897f\u3002\n-->", 
                        "published_at": 1431583920000, 
                        "published_by": 1, 
                        "slug": "markdown-\u8bed\u6cd5\u7b14\u8bb0", 
                        "status": "published", 
                        "title": "Markdown \u8bed\u6cd5\u7b14\u8bb0", 
                        "updated_at": 1431583920000, 
                        "updated_by": 1, 
                        "uuid": "8ec3f7af-533a-4afa-aad5-f6ae49ffed67"
                    }, 
                    {
                        "created_at": 1433649000000, 
                        "created_by": 1, 
                        "id": 4, 
                        "language": "en_US", 
                        "markdown": "branch\u6b63\u786e\u7684\u60c5\u51b5\u4e0b\uff0c \u4e0d\u77e5\u4e3a\u4ec0\u4e48\uff0c\u5728push\u7684\u65f6\u5019\u603b\u662f\u51fa\u73b0\uff1a\n\n\tfatal: remote error:\n\tYou can't push to git://github.com/user_name/user_repo.git\n\tUse git@github.com:user_name/user_repo.git\n\n\u7684\u63d0\u793a\uff0c \u89e3\u51b3\u529e\u6cd5\uff1a\n\n\t$ git remote rm origin\n\t$ git remote add origin git@github.com:user_name/user_repo.git\n\t$ git push origin\n\nok!\n\u7ecf\u8fc7\u9ad8\u4eba\u7684\u70b9\u62e8\uff0c\u627e\u5230\u4e86\u539f\u56e0\uff1a\n\n\u5982\u679c\u5728git clone\u7684\u65f6\u5019\u7528\u7684\u662f`git://github.com:xx/xxx.git`\u7684\u5f62\u5f0f, \u90a3\u4e48\u5c31\u4f1a\u51fa\u73b0\u8fd9\u4e2a\u95ee\u9898\uff0c\u56e0\u4e3a\u8fd9\u4e2aprotocol\u662f\u4e0d\u652f\u6301push\u7684\n\n\u4f7f\u7528\n\n\t$ git clone git@github.com:username/myNCCL.git\n\n\u5c31\u53ef\u4ee5\u7528`git push`\u4e86\u3002\n\n\n\u672c\u6587\u8f6c\u81ea[XscKernel\u7684\u4e13\u680f](http://blog.csdn.net/xsckernel/article/details/9015367)", 
                        "published_at": 1433649000000, 
                        "published_by": 1, 
                        "slug": "github-fatal:-remote-error:-you-can-t-push-to-git-\u89e3\u51b3\u529e\u6cd5", 
                        "status": "published", 
                        "title": "[Github] fatal: remote error: You can't push to git \u89e3\u51b3\u529e\u6cd5", 
                        "updated_at": 1433649000000, 
                        "updated_by": 1, 
                        "uuid": "35c2312c-b994-4661-9487-4ede16241b69"
                    }, 
                    {
                        "created_at": 1431584580000, 
                        "created_by": 1, 
                        "id": 5, 
                        "language": "en_US", 
                        "markdown": "\n## \u76ee\u5f55\n\n1. [About Swift](#About)\n1. [The Basics](#Basic)\n1. [Basic Operators](#BasicOperator)\n1. [Strings and Characters](#String)\n1. [Collection Types](#Collection)\n1. [Control Flow](#ControlFlow)\n1. [Functions](#Function)\n1. [Closures](#Closure)\n1. [Enumerations](#Enumeration)\n1. [Classes and Structures](#Class)\n1. [Properties](#Property)\n1. [Methods](#Method)\n1. [Subscripts](#Subscript)\n1. [Inheritance](#Inheritance)\n1. [Initialization](#Initialization)\n1. [Deinitialization](#Deinitialization)\n1. [Automatic Reference Counting](#ARC)\n1. [Optional Chaining](#OptionalChaining)\n1. [Type Casting](#TypeCasting)\n1. [Nested Types](#NestedType)\n1. [Extensions](#Extension)\n1. [Protocols](#Protocol)\n1. [Generics](#Generic)\n1. [Advanced Operators](#AdvancedOperator)\n1. [A Swift Tour](#Tour) // \u653e\u5230\u6700\u540e\u907f\u514d\u6709\u4eba\u770b\u4e0d\u61c2\n\n<a id=\"About\"></a>\n## About Swift\n\nWe simplified memory management with Automatic Reference Counting.\n\nSwift provides seamless access to existing Cocoa frameworks and mix-and-match interoperability with Objective-C code.\n\n<a id=\"Basic\"></a>\n## The Basics\n\nlet\u58f0\u660e\u5e38\u91cf\uff0cvar\u58f0\u660e\u53d8\u91cf\n\nYou can access the minimum and maximum values of each integer type with its min and max properties.\n\n\u867d\u7136\u6709UInt\uff0c\u4f46\u80fd\u7528Int\u7684\u65f6\u5019\u5c31\u7528Int\u3002\n\n```swift\n// \u5404\u79cd\u8fdb\u5236\u7684\u5b57\u9762\u91cf\u8868\u793a\nlet decimalInteger = 17\nlet binaryInteger = 0b10001       // 17 in binary notation\nlet octalInteger = 0o21           // 17 in octal notation\nlet hexadecimalInteger = 0x11     // 17 in hexadecimal notation\n\n// \u66f4\u6613\u4e8e\u9605\u8bfb\u7684\u5199\u6cd5\nlet paddedDouble = 000123.456\nlet oneMillion = 1_000_000\nlet justOverOneMillion = 1_000_000.000_000_1\n```\n\nFloating-point values are always truncated when used to initialize a new integer value in this way. This means that 4.75 becomes 4, and -3.9 becomes -3.\n\n```swift\n// \u5b9a\u4e49\u7c7b\u578b\u522b\u540d typealias\ntypealias AudioSample = UInt16\n\n// optional binding\uff0c\u53ea\u6709\u5f53yyy\u662foptional\u7684\u65f6\u5019\u624d\u53ef\u4ee5\u8fd9\u6837\u7528\u3002optional\u7684yyy\u975e\u7a7a\u65f6\u4e3a\u771f\uff0c\u5c06yyy\u4e2d\u7684\u503c\u53d6\u51fa\u8d4b\u7ed9xxx\uff0c\u7a7a\u65f6\uff08nil\uff09\u4e3a\u5047\uff1b\n\nif let xxx = yyy {\n     // do something\n} else {\n     // do other thing\n}\n\n// decompose\u4e00\u4e2atuple\u65f6\uff0c\u5bf9\u4e8e\u4e0d\u60f3\u4f7f\u7528\u7684\u5143\u7d20\u7528\u2019_\u2019\u63a5\u6536\nlet http404Error = (404, \"Not Found\")\nlet (justTheStatusCode, _) = http404Error\nprintln(\"The status code is \\(justTheStatusCode)\")\n// prints \"The status code is 404\n\nlet possibleNumber = \"123\"\nlet convertedNumber = possibleNumber.toInt()\n// convertedNumber is inferred to be of type \"Int?\", or \"optional Int\u201d\uff0c\u56e0\u4e3atoInt()\u53ef\u80fd\u4f1a\u5931\u8d25\uff08\u6bd4\u5982\u201c123a\u201d\uff09\u5bfc\u81f4\u8fd4\u56denil\n```\n\nYou can use an if statement to find out whether an optional contains a value. If an optional does have a value, it evaluates to true; if it has no value at all, it evaluates to false.\n\nOnce you\u2019re sure that the optional does contain a value, you can access its underlying value by adding an exclamation mark (!) to the end of the optional\u2019s name. The exclamation mark effectively says, \u201cI know that this optional definitely has a value; please use it.\u201d This is known as forced unwrapping of the optional\u2019s value\u3002\n\nIf you define an optional constant or variable without providing a default value, the constant or variable is automatically set to nil for you.\n\n<a id=\"BasicOperator\"></a>\n## Basic Operators\n\nUnlike C, Swift lets you perform remainder (%) calculations on floating-point numbers.\n\n```swift\nif x = y {\n    // this is not valid, because x = y does not return a value\n}\n\n// Swift\u4e2d\u7684\u53d6\u6a21\u64cd\u4f5c\n-9 % 4   // equals -1\uff0c\u7406\u89e3\u6210\uff1a-9 = (4 \u00d7 -2) + -1\n```\n\nSwift also provides two identity operators (=== and !==), which you use to test whether two object references both refer to the same object instance\n\n```swift\n// \uff1f\uff1f\uff1f\nvar arr1 = [1, 2, 3]\nvar arr2 = arr1\narr2[0] = 10;\narr1     // [10, 2, 3]\narr2     // [10, 2, 3]\narr1 === arr2  // \u4fee\u6539arr2\uff0carr1\u4e5f\u8ddf\u7740\u4fee\u6539\uff0c\u6240\u4ee5\u5e94\u8be5\u662f\u6307\u5411\u4e00\u4e2aobject\uff0c\u8fd9\u91cc\u5e94\u8be5\u662ftrue\uff0c\u4f46\u7ed3\u679c\u5374\u662ffalse\n```\n\n<a id=\"String\"></a>\n## String and Characters\n\nSwift\u2019s String type is a value type. If you create a new String value, that String value is copied when it is passed to a function or method, or when it is assigned to a constant or variable.\n\nString\u5224\u65ad\u662f\u5426\u5305\u542b\u67d0\u524d\u7f00\u6216\u540e\u7f00\u7684\u65b9\u6cd5\uff1ahasPrefix\uff0chasSuffix\n\nString\u600e\u4e48\u968f\u673a\u53d6\u5176\u4e2d\u4e00\u4e2a\u5b57\u7b26\uff1f\n\n<a id=\"Collection\"></a>\n## Collection Types\n\n```swift\n// arr\u968f\u7740brr\u6539\u53d8\nvar arr = [\"hello\", \"world\"]\nvar brr = arr\nbrr[0] = \"haw\"\nbrr     // [\"haw\", \"world\"]\narr     // [\"haw\", \"world\"]\n\n\n// arr\u4e0d\u968fbrr\u6539\u53d8\uff0c\u8bf4\u660ebrr\u539f\u672c\u4e0earr\u6307\u5411\u4e00\u5757\u5185\u5b58\uff0c\u4ee5\u4e0b\u64cd\u4f5c\u540e\u6307\u5411\u65b0\u7684\u5185\u5b58\uff0c\u5e76\u628a\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u503ccopy\u4e86\u4e00\u904d\u3002\n// \u957f\u5ea6\u53d1\u751f\u53d8\u5316\u65f6\uff0cArray\u4f1a\u53d1\u751f\u62f7\u8d1d\nvar arr = [\"hello\", \"world\"]\nvar brr = arr\nbrr[0..0] = [\"haw\"]\nbrr     // [\"haw\", \"hello\", \"world\u201d]\narr      //  [\"hello\", \"world\"]\n\n\n// arr\u4e0d\u968fbrr\u6539\u53d8\uff0c\u540c\u4e0a\nvar arr = [\"hello\", \"world\"]\nvar brr = arr\nbrr.insert(\"haw\", atIndex: 0)      // remove\u4e5f\u4e00\u6837\n\nbrr     // [\"haw\", \"hello\", \"world\u201d]\narr      //  [\"hello\", \"world\"]\n```\n\n```swift\nfor (index, value) in enumerate(shoppingList) {\n    println(\"Item \\(index + 1): \\(value)\")\n}\n// Item 1: Six eggs\n// Item 2: Milk\n// Item 3: Flour\n// Item 4: Baking Powder\n// Item 5: Bananas\n```\n\n```swift\nvar threeDoubles = Double[](count: 3, repeatedValue: 0.0)\n// threeDoubles is of type Double[], and equals [0.0, 0.0, 0.0]\nvar anotherThreeDoubles = Array(count: 3, repeatedValue: 2.5)\n// anotherThreeDoubles is inferred as Double[], and equals [2.5, 2.5, 2.5]\n```\n\nThe only restriction is that KeyType must be hashable\u2014that is, it must provide a way to make itself uniquely representable. All of Swift\u2019s basic types (such as String, Int, Double, and Bool) are hashable by default, and all of these types can be used as the keys of a dictionary. Enumeration member values without associated values (as described in Enumerations) are also hashable by default.\n\n```swift\n// \u4ee5\u4e0b\u5c06\u5b57\u5178airports\u4e2dkey\u4e3aDUB\u7684\u503c\u66f4\u65b0\u4e3aDublin International\uff0c\u8fd4\u56de\u7684\u662f\u5b83\u539f\u6765\u7684\u503c\nif let oldValue = airports.updateValue(\"Dublin International\", forKey: \"DUB\") {\n    println(\"The old value for DUB was \\(oldValue).\")\n}\n// prints \"The old value for DUB was Dublin.\n```\n\nYou can also use subscript syntax to retrieve a value from the dictionary for a particular key. Because it is possible to request a key for which no value exists, a dictionary\u2019s subscript returns an optional value of the dictionary\u2019s value type.\n\n```swift\nairports[\"APL\"] = \"Apple International\"\n// \"Apple International\" is not the real airport for APL, so delete it\nairports[\"APL\"] = nil\n// APL has now been removed from the dictionary\n\nif let removedValue = airports.removeValueForKey(\"DUB\") {\n    println(\"The removed airport's name is \\(removedValue).\")\n} else {\n    println(\"The airports dictionary does not contain a value for DUB.\")\n}\n// prints \"The removed airport's name is Dublin International.\n\n//\nfor airportCode in airports.keys {\n    println(\"Airport code: \\(airportCode)\")\n}\n// Airport code: TYO\n// Airport code: LHR\n\nfor airportName in airports.values {\n    println(\"Airport name: \\(airportName)\")\n}\n// Airport name: Tokyo\n// Airport name: London Heathrow\n\nlet airportCodes = Array(airports.keys)\n// airportCodes is [\"TYO\", \"LHR\"]\n\nlet airportNames = Array(airports.values)\n// airportNames is [\"Tokyo\", \"London Heathrow\"]\n```\n\nArrays and dictionaries store multiple values together in a single collection. If you create an array or a dictionary and assign it to a variable, the collection that is created will be mutable. This means that you can change (or mutate) the size of the collection after it is created by adding more items to the collection, or by removing existing items from the ones it already contains. Conversely, if you assign an array or a dictionary to a constant, that array or dictionary is immutable, and its size cannot be changed.\n\nFor dictionaries, immutability also means that you cannot replace the value for an existing key in the dictionary. An immutable dictionary\u2019s contents cannot be changed once they are set.\n\nImmutability has a slightly different meaning for arrays, however. You are still not allowed to perform any action that has the potential to change the size of an immutable array, but you are allowed to set a new value for an existing index in the array. This enables Swift\u2019s Array type to provide optimal performance for array operations when the size of an array is fixed.\n\n<a id=\"ControlFlow\"></a>\n## Control Flow\n\n```swift\nlet base = 3\nlet power = 10\nvar answer = 1\nfor _ in 1...power {\n    answer *= base\n}\nprintln(\"\\(base) to the power of \\(power) is \\(answer)\")\n// prints \"3 to the power of 10 is 59049\n```\n\nswitch\u4e2d\u7684case\u60c5\u51b5\u8981\u7a77\u5c3d\u6240\u6709\u7684\u53ef\u80fd\u6027\uff0c\u5982\u679c\u53ef\u4ee5\u7a77\u5c3d\uff08\u6bd4\u5982case\u662fenum\u7c7b\u578b\u7684\u6709\u9650\u51e0\u4e2a\u503c\uff09\u5219\u53ef\u4ee5\u4e0d\u52a0default\uff0c\u5426\u5219\u4e00\u5b9a\u8981\u52a0default\u3002case\u4e2d\u53ef\u4ee5\u4f7f\u7528\u533a\u95f4\uff0c\u5f00\u95ed\u90fd\u53ef\u4ee5\u3002\n\n```swift\nlet count = 3_000_000_000_000\nlet countedThings = \"stars in the Milky Way\"\nvar naturalCount: String\nswitch count {\ncase 0:\n    naturalCount = \"no\"\ncase 1...3:\n    naturalCount = \"a few\"\ncase 4...9:\n    naturalCount = \"several\"\ncase 10...99:\n    naturalCount = \"tens of\"\ncase 100...999:\n    naturalCount = \"hundreds of\"\ncase 1000...999_999:\n    naturalCount = \"thousands of\"\ndefault:\n    naturalCount = \"millions and millions of\"\n}\nprintln(\"There are \\(naturalCount) \\(countedThings).\")\n// prints \"There are millions and millions of stars in the Milky Way.\n\n\nlet somePoint = (1, 1)\nswitch somePoint {\ncase (0, 0):\n    println(\"(0, 0) is at the origin\")\ncase (_, 0):\n    println(\"(\\(somePoint.0), 0) is on the x-axis\")\ncase (0, _):\n    println(\"(0, \\(somePoint.1)) is on the y-axis\")\ncase (-2...2, -2...2):\n    println(\"(\\(somePoint.0), \\(somePoint.1)) is inside the box\")\ndefault:\n    println(\"(\\(somePoint.0), \\(somePoint.1)) is outside of the box\")\n}\n// prints \"(1, 1) is inside the box\n```\n\nUnlike C, Swift allows multiple switch cases to consider the same value or values. In fact, the point (0, 0) could match all four of the cases in this example. However, if multiple matches are possible, the first matching case is always used. The point (0, 0) would match case (0, 0) first, and so all other matching cases would be ignored.\n\n```swift\nswitch anotherPoint {\ncase (let x, 0):\n    println(\"on the x-axis with an x value of \\(x)\")\ncase (0, let y):\n    println(\"on the y-axis with a y value of \\(y)\")\ncase let (x, y):\n    println(\"somewhere else at (\\(x), \\(y))\")\n}\n// prints \"on the x-axis with an x value\n\n\nlet yetAnotherPoint = (1, -1)\nswitch yetAnotherPoint {\ncase let (x, y) where x == y:\n    println(\"(\\(x), \\(y)) is on the line x == y\")\ncase let (x, y) where x == -y:\n    println(\"(\\(x), \\(y)) is on the line x == -y\")\ncase let (x, y):\n    println(\"(\\(x), \\(y)) is just some arbitrary point\")\n}\n// prints \"(1, -1) is on the line x == -y\n\nlet integerToDescribe = 5\nvar description = \"The number \\(integerToDescribe) is\"\nswitch integerToDescribe {\ncase 2, 3, 5, 7, 11, 13, 17, 19:\n    description += \" a prime number, and also\"\n    fallthrough\ndefault:\n    description += \" an integer.\"\n}\nprintln(description)\n// prints \"The number 5 is a prime number, and also an integer.\n\n\ngameLoop: while square != finalSquare {\n    if ++diceRoll == 7 { diceRoll = 1 }\n    switch square + diceRoll {\n    case finalSquare:\n        // diceRoll will move us to the final square, so the game is over\n        break gameLoop\n    case let newSquare where newSquare > finalSquare:\n        // diceRoll will move us beyond the final square, so roll again\n        continue gameLoop\n    default:\n        // this is a valid move, so find out its effect\n        square += diceRoll\n        square += board[square]\n    }\n}\nprintln(\"Game over!\")\n```\n\n<a id=\"Function\"></a>\n## Functions\n\nIf you provide an external parameter name for a parameter, that external name must always be used when calling the function.\n\n```swift\nfunc join(string s1: String, toString s2: String, withJoiner joiner: String)\n    -> String {\n        return s1 + joiner + s2\n}\njoin(string: \"hello\", toString: \"world\", withJoiner: \", \")\n// returns \"hello, world\"\n```\n\n```swift\nfunc containsCharacter(#string: String, #characterToFind: Character) -> Bool {\n    for character in string {\n        if character == characterToFind {\n            return true\n        }\n    }\n    return false\n}\n\nlet containsAVee = containsCharacter(string: \"aardvark\", characterToFind: \"v\")\n// containsAVee equals true, because \"aardvark\" contains a \"v\"\n```\n\n```swift\nfunc join(string s1: String, toString s2: String,\n    withJoiner joiner: String = \" \") -> String {\n        return s1 + joiner + s2\n}\njoin(string: \"hello\", toString: \"world\", withJoiner: \"-\")\n// returns \"hello-world\u201d\njoin(string: \"hello\", toString: \"world\")\n// returns \"hello world\"\n```\n\n```swift\nfunc join(s1: String, s2: String, joiner: String = \" \") -> String {\n    return s1 + joiner + s2\n}\njoin(\"hello\", \"world\", joiner: \"-\")\n// returns \"hello-world\u201d  \u6709\u9ed8\u8ba4\u503c\u7684\u53c2\u6570\uff0c\u5982\u679c\u4f60\u6ca1\u6709\u4f7f\u7528\u5916\u90e8\u53c2\u6570\u540d\uff0cSwift\u4f1a\u81ea\u52a8\u63d0\u4f9b\u4e00\u4e2a\u548c\u5185\u90e8\u53c2\u6570\u540d\u4e00\u6837\u7684\u5916\u90e8\u53c2\u6570\u540d\n```\n\n```swift\nfunc arithmeticMean(numbers: Double...) -> Double {\n    var total: Double = 0\n    for number in numbers {\n        total += number\n    }\n    return total / Double(numbers.count)\n}\narithmeticMean(1, 2, 3, 4, 5)\n// returns 3.0, which is the arithmetic mean of these five numbers\narithmeticMean(3, 8, 19)\n// returns 10.0, which is the arithmetic mean of these three numbers\n```\n\nA function may have at most one variadic parameter, and it must always appear last in the parameter list, to avoid ambiguity when calling the function with multiple parameters.\n\nIf your function has one or more parameters with a default value, and also has a variadic parameter, place the variadic parameter after all the defaulted parameters at the very end of the list.\n\n\u5f62\u53c2\u9ed8\u8ba4\u662f\u5e38\u91cf\uff0c\u5982\u679c\u8981\u6539\u53d8\u5f62\u53c2\uff0c\u9700\u8981\u7528var\u663e\u5f0f\u58f0\u660e\u4e3a\u53d8\u91cf // swift\u4e2d\u6709\u8bb8\u591a\u9ed8\u8ba4\u60c5\u51b5\u548c\u4e3b\u6d41\uff08\u6bd4\u5982C\\C++\uff09\u8bed\u8a00\u90fd\u662f\u76f8\u53cd\u7684\uff0c\u5b83\u5c06\u66f4\u5e38\u89c1\u7684\u60c5\u51b5\u8bbe\u5b9a\u4e3a\u9ed8\u8ba4\n\n```swift\nfunc alignRight(var string: String, count: Int, pad: Character) -> String {\n    let amountToPad = count - countElements(string)\n    for _ in 1...amountToPad {\n        string = pad + string\n    }\n    return string\n}\nlet originalString = \"hello\"\nlet paddedString = alignRight(originalString, 10, \"-\")\n// paddedString is equal to \"-----hello\"\n// originalString is still equal to \"hello\"\n```\n\nIn-out parameters cannot have default values, and variadic parameters cannot be marked as inout. If you mark a parameter as inout, it cannot also be marked as var or let.\n\n```swift\nfunc swapTwoInts(inout a: Int, inout b: Int) { // \u7c7b\u4f3c\u4e8e\u5f15\u7528\u4f20\u53c2\n    let temporaryA = a\n    a = b\n    b = temporaryA\n}\n\nvar someInt = 3\nvar anotherInt = 107\nswapTwoInts(&someInt, &anotherInt)\nprintln(\"someInt is now \\(someInt), and anotherInt is now \\(anotherInt)\")\n// prints \"someInt is now 107, and anotherInt is now 3\"\n```\n\n\u50cf\u5b9a\u4e49\u5e38\u91cf\u6216\u53d8\u91cf\u4e00\u6837\u5b9a\u4e49\u51fd\u6570\uff1a\n\n```swift\nvar mathFunction: (Int, Int) -> Int = addTwoInts\nprintln(\"Result: \\(mathFunction(2, 3))\")\n// prints \"Result: 5\u201d\n\nlet anotherMathFunction = addTwoInts\n// anotherMathFunction is inferred to be of type (Int, Int) -> Int\n```\n\n```swift\nfunc printMathResult(mathFunction: (Int, Int) -> Int, a: Int, b: Int) {\n    println(\"Result: \\(mathFunction(a, b))\")\n}\nprintMathResult(addTwoInts, 3, 5)\n// prints \"Result: 8\"\n```\n\nSwift\u652f\u6301\u5d4c\u5957\u51fd\u6570\uff1a\n\n```swift\nfunc chooseStepFunction(backwards: Bool) -> (Int) -> Int {\n    func stepForward(input: Int) -> Int { return input + 1 }\n    func stepBackward(input: Int) -> Int { return input - 1 }\n    return backwards ? stepBackward : stepForward\n}\nvar currentValue = -4\nlet moveNearerToZero = chooseStepFunction(currentValue > 0)\n// moveNearerToZero now refers to the nested stepForward() function\nwhile currentValue != 0 {\n    println(\"\\(currentValue)... \")\n    currentValue = moveNearerToZero(currentValue)\n}\nprintln(\"zero!\")\n// -4...\n// -3...\n// -2...\n// -1...\n// zero!\n```\n\n<a id=\"Closure\"></a>\n## Closures\n\nGlobal and nested functions, as introduced in Functions, are actually special cases of closures. Closures take one of three forms:\n\n* Global functions are closures that have a name and do not capture any values.\n* Nested functions are closures that have a name and can capture values from their enclosing function.\n* Closure expressions are unnamed closures written in a lightweight syntax that can capture values from their surrounding context.\n\nClosure expression syntax has the following general form:\n\n```swift\n{ (parameters) -> return type in\n    statements\n}\n```\n\n```swift\nlet names = [\"Chris\", \"Alex\", \"Ewa\", \"Barry\", \"Daniella\u201d]\nfunc backwards(s1: String, s2: String) -> Bool {\n    return s1 > s2\n}\n// \u65b9\u6cd51\nvar reversed = sort(names, backwards)\n// reversed is equal to [\"Ewa\", \"Daniella\", \"Chris\", \"Barry\", \"Alex\u201d]\n\n// 1.5\nreversed = sort(names, { (s1: String, s2: String) -> Bool in return s1 > s2 } )\n\n// \u65b9\u6cd52\nreversed = sort(names, { s1, s2 in return s1 > s2 } )\n\n// \u65b9\u6cd53\nreversed = sort(names, { s1, s2 in s1 > s2 } ) // Implicit Returns from Single-Expression Closures\n\n// \u65b9\u6cd54\nreversed = sort(names, { $0 > $1 } )\n\n// \u65b9\u6cd55\nreversed = sort(names, >)\n\n// \u65b9\u6cd56\nreversed = sort(names) { $0 > $1 }\n```\n\nIt is always possible to infer parameter types and return type when passing a closure to a function as an inline closure expression. As a result, you rarely need to write an inline closure in its fullest form.\n\n```swift\nfunc someFunctionThatTakesAClosure(closure: () -> ()) {\n    // function body goes here\n}\n\n// here's how you call this function without using a trailing closure:\n\nsomeFunctionThatTakesAClosure({\n    // closure's body goes here\n    })\n\n// here's how you call this function with a trailing closure instead:\n\nsomeFunctionThatTakesAClosure() {\n    // trailing closure's body goes here\n}\n```\n\nIf a closure expression is provided as the function\u2019s only argument and you provide that expression as a trailing closure, you do not need to write a pair of parentheses () after the function\u2019s name when you call the function.\n\n```swift\nlet digitNames = [\n    0: \"Zero\", 1: \"One\", 2: \"Two\",   3: \"Three\", 4: \"Four\",\n    5: \"Five\", 6: \"Six\", 7: \"Seven\", 8: \"Eight\", 9: \"Nine\"\n]\nlet numbers = [16, 58, 510]\nlet strings = numbers.map {\n    (var number) -> String in\n    var output = \"\"\n    while number > 0 {\n        output = digitNames[number % 10]! + output\n        number /= 10\n    }\n    return output\n}\n// strings is inferred to be of type String[]\n// its value is [\"OneSix\", \"FiveEight\", \"FiveOneZero\"]\n```\n\n```swift\nfunc makeIncrementor(forIncrement amount: Int) -> () -> Int {\n    var runningTotal = 0\n    func incrementor() -> Int {\n        runningTotal += amount\n        return runningTotal\n    }\n    return incrementor\n}\n\nlet incrementByTen = makeIncrementor(forIncrement: 10)\nincrementByTen()\n// returns a value of 10\nincrementByTen()\n// returns a value of 20\nincrementByTen()\n// returns a value of 30\n\nlet incrementBySeven = makeIncrementor(forIncrement: 7)\nincrementBySeven()\n// returns a value of 7\nincrementByTen()\n// returns a value of 40\n\nlet alsoIncrementByTen = incrementByTen\nalsoIncrementByTen()\n// returns a value of 50\n```\n\nfunctions and closures are reference types.\n\n<a id=\"Enumeration\"></a>\n## Enumerations\n\n```swift\nenum CompassPoint {\n    case North\n    case South\n    case East\n    case West\n}\n\nenum Planet {\n    case Mercury, Venus, Earth, Mars, Jupiter, Saturn, Uranus, Neptune\n}\n\nvar directionToHead = CompassPoint.West\ndirectionToHead = .East\n\ndirectionToHead = .South\nswitch directionToHead {\ncase .North:\n    println(\"Lots of planets have a north\")\ncase .South:\n    println(\"Watch out for penguins\")\ncase .East:\n    println(\"Where the sun rises\")\ncase .West:\n    println(\"Where the skies are blue\")\n}\n// prints \"Watch out for penguins\"\n```\n\n```swift\nlet somePlanet = Planet.Earth\nswitch somePlanet {\ncase .Earth:\n    println(\"Mostly harmless\")\ndefault:\n    println(\"Not a safe place for humans\")\n}\n// prints \"Mostly harmless\"\n```\n\n```swift\nenum Barcode {\n    case UPCA(Int, Int, Int)\n    case QRCode(String)\n}\n\nvar productBarcode = Barcode.UPCA(8, 85909_51226, 3)\nproductBarcode = .QRCode(\"ABCDEFGHIJKLMNOP\u201d)\n\nswitch productBarcode {\ncase .UPCA(let numberSystem, let identifier, let check):\n    println(\"UPC-A with value of \\(numberSystem), \\(identifier), \\(check).\")\ncase .QRCode(let productCode):\n    println(\"QR code with value of \\(productCode).\")\n}\n// prints \"QR code with value of ABCDEFGHIJKLMNOP.\u201d\n\nswitch productBarcode {\ncase let .UPCA(numberSystem, identifier, check):\n    println(\"UPC-A with value of \\(numberSystem), \\(identifier), \\(check).\")\ncase let .QRCode(productCode):\n    println(\"QR code with value of \\(productCode).\")\n}\n// prints \"QR code with value of ABCDEFGHIJKLMNOP.\"\n```\n\n```swift\n// raw values\nenum ASCIIControlCharacter: Character {\n    case Tab = \"\\t\"\n    case LineFeed = \"\\n\"\n    case CarriageReturn = \"\\r\"\n}\n\nenum Planet: Int {\n    case Mercury = 1, Venus, Earth, Mars, Jupiter, Saturn, Uranus, Neptune\n}\n\nlet earthsOrder = Planet.Earth.toRaw()\n// earthsOrder is 3\n\nlet possiblePlanet = Planet.fromRaw(7)\n// possiblePlanet is of type Planet? and equals Planet.Uranus\n\nlet positionToFind = 9\nif let somePlanet = Planet.fromRaw(positionToFind) {\n    switch somePlanet {\n    case .Earth:\n        println(\"Mostly harmless\")\n    default:\n        println(\"Not a safe place for humans\")\n    }\n} else {\n    println(\"There isn't a planet at position \\(positionToFind)\")\n}\n// prints \"There isn't a planet at position 9\"\n```\n\n<a id=\"Class\"></a>\n## Classes and Structures\n\nClasses have additional capabilities that structures do not:\n\nInheritance enables one class to inherit the characteristics of another.\nType casting enables you to check and interpret the type of a class instance at runtime.\nDeinitializers enable an instance of a class to free up any resources it has assigned.\nReference counting allows more than one reference to a class instance.\n\nStructures are always copied when they are passed around in your code, and do not use reference counting.\n\n```swift\nif tenEighty === alsoTenEighty {\n    println(\"tenEighty and alsoTenEighty refer to the same Resolution instance.\")\n}\n// prints \"tenEighty and alsoTenEighty refer to the same Resolution instance.\u201d\n```\n\nWhenever you assign a Dictionary instance to a constant or variable, or pass a Dictionary instance as an argument to a function or method call, the dictionary is copied at the point that the assignment or call takes place.\n\n```swift\nvar ages = [\"Peter\": 23, \"Wei\": 35, \"Anish\": 65, \"Katya\": 19]\nvar copiedAges = ages\ncopiedAges[\"Peter\"] = 24\nprintln(ages[\"Peter\"])\n// prints \"23\"\n```\n\nIf you assign an Array instance to a constant or variable, or pass an Array instance as an argument to a function or method call, the contents of the array are not copied at the point that the assignment or call takes place. Instead, both arrays share the same sequence of element values. When you modify an element value through one array, the result is observable through the other.\n\nFor arrays, copying only takes place when you perform an action that has the potential to modify the length of the array. This includes appending, inserting, or removing items, or using a ranged subscript to replace a range of items in the array.\n\n```swift\nvar a = [1, 2, 3]\nvar b = a\nvar c = a\n\nprintln(a[0])\n// 1\nprintln(b[0])\n// 1\nprintln(c[0])\n// 1\n\na[0] = 42\nprintln(a[0])\n// 42\nprintln(b[0])\n// 42\nprintln(c[0])\n// 42\n\na.append(4)\na[0] = 777\nprintln(a[0])\n// 777\nprintln(b[0])\n// 42\nprintln(c[0])\n// 42\n\nb.unshare()\n\nb[0] = -105\nprintln(a[0])\n// 777\nprintln(b[0])\n// -105\nprintln(c[0])\n// 42\n\nif b === c {\n    println(\"b and c still share the same array elements.\")\n} else {\n    println(\"b and c now refer to two independent sets of array elements.\")\n}\n// prints \"b and c now refer to two independent sets of array elements.\"\n```\n\n```swift\nvar names = [\"Mohsen\", \"Hilary\", \"Justyn\", \"Amy\", \"Rich\", \"Graham\", \"Vic\"]\nvar copiedNames = names.copy()\ncopiedNames[0] = \"Mo\"\nprintln(names[0])\n// prints \"Mohsen\"\n```\n\nIf you simply need to be sure that your reference to an array\u2019s contents is the only reference in existence, call the unshare method, not the copy method. The unshare method does not make a copy of the array unless it is necessary to do so. The copy method always copies the array, even if it is already unshared.\n\n<a id=\"Property\"></a>\n## Properties\n\nComputed properties are provided by classes, structures, and enumerations. Stored properties are provided only by classes and structures.\n\n```swift\nlet rangeOfFourItems = FixedLengthRange(firstValue: 0, length: 4)\n// this range represents integer values 0, 1, 2, and 3\nrangeOfFourItems.firstValue = 6\n// this will report an error, even thought firstValue is a variable property\n```\n\nBecause rangeOfFourItems is declared as a constant (with the let keyword), it is not possible to change its firstValue property, even though firstValue is a variable property.\n\nThis behavior is due to structures being value types. When an instance of a value type is marked as a constant, so are all of its properties.\n\nThe same is not true for classes, which are reference types. If you assign an instance of a reference type to a constant, you can still change that instance\u2019s variable properties.\n\n```swift\nclass DataImporter {\n    /*\n    DataImporter is a class to import data from an external file.\n    The class is assumed to take a non-trivial amount of time to initialize.\n    */\n    var fileName = \"data.txt\"\n    // the DataImporter class would provide data importing functionality here\n}\n\nclass DataManager {\n    @lazy var importer = DataImporter()\n    var data = String[]()\n    // the DataManager class would provide data management functionality here\n}\n\nlet manager = DataManager()\nmanager.data += \"Some data\"\nmanager.data += \"Some more data\"\n// the DataImporter instance for the importer property has not yet been created\n\nprintln(manager.importer.fileName)\n// the DataImporter instance for the importer property has now been created\n// prints \"data.txt\"\n```\n\nIn addition to stored properties, classes, structures, and enumerations can define computed properties, which do not actually store a value. Instead, they provide a getter and an optional setter to retrieve and set other properties and values indirectly.\n\n```swift\nstruct Point {\n    var x = 0.0, y = 0.0\n}\nstruct Size {\n    var width = 0.0, height = 0.0\n}\nstruct Rect {\n    var origin = Point()\n    var size = Size()\n    var center: Point { // center\u662fcomputed property\n    get {\n        let centerX = origin.x + (size.width / 2)\n        let centerY = origin.y + (size.height / 2)\n        return Point(x: centerX, y: centerY)\n    }\n    set(newCenter) {\n        origin.x = newCenter.x - (size.width / 2)\n        origin.y = newCenter.y - (size.height / 2)\n    }\n    }\n}\nvar square = Rect(origin: Point(x: 0.0, y: 0.0),\n    size: Size(width: 10.0, height: 10.0))\nlet initialSquareCenter = square.center\nsquare.center = Point(x: 15.0, y: 15.0)\nprintln(\"square.origin is now at (\\(square.origin.x), \\(square.origin.y))\")\n// prints \"square.origin is now at (10.0, 10.0)\"\n```\n\nYou must declare computed properties\u2014including read-only computed properties\u2014as variable properties with the var keyword, because their value is not fixed.\n\n```swift\nstruct Cuboid {\n    var width = 0.0, height = 0.0, depth = 0.0\n    var volume: Double {\n    return width * height * depth\n    }\n}\nlet fourByFiveByTwo = Cuboid(width: 4.0, height: 5.0, depth: 2.0)\nprintln(\"the volume of fourByFiveByTwo is \\(fourByFiveByTwo.volume)\")\n// prints \"the volume of fourByFiveByTwo is 40.0\u201d\n```\n\nwillSet and didSet observers are not called when a property is first initialized. They are only called when the property\u2019s value is set outside of an initialization context.\n\n```swift\nclass StepCounter {\n    var totalSteps: Int = 0 {\n    willSet(newTotalSteps) {\n        println(\"About to set totalSteps to \\(newTotalSteps)\")\n    }\n    didSet {\n        if totalSteps > oldValue  {\n            println(\"Added \\(totalSteps - oldValue) steps\")\n        }\n    }\n    }\n}\nlet stepCounter = StepCounter()\nstepCounter.totalSteps = 200\n// About to set totalSteps to 200\n// Added 200 steps\nstepCounter.totalSteps = 360\n// About to set totalSteps to 360\n// Added 160 steps\nstepCounter.totalSteps = 896\n// About to set totalSteps to 896\n// Added 536 steps\n```\n\nIf you assign a value to a property within its own didSet observer, the new value that you assign will replace the one that was just set.\n\nGlobal constants and variables are always computed lazily, in a similar manner to Lazy Stored Properties. Unlike lazy stored properties, global constants and variables do not need to be marked with the @lazy attribute.\nLocal constants and variables are never computed lazily.\n\nFor value types (that is, structures and enumerations), you can define stored and computed type properties. For classes, you can define computed type properties only.\n\nUnlike stored instance properties, you must always give stored type properties a default value. This is because the type itself does not have an initializer that can assign a value to a stored type property at initialization time.\n\n```swift\nstruct SomeStructure {\n    static var storedTypeProperty = \"Some value.\"\n    static var computedTypeProperty: Int {\n    // return an Int value here\n    }\n}\nenum SomeEnumeration {\n    static var storedTypeProperty = \"Some value.\"\n    static var computedTypeProperty: Int {\n    // return an Int value here\n    }\n}\nclass SomeClass {\n    class var computedTypeProperty: Int {\n    // return an Int value here\n    }\n}\n\nprintln(SomeClass.computedTypeProperty)\n// prints \"42\"\n\nprintln(SomeStructure.storedTypeProperty)\n// prints \"Some value.\"\nSomeStructure.storedTypeProperty = \"Another value.\"\nprintln(SomeStructure.storedTypeProperty)\n// prints \"Another value.\"\n```\n\n```swift\nstruct AudioChannel {\n    static let thresholdLevel = 10\n    static var maxInputLevelForAllChannels = 0\n    var currentLevel: Int = 0 {\n    didSet {\n        if currentLevel > AudioChannel.thresholdLevel {\n            // cap the new audio level to the threshold level\n            currentLevel = AudioChannel.thresholdLevel\n        }\n        if currentLevel > AudioChannel.maxInputLevelForAllChannels {\n            // store this as the new overall maximum input level\n            AudioChannel.maxInputLevelForAllChannels = currentLevel\n        }\n    }\n    }\n}\n\nvar leftChannel = AudioChannel()\nvar rightChannel = AudioChannel()\n\nleftChannel.currentLevel = 7\nprintln(leftChannel.currentLevel)\n// prints \"7\"\nprintln(AudioChannel.maxInputLevelForAllChannels)\n// prints \u201c7\"\n\nrightChannel.currentLevel = 11\nprintln(rightChannel.currentLevel)\n// prints \"10\"\nprintln(AudioChannel.maxInputLevelForAllChannels)\n// prints \"10\"\n```\n\n<a id=\"Method\"></a>\n## Methods\n\nStructures and enumerations are value types. By default, the properties of a value type cannot be modified from within its instance methods.\n\n```swift\nstruct Point {\n    var x = 0.0, y = 0.0\n    mutating func moveByX(deltaX: Double, y deltaY: Double) {\n        x += deltaX\n        y += deltaY\n    }\n}\nvar somePoint = Point(x: 1.0, y: 1.0)\nsomePoint.moveByX(2.0, y: 3.0)\nprintln(\"The point is now at (\\(somePoint.x), \\(somePoint.y))\")\n// prints \"The point is now at (3.0, 4.0)\"\n```\n\n```swift\nlet fixedPoint = Point(x: 3.0, y: 3.0)\nfixedPoint.moveByX(2.0, y: 3.0)\n// this will report an error\n```\n\n```swift\nenum TriStateSwitch {\n    case Off, Low, High\n    mutating func next() {\n        switch self {\n        case Off:\n            self = Low\n        case Low:\n            self = High\n        case High:\n            self = Off\n        }\n    }\n}\nvar ovenLight = TriStateSwitch.Low\novenLight.next()\n// ovenLight is now equal to .High\novenLight.next()\n// ovenLight is now equal to .Off\n```\n\n```swift\nstruct LevelTracker {\n    static var highestUnlockedLevel = 1\n    static func unlockLevel(level: Int) {\n        if level > highestUnlockedLevel { highestUnlockedLevel = level }\n    }\n    static func levelIsUnlocked(level: Int) -> Bool {\n        return level <= highestUnlockedLevel\n    }\n    var currentLevel = 1\n    mutating func advanceToLevel(level: Int) -> Bool {\n        if LevelTracker.levelIsUnlocked(level) {\n            currentLevel = level\n            return true\n        } else {\n            return false\n        }\n    }\n}\n\nclass Player {\n    var tracker = LevelTracker()\n    let playerName: String\n    func completedLevel(level: Int) {\n        LevelTracker.unlockLevel(level + 1)\n        tracker.advanceToLevel(level + 1)\n    }\n    init(name: String) {\n        playerName = name\n    }\n}\n\nvar player = Player(name: \"Argyrios\")\nplayer.completedLevel(1)\nprintln(\"highest unlocked level is now \\(LevelTracker.highestUnlockedLevel)\")\n// prints \"highest unlocked level is now 2\u201d\n\nplayer = Player(name: \"Beto\")\nif player.tracker.advanceToLevel(6) {\n    println(\"player is now on level 6\")\n} else {\n    println(\"level 6 has not yet been unlocked\")\n}\n// prints \"level 6 has not yet been unlocked\"\n```\n\n<a id=\"Subscript\"></a>\n## Subscripts\n\n```swift\nsubscript(index: Int) -> Int {\n    get {\n        // return an appropriate subscript value here\n    }\n    set(newValue) {\n        // perform a suitable setting action here\n    }\n}\n\n// read-only subscript\nsubscript(index: Int) -> Int {\n    // return an appropriate subscript value here\n}\n\nstruct TimesTable {\n    let multiplier: Int\n    subscript(index: Int) -> Int {\n        return multiplier * index\n    }\n}\nlet threeTimesTable = TimesTable(multiplier: 3)\nprintln(\"six times three is \\(threeTimesTable[6])\")\n// prints \"six times three is 18\"\n```\n\n```swift\nstruct Matrix {\n    let rows: Int, columns: Int\n    var grid: Double[]\n    init(rows: Int, columns: Int) {\n        self.rows = rows\n        self.columns = columns\n        grid = Array(count: rows * columns, repeatedValue: 0.0)\n    }\n    func indexIsValidForRow(row: Int, column: Int) -> Bool {\n        return row >= 0 && row < rows && column >= 0 && column < columns\n    }\n    subscript(row: Int, column: Int) -> Double {\n        get {\n            assert(indexIsValidForRow(row, column: column), \"Index out of range\")\n            return grid[(row * columns) + column]\n        }\n        set {\n            assert(indexIsValidForRow(row, column: column), \"Index out of range\")\n            grid[(row * columns) + column] = newValue\n        }\n    }\n}\n\nvar matrix = Matrix(rows: 2, columns: 2)\nmatrix[0, 1] = 1.5\nmatrix[1, 0] = 3.2\n\nlet someValue = matrix[2, 2]\n// this triggers an assert, because [2, 2] is outside of the matrix bounds\n```\n\n<a id=\"Inheritance\"></a>\n## Inheritance\n\nSwift classes do not inherit from a universal base class. Classes you define without specifying a superclass automatically become base classes for you to build upon.\n\n```swift\nclass Car: Vehicle {\n    var speed: Double = 0.0\n    init() {\n        super.init()\n        maxPassengers = 5\n        numberOfWheels = 4\n    }\n    override func description() -> String {\n        return super.description() + \"; \"\n            + \"traveling at \\(speed) mph\"\n    }\n}\n```\n\nYou can present an inherited read-only property as a read-write property by providing both a getter and a setter in your subclass property override. You cannot, however, present an inherited read-write property as a read-only property.\n\nYou can prevent a method, property, or subscript from being overridden by marking it as final\n\n<a id=\"Initialization\"></a>\n## Initialization\n\nClasses and structures must set all of their stored properties to an appropriate initial value by the time an instance of that class or structure is created. Stored properties cannot be left in an indeterminate state.\n\nSwift provides an automatic external name for every parameter in an initializer if you don\u2019t provide an external name yourself. This automatic external name is the same as the local name, as if you had written a hash symbol before every initialization parameter.\n\nIf you do not want to provide an external name for a parameter in an initializer, provide an underscore (_) as an explicit external name for that parameter to override the default behavior described above.\n\n```swift\nstruct Color {\n    let red = 0.0, green = 0.0, blue = 0.0\n    init(red: Double, green: Double, blue: Double) {\n        self.red   = red\n        self.green = green\n        self.blue  = blue\n    }\n}\n\nlet magenta = Color(red: 1.0, green: 0.0, blue: 1.0)\n\nlet veryGreen = Color(0.0, 1.0, 0.0)\n// this reports a compile-time error - external names are required\n```\n\nYou can modify the value of a constant property at any point during initialization, as long as it is set to a definite value by the time initialization finishes.\n\n```swift\nclass SurveyQuestion {\n    let text: String\n    var response: String?\n    init(text: String) {\n        self.text = text\n    }\n    func ask() {\n        println(text)\n    }\n}\nlet beetsQuestion = SurveyQuestion(text: \"How about beets?\")\nbeetsQuestion.ask()\n// prints \"How about beets?\"\nbeetsQuestion.response = \"I also like beets. (But not with cheese.)\"\n```\n\nstructure types automatically receive a memberwise initializer if they provide default values for all of their stored properties and do not define any of their own custom initializers.\n\n```swift\nstruct Size {\n    var width = 0.0, height = 0.0\n}\nlet twoByTwo = Size(width: 2.0, height: 2.0)\n```\n\nIf you want your custom value type to be initializable with the default initializer and memberwise initializer, and also with your own custom initializers, write your custom initializers in an extension rather than as part of the value type\u2019s original implementation.\n\nDesignated initializers are the primary initializers for a class. A designated initializer fully initializes all properties introduced by that class and calls an appropriate superclass initializer to continue the initialization process up the superclass chain.\n\nConvenience initializers are secondary, supporting initializers for a class. You can define a convenience initializer to call a designated initializer from the same class as the convenience initializer with some of the designated initializer\u2019s parameters set to default values. You can also define a convenience initializer to create an instance of that class for a specific use case or input value type.\n\nTo simplify the relationships between designated and convenience initializers, Swift applies the following three rules for delegation calls between initializers:\n\nRule 1\uff1a\nDesignated initializers must call a designated initializer from their immediate superclass.\n\nRule 2\uff1a\nConvenience initializers must call another initializer available in the same class.\n\nRule 3\uff1a\nConvenience initializers must ultimately end up calling a designated initializer.\n\nA simple way to remember this is:\n\nDesignated initializers must always delegate up.\nConvenience initializers must always delegate across.\n\nClass initialization in Swift is a two-phase process. In the first phase, each stored property is assigned an initial value by the class that introduced it. Once the initial state for every stored property has been determined, the second phase begins, and each class is given the opportunity to customize its stored properties further before the new instance is considered ready for use.\n\n\n```swift\nclass Food {\n    var name: String\n    init(name: String) {\n        self.name = name\n    }\n    convenience init() {\n        self.init(name: \"[Unnamed]\")\n    }\n}\n\nlet namedMeat = Food(name: \"Bacon\")\n// namedMeat's name is \u201cBacon\"\n\nlet mysteryMeat = Food()\n// mysteryMeat's name is \"[Unnamed]\u201d\n\nclass RecipeIngredient: Food {\n    var quantity: Int\n    init(name: String, quantity: Int) {\n        self.quantity = quantity\n        super.init(name: name)\n    }\n    convenience init(name: String) {\n        self.init(name: name, quantity: 1)\n    }\n}\n\nlet oneMysteryItem = RecipeIngredient()\nlet oneBacon = RecipeIngredient(name: \"Bacon\")\nlet sixEggs = RecipeIngredient(name: \"Eggs\", quantity: 6)\n\nclass ShoppingListItem: RecipeIngredient {\n    var purchased = false\n    var description: String {\n    var output = \"\\(quantity) x \\(name.lowercaseString)\"\n        output += purchased ? \" \u2714\" : \" \u2718\"\n        return output\n    }\n}\n\nvar breakfastList = [\n    ShoppingListItem(),\n    ShoppingListItem(name: \"Bacon\"),\n    ShoppingListItem(name: \"Eggs\", quantity: 6),\n]\nbreakfastList[0].name = \"Orange juice\"\nbreakfastList[0].purchased = true\nfor item in breakfastList {\n    println(item.description)\n}\n// 1 x orange juice \u2714\n// 1 x bacon \u2718\n// 6 x eggs \u2718\n```\n\n```swift\nclass SomeClass {\n    let someProperty: SomeType = {\n        // create a default value for someProperty inside this closure\n        // someValue must be of the same type as SomeType\n        return someValue\n        }()\n}\n```\n\nNote that the closure\u2019s end curly brace is followed by an empty pair of parentheses. This tells Swift to execute the closure immediately.\n\n```swift\nstruct Checkerboard {\n    let boardColors: Bool[] = {\n        var temporaryBoard = Bool[]()\n        var isBlack = false\n        for i in 1...10 {\n            for j in 1...10 {\n                temporaryBoard.append(isBlack)\n                isBlack = !isBlack\n            }\n            isBlack = !isBlack\n        }\n        return temporaryBoard\n        }()\n    func squareIsBlackAtRow(row: Int, column: Int) -> Bool {\n        return boardColors[(row * 10) + column]\n    }\n}\n\nlet board = Checkerboard()\nprintln(board.squareIsBlackAtRow(0, column: 1))\n// prints \"true\"\nprintln(board.squareIsBlackAtRow(9, column: 9))\n// prints \"false\"\n```\n\n<a id=\"Deinitialization\"></a>\n## Deinitialization\n\nDeinitializers are only available on class types.\n\n```swift\ndeinit {\n    // perform the deinitialization\n}\n```\n\n```swift\nstruct Bank {\n    static var coinsInBank = 10_000\n    static func vendCoins(var numberOfCoinsToVend: Int) -> Int {\n        numberOfCoinsToVend = min(numberOfCoinsToVend, coinsInBank)\n        coinsInBank -= numberOfCoinsToVend\n        return numberOfCoinsToVend\n    }\n    static func receiveCoins(coins: Int) {\n        coinsInBank += coins\n    }\n}\n\nlass Player {\n    var coinsInPurse: Int\n    init(coins: Int) {\n        coinsInPurse = Bank.vendCoins(coins)\n    }\n    func winCoins(coins: Int) {\n        coinsInPurse += Bank.vendCoins(coins)\n    }\n    deinit {\n        Bank.receiveCoins(coinsInPurse)\n    }\n}\n\nvar playerOne: Player? = Player(coins: 100)\nprintln(\"A new player has joined the game with \\(playerOne!.coinsInPurse) coins\")\n// prints \"A new player has joined the game with 100 coins\"\nprintln(\"There are now \\(Bank.coinsInBank) coins left in the bank\")\n// prints \"There are now 9900 coins left in the bank\u201d\n\nplayerOne!.winCoins(2_000)\nprintln(\"PlayerOne won 2000 coins & now has \\(playerOne!.coinsInPurse) coins\")\n// prints \"PlayerOne won 2000 coins & now has 2100 coins\"\nprintln(\"The bank now only has \\(Bank.coinsInBank) coins left\")\n// prints \"The bank now only has 7900 coins left\u201d\n\nplayerOne = nil\nprintln(\"PlayerOne has left the game\")\n// prints \"PlayerOne has left the game\"\nprintln(\"The bank now has \\(Bank.coinsInBank) coins\")\n// prints \"The bank now has 10000 coins\"\n```\n\n<a id=\"ARC\"></a>\n## Automatic Reference Counting\n\n\n```swift\nclass Person {\n    let name: String\n    init(name: String) { self.name = name }\n    var apartment: Apartment?\n    deinit { println(\"\\(name) is being deinitialized\") }\n}\n\nclass Apartment {\n    let number: Int\n    init(number: Int) { self.number = number }\n    var tenant: Person?\n    deinit { println(\"Apartment #\\(number) is being deinitialized\") }\n}\n\nvar john: Person?\nvar number73: Apartment?\n\njohn = Person(name: \"John Appleseed\")\nnumber73 = Apartment(number: 73)\n\njohn!.apartment = number73\nnumber73!.tenant = john\n```\n\nResolving Strong Reference Cycles Between Class Instances: Weak References\n\n```swift\nclass Person {\n    let name: String\n    init(name: String) { self.name = name }\n    var apartment: Apartment?\n    deinit { println(\"\\(name) is being deinitialized\") }\n}\n\nclass Apartment {\n    let number: Int\n    init(number: Int) { self.number = number }\n    weak var tenant: Person?\n    deinit { println(\"Apartment #\\(number) is being deinitialized\") }\n}\n\nvar john: Person?\nvar number73: Apartment?\n\njohn = Person(name: \"John Appleseed\")\nnumber73 = Apartment(number: 73)\n\njohn!.apartment = number73\nnumber73!.tenant = john\n```\n\nResolving Strong Reference Cycles Between Class Instances:  Unowned References\n\n```swift\nclass Customer {\n    let name: String\n    var card: CreditCard?\n    init(name: String) {\n        self.name = name\n    }\n    deinit { println(\"\\(name) is being deinitialized\") }\n}\n\nclass CreditCard {\n    let number: Int\n    unowned let customer: Customer\n    init(number: Int, customer: Customer) {\n        self.number = number\n        self.customer = customer\n    }\n    deinit { println(\"Card #\\(number) is being deinitialized\") }\n}\n\nvar john: Customer?\njohn = Customer(name: \"John Appleseed\")\njohn!.card = CreditCard(number: 1234_5678_9012_3456, customer: john!)\n```\n\nUnowned References and Implicitly Unwrapped Optional Properties\n\n```swift\nclass Country {\n    let name: String\n    let capitalCity: City!\n    init(name: String, capitalName: String) {\n        self.name = name\n        self.capitalCity = City(name: capitalName, country: self)\n    }\n}\n\nclass City {\n    let name: String\n    unowned let country: Country\n    init(name: String, country: Country) {\n        self.name = name\n        self.country = country\n    }\n}\n\nvar country = Country(name: \"Canada\", capitalName: \"Ottawa\")\nprintln(\"\\(country.name)'s capital city is called \\(country.capitalCity.name)\")\n// prints \"Canada's capital city is called Ottawa\"\n```\n\nThe initializer for City is called from within the initializer for Country. However, the initializer for Country cannot pass self to the City initializer until a new Country instance is fully initialized, as described in Two-Phase Initialization.\n\nTo cope with this requirement, you declare the capitalCity property of Country as an implicitly unwrapped optional property, indicated by the exclamation mark at the end of its type annotation (City!). This means that the capitalCity property has a default value of nil, like any other optional, but can be accessed without the need to unwrap its value as described in Implicitly Unwrapped Optionals.\n\nResolving Strong Reference Cycles for Closures\n\n```swift\nclass HTMLElement {\n\n    let name: String\n    let text: String?\n\n    @lazy var asHTML: () -> String = {\n        if let text = self.text {\n            return \"<\\(self.name)>\\(text)</\\(self.name)>\"\n        } else {\n            return \"<\\(self.name) />\"\n        }\n    }\n\n    init(name: String, text: String? = nil) {\n        self.name = name\n        self.text = text\n    }\n\n    deinit {\n        println(\"\\(name) is being deinitialized\")\n    }\n\n}\n\nvar paragraph: HTMLElement? = HTMLElement(name: \"p\", text: \"hello, world\")\nprintln(paragraph!.asHTML())\n// prints \"<p>hello, world</p>\u201d\nparagraph = nil  // the message in the HTMLElement deinitializer is not printed\n```\n\n```swift\nclass HTMLElement {\n\n    let name: String\n    let text: String?\n\n    @lazy var asHTML: () -> String = {\n        [unowned self] in\n        if let text = self.text {\n            return \"<\\(self.name)>\\(text)</\\(self.name)>\"\n        } else {\n            return \"<\\(self.name) />\"\n        }\n    }\n\n    init(name: String, text: String? = nil) {\n        self.name = name\n        self.text = text\n    }\n\n    deinit {\n        println(\"\\(name) is being deinitialized\")\n    }\n\n}\n\nvar paragraph: HTMLElement? = HTMLElement(name: \"p\", text: \"hello, world\")\nprintln(paragraph!.asHTML())\n// prints \"<p>hello, world</p>\u201d\n\nparagraph = nil\n// prints \"p is being deinitialized\"\n```\n\n<a id=\"OptionalChaining\"></a>\n## Optional Chaining\n\nYou specify optional chaining by placing a question mark (?) after the optional value on which you wish to call a property, method or subscript if the optional is non-nil.\n\n```swift\nclass Person {\n    var residence: Residence?\n}\n\nclass Residence {\n    var numberOfRooms = 1\n}\n\nlet john = Person()\nlet roomCount = john.residence!.numberOfRooms\n// this triggers a runtime error\n\nif let roomCount = john.residence?.numberOfRooms { // \u8fd4\u56de\u7684\u662fInt?\n    println(\"John's residence has \\(roomCount) room(s).\")\n} else {\n    println(\"Unable to retrieve the number of rooms.\")\n}\n// prints \"Unable to retrieve the number of rooms.\u201d\n\njohn.residence = Residence()\nif let roomCount = john.residence?.numberOfRooms {\n    println(\"John's residence has \\(roomCount) room(s).\")\n} else {\n    println(\"Unable to retrieve the number of rooms.\")\n}\n// prints \"John's residence has 1 room(s).\"\n```\n\nThe fact that it is queried through an optional chain means that the call to numberOfRooms will always return an Int? instead of an Int.\n\nYou cannot set a property\u2019s value through optional chaining.\n\n```swift\nif john.residence?.printNumberOfRooms() {\n    println(\"It was possible to print the number of rooms.\")\n} else {\n    println(\"It was not possible to print the number of rooms.\")\n}\n// prints \"It was not possible to print the number of rooms.\u201d\n\nif let firstRoomName = john.residence?[0].name {\n    println(\"The first room name is \\(firstRoomName).\")\n} else {\n    println(\"Unable to retrieve the first room name.\")\n}\n// prints \"Unable to retrieve the first room name.\"\n```\n\nIf you try to retrieve an Int value through optional chaining, an Int? is always returned, no matter how many levels of chaining are used.\nSimilarly, if you try to retrieve an Int? value through optional chaining, an Int? is always returned, no matter how many levels of chaining are used.\n\n<a id=\"TypeCasting\"></a>\n## Type Casting\n\nType casting in Swift is implemented with the is and as operators. These two operators provide a simple and expressive way to check the type of a value or cast a value to a different type.\n\n```swift\nclass MediaItem {\n    var name: String\n    init(name: String) {\n        self.name = name\n    }\n}\n\nclass Movie: MediaItem {\n    var director: String\n    init(name: String, director: String) {\n        self.director = director\n        super.init(name: name)\n    }\n}\n\nclass Song: MediaItem {\n    var artist: String\n    init(name: String, artist: String) {\n        self.artist = artist\n        super.init(name: name)\n    }\n}\n\nlet library = [\n    Movie(name: \"Casablanca\", director: \"Michael Curtiz\"),\n    Song(name: \"Blue Suede Shoes\", artist: \"Elvis Presley\"),\n    Movie(name: \"Citizen Kane\", director: \"Orson Welles\"),\n    Song(name: \"The One And Only\", artist: \"Chesney Hawkes\"),\n    Song(name: \"Never Gonna Give You Up\", artist: \"Rick Astley\")\n]\n// the type of \"library\" is inferred to be MediaItem[]\n\n// Use the type check operator (is) to check whether an instance is of a certain subclass type.\n\nvar movieCount = 0\nvar songCount = 0\n\nfor item in library {\n    if item is Movie {\n        ++movieCount\n    } else if item is Song {\n        ++songCount\n    }\n}\n\nprintln(\"Media library contains \\(movieCount) movies and \\(songCount) songs\")\n// prints \"Media library contains 2 movies and 3 songs\u201d\n\nfor item in library {\n    if let movie = item as? Movie {\n        println(\"Movie: '\\(movie.name)', dir. \\(movie.director)\")\n    } else if let song = item as? Song {\n        println(\"Song: '\\(song.name)', by \\(song.artist)\")\n    }\n}\n\n// Movie: 'Casablanca', dir. Michael Curtiz\n// Song: 'Blue Suede Shoes', by Elvis Presley\n// Movie: 'Citizen Kane', dir. Orson Welles\n// Song: 'The One And Only', by Chesney Hawkes\n// Song: 'Never Gonna Give You Up', by Rick Astley\n```\n\nCasting does not actually modify the instance or change its values. The underlying instance remains the same; it is simply treated and accessed as an instance of the type to which it has been cast.\n\nAnyObject can represent an instance of any class type.\nAny can represent an instance of any type at all, apart from function types.\n\n```swift\nlet someObjects: AnyObject[] = [\n    Movie(name: \"2001: A Space Odyssey\", director: \"Stanley Kubrick\"),\n    Movie(name: \"Moon\", director: \"Duncan Jones\"),\n    Movie(name: \"Alien\", director: \"Ridley Scott\")\n]\n\nfor object in someObjects {\n    let movie = object as Movie\n    println(\"Movie: '\\(movie.name)', dir. \\(movie.director)\")\n}\n// Movie: '2001: A Space Odyssey', dir. Stanley Kubrick\n// Movie: 'Moon', dir. Duncan Jones\n// Movie: 'Alien', dir. Ridley Scott\n\nfor movie in someObjects as Movie[] {\n    println(\"Movie: '\\(movie.name)', dir. \\(movie.director)\")\n}\n// Movie: '2001: A Space Odyssey', dir. Stanley Kubrick\n// Movie: 'Moon', dir. Duncan Jones\n// Movie: 'Alien', dir. Ridley Scott\n```\n\n```swift\nvar things = Any[]()\n\nthings.append(0)\nthings.append(0.0)\nthings.append(42)\nthings.append(3.14159)\nthings.append(\"hello\")\nthings.append((3.0, 5.0))\nthings.append(Movie(name: \"Ghostbusters\", director: \"Ivan Reitman\u201d))\n\nfor thing in things {\n    switch thing {\n    case 0 as Int:\n        println(\"zero as an Int\")\n    case 0 as Double:\n        println(\"zero as a Double\")\n    case let someInt as Int:\n        println(\"an integer value of \\(someInt)\")\n    case let someDouble as Double where someDouble > 0:\n        println(\"a positive double value of \\(someDouble)\")\n    case is Double:\n        println(\"some other double value that I don't want to print\")\n    case let someString as String:\n        println(\"a string value of \\\"\\(someString)\\\"\")\n    case let (x, y) as (Double, Double):\n        println(\"an (x, y) point at \\(x), \\(y)\")\n    case let movie as Movie:\n        println(\"a movie called '\\(movie.name)', dir. \\(movie.director)\")\n    default:\n        println(\"something else\")\n    }\n}\n\n// zero as an Int\n// zero as a Double\n// an integer value of 42\n// a positive double value of 3.14159\n// a string value of \"hello\"\n// an (x, y) point at 3.0, 5.0\n// a movie called 'Ghostbusters', dir. Ivan Reitman\n```\n\n<a id=\"NestedType\"></a>\n## Nested Types\n\n```swift\nstruct BlackjackCard {\n\n    // nested Suit enumeration\n    enum Suit: Character {\n        case Spades = \"\u2660\", Hearts = \"\u2661\", Diamonds = \"\u2662\", Clubs = \"\u2663\"\n    }\n\n    // nested Rank enumeration\n    enum Rank: Int {\n        case Two = 2, Three, Four, Five, Six, Seven, Eight, Nine, Ten\n        case Jack, Queen, King, Ace\n        struct Values {\n            let first: Int, second: Int?\n        }\n        var values: Values {\n        switch self {\n        case .Ace:\n            return Values(first: 1, second: 11)\n        case .Jack, .Queen, .King:\n            return Values(first: 10, second: nil)\n        default:\n            return Values(first: self.toRaw(), second: nil)\n            }\n        }\n    }\n\n    // BlackjackCard properties and methods\n    let rank: Rank, suit: Suit\n    var description: String {\n    var output = \"suit is \\(suit.toRaw()),\"\n        output += \" value is \\(rank.values.first)\"\n        if let second = rank.values.second {\n            output += \" or \\(second)\"\n        }\n        return output\n    }\n}\n\nlet theAceOfSpades = BlackjackCard(rank: .Ace, suit: .Spades)\nprintln(\"theAceOfSpades: \\(theAceOfSpades.description)\")\n// prints \"theAceOfSpades: suit is \u2660, value is 1 or 11\u201d\n\nlet heartsSymbol = BlackjackCard.Suit.Hearts.toRaw()\n// heartsSymbol is \"\u2661\"\n```\n\n<a id=\"Extension\"></a>\n## Extensions\n\nExtensions are similar to categories in Objective-C.\n\nExtensions in Swift can:\n\nAdd computed properties and computed static properties\nDefine instance methods and type methods\nProvide new initializers\nDefine subscripts\nDefine and use new nested types\nMake an existing type conform to a protocol\n\nIf you define an extension to add new functionality to an existing type, the new functionality will be available on all existing instances of that type, even if they were created before the extension was defined.\n\n```swift\nextension SomeType {\n    // new functionality to add to SomeType goes here\n}\n\nextension SomeType: SomeProtocol, AnotherProtocol {\n    // implementation of protocol requirements goes here\n}\n```\n\n```swift\nextension Double {\n    var km: Double { return self * 1_000.0 }\n    var m: Double { return self }\n    var cm: Double { return self / 100.0 }\n    var mm: Double { return self / 1_000.0 }\n    var ft: Double { return self / 3.28084 }\n}\nlet oneInch = 25.4.mm\nprintln(\"One inch is \\(oneInch) meters\")\n// prints \"One inch is 0.0254 meters\"\nlet threeFeet = 3.ft\nprintln(\"Three feet is \\(threeFeet) meters\")\n// prints \"Three feet is 0.914399970739201 meters\"\n```\n\nExtensions can add new computed properties, but they cannot add stored properties, or add property observers to existing properties.\n\n```swift\nstruct Size {\n    var width = 0.0, height = 0.0\n}\nstruct Point {\n    var x = 0.0, y = 0.0\n}\nstruct Rect {\n    var origin = Point()\n    var size = Size()\n}\n\nlet defaultRect = Rect()\nlet memberwiseRect = Rect(origin: Point(x: 2.0, y: 2.0),\n    size: Size(width: 5.0, height: 5.0))\n\nextension Rect {\n    init(center: Point, size: Size) {\n        let originX = center.x - (size.width / 2)\n        let originY = center.y - (size.height / 2)\n        self.init(origin: Point(x: originX, y: originY), size: size)\n    }\n}\n\nlet centerRect = Rect(center: Point(x: 4.0, y: 4.0),\n    size: Size(width: 3.0, height: 3.0))\n// centerRect's origin is (2.5, 2.5) and its size is (3.0, 3.0)\n```\n\n```swift\nextension Int {\n    func repetitions(task: () -> ()) {\n        for i in 0..self {\n            task()\n        }\n    }\n}\n\n3.repetitions({\n    println(\"Hello!\")\n    })\n// Hello!\n// Hello!\n// Hello!\n\n//Use trailing closure syntax to make the call more succinct:\n3.repetitions {\n    println(\"Goodbye!\")\n}\n// Goodbye!\n// Goodbye!\n// Goodbye!\n```\n\n// Structure and enumeration methods that modify self or its properties must mark the instance method as mutating, just like mutating methods from an original implementation.\n\n```swift\nextension Int {\n    mutating func square() {\n        self = self * self\n    }\n}\nvar someInt = 3\nsomeInt.square()\n// someInt is now 9\n```\n\n```swift\nextension Int {\n    subscript(digitIndex: Int) -> Int {\n        var decimalBase = 1\n            for _ in 1...digitIndex {\n                decimalBase *= 10\n            }\n            return (self / decimalBase) % 10\n    }\n}\n746381295[0]\n// returns 5\n746381295[1]\n// returns 9\n746381295[2]\n// returns 2\n746381295[8]\n// returns 7\n746381295[9]\n// returns 0, as if you had requested:\n0746381295[9]\n```\n\n```swift\nextension Character {\n    enum Kind {\n        case Vowel, Consonant, Other\n    }\n    var kind: Kind {\n    switch String(self).lowercaseString {\n    case \"a\", \"e\", \"i\", \"o\", \"u\":\n        return .Vowel\n    case \"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\",\n    \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\":\n        return .Consonant\n    default:\n        return .Other\n        }\n    }\n}\n\nfunc printLetterKinds(word: String) {\n    println(\"'\\(word)' is made up of the following kinds of letters:\")\n    for character in word {\n        switch character.kind {\n        case .Vowel:\n            print(\"vowel \")\n        case .Consonant:\n            print(\"consonant \")\n        case .Other:\n            print(\"other \")\n        }\n    }\n    print(\"\\n\")\n}\nprintLetterKinds(\"Hello\")\n// 'Hello' is made up of the following kinds of letters:\n// consonant vowel consonant consonant vowel\n```\n\nNOTE:\ncharacter.kind is already known to be of type Character.Kind. Because of this, all of the Character.Kind member values can be written in shorthand form inside the switch statement, such as .Vowel rather than Character.Kind.Vowel.\n\n<a id=\"Protocol\"></a>\n## Protocols\n\nA protocol defines a blueprint of methods, properties, and other requirements that suit a particular task or piece of functionality. The protocol doesn\u2019t actually provide an implementation for any of these requirements\u2014it only describes what an implementation will look like. The protocol can then be adopted by a class, structure, or enumeration to provide an actual implementation of those requirements. Any type that satisfies the requirements of a protocol is said to conform to that protocol.\n\n```swift\nprotocol SomeProtocol {\n    // protocol definition goes here\n}\n\nstruct SomeStructure: FirstProtocol, AnotherProtocol {\n    // structure definition goes here\n}\n\nclass SomeClass: SomeSuperclass, FirstProtocol, AnotherProtocol {\n    // class definition goes here\n}\n```\n\n```swift\nprotocol SomeProtocol {\n    var mustBeSettable: Int { get set }\n    var doesNotNeedToBeSettable: Int { get }\n}\n\n// Always prefix type property requirements with the class keyword when you define them in a protocol.\nprotocol AnotherProtocol {\n    class var someTypeProperty: Int { get set }\n}\n```\n\n```swift\nprotocol FullyNamed {\n    var fullName: String { get }\n}\n\nstruct Person: FullyNamed {\n    var fullName: String\n}\nlet john = Person(fullName: \"John Appleseed\")\n// john.fullName is \"John Appleseed\u201d\n\nclass Starship: FullyNamed {\n    var prefix: String?\n    var name: String\n    init(name: String, prefix: String? = nil) {\n        self.name = name\n        self.prefix = prefix\n    }\n    var fullName: String {\n    return (prefix ? prefix! + \" \" : \"\") + name\n    }\n}\nvar ncc1701 = Starship(name: \"Enterprise\", prefix: \"USS\")\n// ncc1701.fullName is \"USS Enterprise\"\n```\n\nProtocols use the same syntax as normal methods, but are not allowed to specify default values for method parameters.\n\n```swift\nprotocol SomeProtocol {\n    class func someTypeMethod()\n}\n\nprotocol RandomNumberGenerator {\n    func random() -> Double\n}\n\nclass LinearCongruentialGenerator: RandomNumberGenerator {\n    var lastRandom = 42.0\n    let m = 139968.0\n    let a = 3877.0\n    let c = 29573.0\n    func random() -> Double {\n        lastRandom = ((lastRandom * a + c) % m)\n        return lastRandom / m\n    }\n}\nlet generator = LinearCongruentialGenerator()\nprintln(\"Here's a random number: \\(generator.random())\")\n// prints \"Here's a random number: 0.37464991998171\"\nprintln(\"And another one: \\(generator.random())\")\n// prints \"And another one: 0.729023776863283\"\n```\n\nIf you mark a protocol instance method requirement as mutating, you do not need to write the mutating keyword when writing an implementation of that method for a class. The mutating keyword is only used by structures and enumerations.\n\n```swift\nprotocol Togglable {\n    mutating func toggle()\n}\n\nenum OnOffSwitch: Togglable {\n    case Off, On\n    mutating func toggle() {\n        switch self {\n        case Off:\n            self = On\n        case On:\n            self = Off\n        }\n    }\n}\nvar lightSwitch = OnOffSwitch.Off\nlightSwitch.toggle()\n// lightSwitch is now equal to .On\n```\n\n```swift\nclass Dice {\n    let sides: Int\n    let generator: RandomNumberGenerator\n    init(sides: Int, generator: RandomNumberGenerator) {\n        self.sides = sides\n        self.generator = generator\n    }\n    func roll() -> Int {\n        return Int(generator.random() * Double(sides)) + 1\n    }\n}\n\nvar d6 = Dice(sides: 6, generator: LinearCongruentialGenerator())\nfor _ in 1...5 {\n    println(\"Random dice roll is \\(d6.roll())\")\n}\n// Random dice roll is 3\n// Random dice roll is 5\n// Random dice roll is 4\n// Random dice roll is 5\n// Random dice roll is 4\n```\n\n```swift\nprotocol DiceGame {\n    var dice: Dice { get }\n    func play()\n}\nprotocol DiceGameDelegate {\n    func gameDidStart(game: DiceGame)\n    func game(game: DiceGame, didStartNewTurnWithDiceRoll diceRoll: Int)\n    func gameDidEnd(game: DiceGame)\n}\n\nclass SnakesAndLadders: DiceGame {\n    let finalSquare = 25\n    let dice = Dice(sides: 6, generator: LinearCongruentialGenerator())\n    var square = 0\n    var board: Int[]\n    init() {\n        board = Int[](count: finalSquare + 1, repeatedValue: 0)\n        board[03] = +08; board[06] = +11; board[09] = +09; board[10] = +02\n        board[14] = -10; board[19] = -11; board[22] = -02; board[24] = -08\n    }\n    var delegate: DiceGameDelegate?\n    func play() {\n        square = 0\n        delegate?.gameDidStart(self)\n        gameLoop: while square != finalSquare {\n            let diceRoll = dice.roll()\n            delegate?.game(self, didStartNewTurnWithDiceRoll: diceRoll)\n            switch square + diceRoll {\n            case finalSquare:\n                break gameLoop\n            case let newSquare where newSquare > finalSquare:\n                continue gameLoop\n            default:\n                square += diceRoll\n                square += board[square]\n            }\n        }\n        delegate?.gameDidEnd(self)\n    }\n}\n\nclass DiceGameTracker: DiceGameDelegate {\n    var numberOfTurns = 0\n    func gameDidStart(game: DiceGame) {\n        numberOfTurns = 0\n        if game is SnakesAndLadders {\n            println(\"Started a new game of Snakes and Ladders\")\n        }\n        println(\"The game is using a \\(game.dice.sides)-sided dice\")\n    }\n    func game(game: DiceGame, didStartNewTurnWithDiceRoll diceRoll: Int) {\n        ++numberOfTurns\n        println(\"Rolled a \\(diceRoll)\")\n    }\n    func gameDidEnd(game: DiceGame) {\n        println(\"The game lasted for \\(numberOfTurns) turns\")\n    }\n}\n\nlet tracker = DiceGameTracker()\nlet game = SnakesAndLadders()\ngame.delegate = tracker\ngame.play()\n// Started a new game of Snakes and Ladders\n// The game is using a 6-sided dice\n// Rolled a 3\n// Rolled a 5\n// Rolled a 4\n// Rolled a 5\n// The game lasted for 4 turns\n```\n\n```swift\nprotocol TextRepresentable {\n    func asText() -> String\n}\n\nextension Dice: TextRepresentable {\n    func asText() -> String {\n        return \"A \\(sides)-sided dice\"\n    }\n}\n\nlet d12 = Dice(sides: 12, generator: LinearCongruentialGenerator())\nprintln(d12.asText())\n// prints \"A 12-sided dice\u201d\n\nextension SnakesAndLadders: TextRepresentable {\n    func asText() -> String {\n        return \"A game of Snakes and Ladders with \\(finalSquare) squares\"\n    }\n}\nprintln(game.asText())\n// prints \"A game of Snakes and Ladders with 25 squares\"\n```\n\nIf a type already conforms to all of the requirements of a protocol, but has not yet stated that it adopts that protocol, you can make it adopt the protocol with an empty extension:\n\n```swift\nstruct Hamster {\n    var name: String\n    func asText() -> String {\n        return \"A hamster named \\(name)\"\n    }\n}\nextension Hamster: TextRepresentable {}\n\nlet simonTheHamster = Hamster(name: \"Simon\")\nlet somethingTextRepresentable: TextRepresentable = simonTheHamster\nprintln(somethingTextRepresentable.asText())\n// prints \"A hamster named Simon\"\n```\n\n```swift\nlet things: TextRepresentable[] = [game, d12, simonTheHamster]\n\nfor thing in things {\n    println(thing.asText())\n}\n// A game of Snakes and Ladders with 25 squares\n// A 12-sided dice\n// A hamster named Simon\n```\n\n```swift\nprotocol InheritingProtocol: SomeProtocol, AnotherProtocol {\n    // protocol definition goes here\n}\n\nprotocol PrettyTextRepresentable: TextRepresentable {\n    func asPrettyText() -> String\n}\n\nextension SnakesAndLadders: PrettyTextRepresentable {\n    func asPrettyText() -> String {\n        var output = asText() + \":\\n\"\n        for index in 1...finalSquare {\n            switch board[index] {\n            case let ladder where ladder > 0:\n                output += \"\u25b2 \"\n            case let snake where snake < 0:\n                output += \"\u25bc \"\n            default:\n                output += \"\u25cb \"\n            }\n        }\n        return output\n    }\n}\n\nprintln(game.asPrettyText())\n// A game of Snakes and Ladders with 25 squares:\n// \u25cb \u25cb \u25b2 \u25cb \u25cb \u25b2 \u25cb \u25cb \u25b2 \u25b2 \u25cb \u25cb \u25cb \u25bc \u25cb \u25cb \u25cb \u25cb \u25bc \u25cb \u25cb \u25bc \u25cb \u25bc \u25cb\n```\n\n```swift\n// Protocol Composition\n\nprotocol Named {\n    var name: String { get }\n}\nprotocol Aged {\n    var age: Int { get }\n}\nstruct Person: Named, Aged {\n    var name: String\n    var age: Int\n}\n// any type that conforms to both the Named and Aged protocols\nfunc wishHappyBirthday(celebrator: protocol<Named, Aged>) {\n    println(\"Happy birthday \\(celebrator.name) - you're \\(celebrator.age)!\")\n}\nlet birthdayPerson = Person(name: \"Malcolm\", age: 21)\nwishHappyBirthday(birthdayPerson)\n// prints \"Happy birthday Malcolm - you're 21!\"\n```\n\nYou can check for protocol conformance only if your protocol is marked with the @objc attribute, as seen for the HasArea protocol above. This attribute indicates that the protocol should be exposed to Objective-C code and is described in Using Swift with Cocoa and Objective-C. Even if you are not interoperating with Objective-C, you need to mark your protocols with the @objc attribute if you want to be able to check for protocol conformance.\n\nNote also that @objc protocols can be adopted only by classes, and not by structures or enumerations. If you mark your protocol as @objc in order to check for conformance, you will be able to apply that protocol only to class types.\n\n```swift\n@objc protocol HasArea {\n    var area: Double { get }\n}\n\nclass Circle: HasArea {\n    let pi = 3.1415927\n    var radius: Double\n    var area: Double { return pi * radius * radius }\n    init(radius: Double) { self.radius = radius }\n}\nclass Country: HasArea {\n    var area: Double\n    init(area: Double) { self.area = area }\n}\nclass Animal {\n    var legs: Int\n    init(legs: Int) { self.legs = legs }\n}\n\nlet objects: AnyObject[] = [\n    Circle(radius: 2.0),\n    Country(area: 243_610),\n    Animal(legs: 4)\n]\n\nfor object in objects {\n    if let objectWithArea = object as? HasArea {\n        println(\"Area is \\(objectWithArea.area)\")\n    } else {\n        println(\"Something that doesn't have an area\")\n    }\n}\n// Area is 12.5663708\n// Area is 243610.0\n// Something that doesn't have an area\n```\n\n```swift\n// Optional Protocol Requirements\n\n@objc protocol CounterDataSource {\n    @optional func incrementForCount(count: Int) -> Int\n    @optional var fixedIncrement: Int { get }\n}\n\n@objc class Counter {\n    var count = 0\n    var dataSource: CounterDataSource?\n    func increment() {\n        if let amount = dataSource?.incrementForCount?(count) {\n            count += amount\n        } else if let amount = dataSource?.fixedIncrement? {\n            count += amount\n        }\n    }\n}\n\nclass ThreeSource: CounterDataSource {\n    let fixedIncrement = 3\n}\n\nvar counter = Counter()\ncounter.dataSource = ThreeSource()\nfor _ in 1...4 {\n    counter.increment()\n    println(counter.count)\n}\n// 3\n// 6\n// 9\n// 12\n\nclass TowardsZeroSource: CounterDataSource {\n    func incrementForCount(count: Int) -> Int {\n        if count == 0 {\n            return 0\n        } else if count < 0 {\n            return 1\n        } else {\n            return -1\n        }\n    }\n}\n\ncounter.count = -4\ncounter.dataSource = TowardsZeroSource()\nfor _ in 1...5 {\n    counter.increment()\n    println(counter.count)\n}\n// -3\n// -2\n// -1\n// 0\n// 0\n```\n\n<a id=\"Generic\"></a>\n## Generics\n\n```swift\nfunc swapTwoValues<T>(inout a: T, inout b: T) {\n    let temporaryA = a\n    a = b\n    b = temporaryA\n}\n\nvar someInt = 3\nvar anotherInt = 107\nswapTwoValues(&someInt, &anotherInt)\n// someInt is now 107, and anotherInt is now 3\n\nvar someString = \"hello\"\nvar anotherString = \"world\"\nswapTwoValues(&someString, &anotherString)\n// someString is now \"world\", and anotherString is now \"hello\"\n```\n\n```swift\nstruct Stack<T> {\n    var items = T[]()\n    mutating func push(item: T) {\n        items.append(item)\n    }\n    mutating func pop() -> T {\n        return items.removeLast()\n    }\n}\n\nvar stackOfStrings = Stack<String>()\nstackOfStrings.push(\"uno\")\nstackOfStrings.push(\"dos\")\nstackOfStrings.push(\"tres\")\nstackOfStrings.push(\"cuatro\")\n// the stack now contains 4 strings\nlet fromTheTop = stackOfStrings.pop()\n// fromTheTop is equal to \"cuatro\", and the stack now contains 3 strings\n```\n\nType Constraints:\n\n```swift\nfunc someFunction<T: SomeClass, U: SomeProtocol>(someT: T, someU: U) {\n    // function body goes here\n}\n```\n\n```swift\nfunc findIndex<T: Equatable>(array: T[], valueToFind: T) -> Int? {\n    for (index, value) in enumerate(array) {\n        if value == valueToFind {\n            return index\n        }\n    }\n    return nil\n}\n\nlet doubleIndex = findIndex([3.14159, 0.1, 0.25], 9.3)\n// doubleIndex is an optional Int with no value, because 9.3 is not in the array\nlet stringIndex = findIndex([\"Mike\", \"Malcolm\", \"Andrea\"], \"Andrea\")\n// stringIndex is an optional Int containing a value of 2\n```\n\nAssociated Types:\n\n```swift\nprotocol Container {\n    typealias ItemType\n    mutating func append(item: ItemType)\n    var count: Int { get }\n    subscript(i: Int) -> ItemType { get }\n}\n\nstruct Stack<T>: Container {\n    // original Stack<T> implementation\n    var items = T[]()\n    mutating func push(item: T) {\n        items.append(item)\n    }\n    mutating func pop() -> T {\n        return items.removeLast()\n    }\n    // conformance to the Container protocol\n    // \u81ea\u52a8\u63a8\u65ad\u51fa typealias ItemType = T\n    mutating func append(item: T) {\n        self.push(item)\n    }\n    var count: Int {\n    return items.count\n    }\n    subscript(i: Int) -> T {\n        return items[i]\n    }\n}\n```\n\n```swift\nextension Array: Container {}\n```\n\nArray\u2019s existing append method and subscript enable Swift to infer the appropriate type to use for ItemType, just as for the generic Stack type above. After defining this extension, you can use any Array as a Container.\n\nWhere Clauses:\n\n```swift\nfunc allItemsMatch<\n    C1: Container, C2: Container\n    where C1.ItemType == C2.ItemType, C1.ItemType: Equatable>\n    (someContainer: C1, anotherContainer: C2) -> Bool {\n\n        // check that both containers contain the same number of items\n        if someContainer.count != anotherContainer.count {\n            return false\n        }\n\n        // check each pair of items to see if they are equivalent\n        for i in 0..someContainer.count {\n            if someContainer[i] != anotherContainer[i] {\n                return false\n            }\n        }\n\n        // all items match, so return true\n        return true\n\n}\n\nvar stackOfStrings = Stack<String>()\nstackOfStrings.push(\"uno\")\nstackOfStrings.push(\"dos\")\nstackOfStrings.push(\"tres\")\n\nvar arrayOfStrings = [\"uno\", \"dos\", \"tres\"]\n\nif allItemsMatch(stackOfStrings, arrayOfStrings) {\n    println(\"All items match.\")\n} else {\n    println(\"Not all items match.\")\n}\n// prints \"All items match.\"\n```\n\n<a id=\"AdvancedOperator\"></a>\n## Advanced Operators\n\n```swift\nlet initialBits: UInt8 = 0b00001111\nlet invertedBits = ~initialBits  // equals 11110000\n\nlet firstSixBits: UInt8 = 0b11111100\nlet lastSixBits: UInt8  = 0b00111111\nlet middleFourBits = firstSixBits & lastSixBits  // equals 00111100\n\nlet someBits: UInt8 = 0b10110010\nlet moreBits: UInt8 = 0b01011110\nlet combinedbits = someBits | moreBits  // equals 11111110\n\nlet firstBits: UInt8 = 0b00010100\nlet otherBits: UInt8 = 0b00000101\nlet outputBits = firstBits ^ otherBits  // equals 00010001\n\nlet shiftBits: UInt8 = 4   // 00000100 in binary\nshiftBits << 1             // 00001000\nshiftBits << 2             // 00010000\nshiftBits << 5             // 10000000\nshiftBits << 6             // 00000000\nshiftBits >> 2             // 00000001\n\nlet pink: UInt32 = 0xCC6699\nlet redComponent = (pink & 0xFF0000) >> 16    // redComponent is 0xCC, or 204\nlet greenComponent = (pink & 0x00FF00) >> 8   // greenComponent is 0x66, or 102\nlet blueComponent = pink & 0x0000FF           // blueComponent is 0x99, or 153\n\n// \u5982\u679c\u5141\u8bb8\u6ea2\u51fa\uff0c\u5728\u8fd0\u7b97\u7b26\u524d\u52a0&\nvar willOverflow = UInt8.max\n// willOverflow equals 255, which is the largest value a UInt8 can hold\nwillOverflow = willOverflow &+ 1\n// willOverflow is now equal to 0\n\nvar willUnderflow = UInt8.min\n// willUnderflow equals 0, which is the smallest value a UInt8 can hold\nwillUnderflow = willUnderflow &- 1\n// willUnderflow is now equal to 255\n\nvar signedUnderflow = Int8.min\n// signedUnderflow equals -128, which is the smallest value an Int8 can hold\nsignedUnderflow = signedUnderflow &- 1\n// signedUnderflow is now equal to 127\n```\n\n\u8fd0\u7b97\u7b26\u91cd\u8f7d\uff1a\n\n```swift\nstruct Vector2D {\n    var x = 0.0, y = 0.0\n}\n// It is said to be infix because it appears in between those two targets.\n@infix func + (left: Vector2D, right: Vector2D) -> Vector2D {\n    return Vector2D(x: left.x + right.x, y: left.y + right.y)\n}\n\nlet vector = Vector2D(x: 3.0, y: 1.0)\nlet anotherVector = Vector2D(x: 2.0, y: 4.0)\nlet combinedVector = vector + anotherVector\n// combinedVector is a Vector2D instance with values of (5.0, 5.0)\n\n@prefix func - (vector: Vector2D) -> Vector2D {\n    return Vector2D(x: -vector.x, y: -vector.y)\n}\n\nlet positive = Vector2D(x: 3.0, y: 4.0)\nlet negative = -positive\n// negative is a Vector2D instance with values of (-3.0, -4.0)\nlet alsoPositive = -negative\n// alsoPositive is a Vector2D instance with values of (3.0, 4.0)\n\n// \u590d\u5408\u8d4b\u503c\u8fd0\u7b97\u7b26\n@assignment func += (inout left: Vector2D, right: Vector2D) {\n    left = left + right\n}\n\nvar original = Vector2D(x: 1.0, y: 2.0)\nlet vectorToAdd = Vector2D(x: 3.0, y: 4.0)\noriginal += vectorToAdd\n// original now has values of (4.0, 6.0)\n\n@prefix @assignment func ++ (inout vector: Vector2D) -> Vector2D {\n    vector += Vector2D(x: 1.0, y: 1.0)\n    return vector\n}\n\nvar toIncrement = Vector2D(x: 3.0, y: 4.0)\nlet afterIncrement = ++toIncrement\n// toIncrement now has values of (4.0, 5.0)\n// afterIncrement also has values of (4.0, 5.0)\n```\n\nIt is not possible to overload the default assignment operator (=). Only the compound assignment operators can be overloaded. Similarly, the ternary conditional operator (a ? b : c) cannot be overloaded.\n\n```swift\n// Equivalence Operators\n@infix func == (left: Vector2D, right: Vector2D) -> Bool {\n    return (left.x == right.x) && (left.y == right.y)\n}\n@infix func != (left: Vector2D, right: Vector2D) -> Bool {\n    return !(left == right)\n}\n\nlet twoThree = Vector2D(x: 2.0, y: 3.0)\nlet anotherTwoThree = Vector2D(x: 2.0, y: 3.0)\nif twoThree == anotherTwoThree {\n    println(\"These two vectors are equivalent.\")\n}\n// prints \"These two vectors are equivalent.\"\n```\n\nCustom operators can be defined only with the characters / = - + * % < > ! & | ^ . ~.\n\nNew operators are declared at a global level using the operator keyword, and can be declared as prefix, infix or postfix:\n\n```swift\noperator prefix +++ {}\n\n@prefix @assignment func +++ (inout vector: Vector2D) -> Vector2D {\n    vector += vector\n    return vector\n}\n\nvar toBeDoubled = Vector2D(x: 1.0, y: 4.0)\nlet afterDoubling = +++toBeDoubled\n// toBeDoubled now has values of (2.0, 8.0)\n// afterDoubling also has values of (2.0, 8.0)\n```\n\nPrecedence and Associativity for Custom Infix Operators\n\n```swift\noperator infix +- { associativity left precedence 140 }\nfunc +- (left: Vector2D, right: Vector2D) -> Vector2D {\n    return Vector2D(x: left.x + right.x, y: left.y - right.y)\n}\nlet firstVector = Vector2D(x: 1.0, y: 2.0)\nlet secondVector = Vector2D(x: 3.0, y: 4.0)\nlet plusMinusVector = firstVector +- secondVector\n// plusMinusVector is a Vector2D instance with values of (4.0, -2.0)\n```\n\n<a id=\"Tour\"></a>\n## A Swift Tour\n\nFunctions are actually a special case of closures. (In Swift, functions are just named closures) You can write a closure without a name by surrounding code with braces (`{}`). Use `in` to separate the arguments and return type from the body.\n\nMethods on classes have one important difference from functions. Parameter names in functions are used only within the function, but parameters names in methods are also used when you call the method (except for the first parameter). By default, a method has the same name for its parameters when you call it and within the method itself. You can specify a second name, which is used inside the method.\n\n```swift\n// \u9519\u8bef\nlet convertedRank = Rank.fromRaw(3)  // convertedRank \u7684\u7c7b\u578b\u662fRank?\nlet threeDescription = convertedRank.toRaw() // optional type\u4e0d\u80fd\u76f4\u63a5\u65b9\u6cd5\n\n//\u6b63\u786e\nlet convertedRank = Rank.fromRaw(3)!\nlet threeDescription = convertedRank.toRaw()  // 3\n\n// \u6b63\u786e\nlet convertedRank = Rank.fromRaw(3)\nlet threeDescription = convertedRank!.toRaw()  // 3\n\n// \u6b63\u786e\nlet convertedRank = Rank.fromRaw(3)\nlet threeDescription = convertedRank?.toRaw()  // {some 3}\n```\n\nOne of the most important differences between structures and classes is that structures are always copied when they are passed around in your code, but classes are passed by reference\n\n\u7ed3\u6784\u4f53\u4e2d\u7684\u65b9\u6cd5\u8981\u4fee\u6539\u7ed3\u6784\u4f53\uff0c\u9700\u8981\u52a0mutating\u5173\u952e\u5b57\uff1b\u7c7b\u5219\u4e0d\u7528\uff0c\u52a0\u4e86\u53cd\u800c\u9519\u8bef\u3002\n\nUse `extension` to add functionality to an existing type, such as new methods and computed properties. You can use an extension to add protocol conformance to a type that is declared elsewhere, or even to a type that you imported from a library or framework.\n\n```swift\nextension Int: ExampleProtocol {\n    var simpleDescription: String {\n    return \"The number \\(self)\"\n    }\n    mutating func adjust() {\n        self += 42\n    }\n}\n7.simpleDescription\n```\n\nYou can use a protocol name just like any other named type\u2014for example, to create a collection of objects that have different types but that all conform to a single protocol. When you work with values whose type is a protocol type, methods outside the protocol definition are not available.\n\n```swift\nlet protocolValue: ExampleProtocol = a // a is an instance of SimpleClass, and SimpleClass adopt ExampleProtocol\nprotocolValue.simpleDescription\n// protocolValue.anotherProperty  // Uncomment to see the error\n```\n\nEven though the variable protocolValue has a runtime type of SimpleClass, the compiler treats it as the given type of ExampleProtocol. This means that you can\u2019t accidentally access methods or properties that the class implements in addition to its protocol conformance.", 
                        "published_at": 1431584580000, 
                        "published_by": 1, 
                        "slug": "\u628a\u300athe-swift-programming-language\u300b\u8bfb\u8584", 
                        "status": "published", 
                        "title": "\u628a\u300aThe Swift Programming Language\u300b\u8bfb\u8584", 
                        "updated_at": 1431584580000, 
                        "updated_by": 1, 
                        "uuid": "bb256c34-9a94-40e9-bc33-5aba93459ea0"
                    }, 
                    {
                        "created_at": 1432123320000, 
                        "created_by": 1, 
                        "id": 6, 
                        "language": "en_US", 
                        "markdown": "#\u4e00.Redis\u7684\u5b89\u88c5\u548c\u4f7f\u7528\n##1\u3001\u4ec0\u4e48 Redis\n\n**RE**mote **DI**ctionary **S**erver\uff0c\u7b80\u79f0 Redis\uff0c\u53ef\u4ee5\u76f4\u63a5\u7406\u89e3\u4e3a\u8fdc\u7a0b\u5b57\u5178\u670d\u52a1\uff0c\u662f\u4e00\u4e2a\u7c7b\u4f3c\u4e8eMemcached\u7684Key-Value\u5b58\u50a8\u7cfb\u7edf\u3002\u76f8\u6bd4Memcached\uff0c\u5b83\u652f\u6301\u66f4\u4e30\u5bcc\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5305\u62ecstring(\u5b57\u7b26\u4e32)\u3001list(\u94fe\u8868)\u3001set(\u96c6\u5408)\u3001zset(sorted set --\u6709\u5e8f\u96c6\u5408)\u548chash\uff08\u54c8\u5e0c\u7c7b\u578b\uff09\uff0c\u5e76\u63d0\u4f9b\u4e86\u6570\u636e\u6301\u4e45\u5316\u673a\u5236\uff0c\u5728\u67d0\u4e9b\u573a\u666f\u4e0b\uff0c\u4f60\u5b8c\u5168\u53ef\u4ee5\u628a\u5b83\u5f53\u505a\u975e\u5173\u7cfb\u578b\u6570\u636e\u5e93\u6765\u4f7f\u7528\u3002\u5b83\u662f\u4e00\u4e2a\u9ad8\u6027\u80fd\u7684\u5b58\u50a8\u7cfb\u7edf\uff0c\u80fd\u652f\u6301\u8d85\u8fc7 100K+ \u6bcf\u79d2\u7684\u8bfb\u5199\u9891\u7387\u3002\u540c\u65f6\u8fd8\u652f\u6301\u6d88\u606f\u7684\u53d1\u5e03/\u8ba2\u9605\uff0c\u4ece\u800c\u8ba9\u4f60\u5728\u6784\u5efa\u9ad8\u6027\u80fd\u6d88\u606f\u961f\u5217\u7cfb\u7edf\u65f6\u591a\u4e86\u53e6\u4e00\u79cd\u9009\u62e9\u3002\n\nPS:\u4f7f\u7528Memcached\uff0c\u8ba9\u6211\u611f\u89e6\u9887\u6df1\u7684\u662fObject Size\u7684\u95ee\u9898\uff0c\u7531\u4e8eSQL\u672a\u4f5c\u4f18\u5316\u76f4\u63a5\u6620\u5c04\u5bf9\u8c61\uff0c\u5bfc\u81f4\u7f13\u5b58\u5bf9\u8c61\u5927\u4e8e1MB\uff0cMemcached\u5c31\u629b\u4e86\u5f02\u5e38\u3002\u800cRedis\u9ed8\u8ba4\u7f13\u5b58\u5bf9\u8c61512MB\uff0c\u6700\u5927\u652f\u63011GB\u3002\u81f3\u5c11\u5728\u7f13\u5b58\u5bf9\u8c61\u65f6\uff0c\u53ef\u4ee5\u6709\u66f4\u5927\u7684\u4f38\u7f29\u7a7a\u95f4\u4e86\uff01 \u6b64\u5916\uff0c\u662f\u6570\u636e\u7c7b\u578b\u3002Memcached\u6bd4\u8f83\u7b80\u5355\uff0c\u800cRedis\u53ef\u4ee5\u652f\u6301\u66f4\u591a\u590d\u6742\u7684\u6570\u636e\u7c7b\u578b\u3002\n<!--more-->\n##2\u3001\u5b89\u88c5\nRedis\u88c5\u8d77\u6765\uff0c\u5b9e\u5728\u662f\u8fc7\u4e8e\u7b80\u5355\uff0c\u8ba9\u6211\u51e0\u4e4e\u201c\u65e0\u4ece\u4e0b\u624b\u201d\u3002\u56e0\u4e3a\u8fde`configure`\u6587\u4ef6\u90fd\u4e0d\u9700\u8981\uff0c\u4f60\u53ea\u9700\u8981\u505a\u4e2a`make`\u548c`make install`\u5c31\u597d\u3002\u6211\u5728\u8fd9\u91cc\u4e0b\u8f7d\u7684\u662fredis-3.0.1\u7248.\n\n##3\u3001\u8fd0\u884c\n\n- 1.\u542f\u52a8\u670d\u52a1\uff0c\u5148\u8fdb\u5165 src \u76ee\u5f55\uff0c\u7136\u540e\u6267\u884c `redis-server`\u3002\uff08`6379` \u662f redis \u9ed8\u8ba4\u7aef\u53e3\uff09\n- 2.\u4e5f\u53ef\u4ee5\u628a\u9ed8\u8ba4\u7684\u914d\u7f6e\u6587\u4ef6\u2014\u2014`redis.conf`\u62f7\u8d1d\u5230\u56fa\u5b9a\u7684\u76ee\u5f55\u4e0b\uff0c\u4f8b\u5982\uff1a`/etc/redis/`\u76ee\u5f55\u4e0b\uff0c\u7136\u540e\u6267\u884c\u547d\u4ee4\n\n\t\tredis-server /etc/redis/redis.conf\n\n##4\u3001\u6d4b\u8bd5\n\u901a\u8fc7\u5ba2\u6237\u7aef\u547d\u4ee4`redis-cli`\u8bbf\u95eeRedis\n\n\tset name sherlock\n\tget name\n\n\u8fdb\u884c\u6570\u636e\u6d4b\u8bd5\uff1a\n\n\tredis-benchmark -l\n\n##5\u3001\u5173\u95ed\n\u53ef\u901a\u8fc7\u5ba2\u6237\u7aef\u547d\u4ee4redis-cli\u5b8c\u6210Redis\u5173\u95ed\u64cd\u4f5c,\u5f53\u7136,\u4e5f\u53ef\u4ee5\u901a\u8fc7 kill \u547d\u4ee4\u6765\u5173\u95ed\u670d\u52a1\u3002\n\n\tredis-cli shutdown\n\n##6\u3001\u8c03\u4f18\n###1) /etc/sysctl.conf\n\u521a\u624d\u542f\u52a8\u540e\u6709\u4ee5\u4e0b\u8b66\u544a\uff1a\n\n\tWARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.\n\n\u9700\u8981\u4fee\u6539`/etc/sysctl.conf`\u6587\u4ef6\uff1a\n\n\u672b\u5c3e\u8ffd\u52a0**`vm.overcommit_memory=1`**\n\n\u7136\u540e\u6267\u884c**`sysctl vm.overcommit_memory=1`**\uff0c\u4f7f\u4e4b\u751f\u6548\uff1a\n\n###2) /proc/sys/vm/overcommit_memory\n\u4e3a\u4e86\u8c03\u6574\u5185\u5b58\u5206\u914d\u7b56\u7565\uff0c\u9700\u8981\u914d\u7f6e`/proc/sys/vm/overcommit_memory`\n\n- 0:\u8868\u793a\u5185\u6838\u5c06\u68c0\u67e5\u662f\u5426\u6709\u8db3\u591f\u7684\u53ef\u7528\u5185\u5b58\u4f9b\u5e94\u7528\u8fdb\u7a0b\u4f7f\u7528\uff1b\u5982\u679c\u6709\u8db3\u591f\u7684\u53ef\u7528\u5185\u5b58\uff0c\u5185\u5b58\u7533\u8bf7\u5141\u8bb8\uff1b\u5426\u5219\uff0c\u5185\u5b58\u7533\u8bf7\u5931\u8d25\uff0c\u5e76\u628a\u9519\u8bef\u8fd4\u56de\u7ed9\u5e94\u7528\u8fdb\u7a0b\u3002\n- 1:\u8868\u793a\u5185\u6838\u5141\u8bb8\u5206\u914d\u6240\u6709\u7684\u7269\u7406\u5185\u5b58\uff0c\u800c\u4e0d\u7ba1\u5f53\u524d\u7684\u5185\u5b58\u72b6\u6001\u5982\u4f55\u3002\n- 2:\u8868\u793a\u5185\u6838\u5141\u8bb8\u5206\u914d\u8d85\u8fc7\u6240\u6709\u7269\u7406\u5185\u5b58\u548c\u4ea4\u6362\u7a7a\u95f4\u603b\u548c\u7684\u5185\u5b58\n\n\u9ed8\u8ba4\u4e3a0\uff0c\u5982\u679c\u5185\u5b58\u60c5\u51b5\u6bd4\u8f83\u7d27\u5f20\u7684\u8bdd\uff0c\u8bbe\u4e3a1\uff1a\n\n`echo 1 > /proc/sys/vm/overcommit_memory`\n###3) redis.conf\n\u524d\u9762\u542f\u52a8Redis\u540e\uff0c\u603b\u662f\u5728\u547d\u4ee4\u884c\u91cc\u4e0d\u65ad\u8df3\u7740\u5404\u79cd\u65e5\u5fd7\uff0c\u5f88\u9ebb\u70e6\u3002\u5373\u4fbf\u901a\u8fc7**`&`**\uff0c\u4ee4\u5176\u540e\u53f0\u8fd0\u884c\uff0c\u4e5f\u65e0\u6d4e\u4e8e\u4e8b\u3002\u8fd9\u5c31\u9700\u8981\u4fee\u6539`redis.conf`\uff0c\u4ee5Daemo\u6a21\u5f0f\u8fd0\u884c\uff01\n\nredis.conf\u53c2\u6570\uff1a\n\n- daemonize\uff1a\u662f\u5426\u4ee5\u540e\u53f0daemon\u65b9\u5f0f\u8fd0\u884c\n- pidfile\uff1apid\u6587\u4ef6\u4f4d\u7f6e\n- port\uff1a\u76d1\u542c\u7684\u7aef\u53e3\u53f7\n- timeout\uff1a\u8bf7\u6c42\u8d85\u65f6\u65f6\u95f4\n- loglevel\uff1alog\u4fe1\u606f\u7ea7\u522b\n- logfile\uff1alog\u6587\u4ef6\u4f4d\u7f6e\n- databases\uff1a\u5f00\u542f\u6570\u636e\u5e93\u7684\u6570\u91cf\n- save \\* \\*\uff1a\u4fdd\u5b58\u5feb\u7167\u7684\u9891\u7387\uff0c\u7b2c\u4e00\u4e2a\\*\u8868\u793a\u591a\u957f\u65f6\u95f4\uff08\u79d2\u7ea7\uff09\uff0c\u7b2c\u4e09\u4e2a\\*\u8868\u793a\u6267\u884c\u591a\u5c11\u6b21\u5199\u64cd\u4f5c\u3002\u5728\u4e00\u5b9a\u65f6\u95f4\u5185\u6267\u884c\u4e00\u5b9a\u6570\u91cf\u7684\u5199\u64cd\u4f5c\u65f6\uff0c\u81ea\u52a8\u4fdd\u5b58\u5feb\u7167\u3002\u53ef\u8bbe\u7f6e\u591a\u4e2a\u6761\u4ef6\u3002\n- rdbcompression\uff1a\u662f\u5426\u4f7f\u7528\u538b\u7f29\n- dbfilename\uff1a\u6570\u636e\u5feb\u7167\u6587\u4ef6\u540d\uff08\u53ea\u662f\u6587\u4ef6\u540d\uff0c\u4e0d\u5305\u62ec\u76ee\u5f55\uff09\n- dir\uff1a\u6570\u636e\u5feb\u7167\u7684\u4fdd\u5b58\u76ee\u5f55\uff08\u8fd9\u4e2a\u662f\u76ee\u5f55\uff09\n- appendonly\uff1a\u662f\u5426\u5f00\u542fappendonlylog\uff0c\u5f00\u542f\u7684\u8bdd\u6bcf\u6b21\u5199\u64cd\u4f5c\u4f1a\u8bb0\u4e00\u6761log\uff0c\u8fd9\u4f1a\u63d0\u9ad8\u6570\u636e\u6297\u98ce\u9669\u80fd\u529b\uff0c\u4f46\u5f71\u54cd\u6548\u7387\u3002\n- appendfsync\uff1aappendonlylog\u5982\u4f55\u540c\u6b65\u5230\u78c1\u76d8\uff08\u4e09\u4e2a\u9009\u9879\uff0c\u5206\u522b\u662f\u6bcf\u6b21\u5199\u90fd\u5f3a\u5236\u8c03\u7528fsync\u3001\u6bcf\u79d2\u542f\u7528\u4e00\u6b21fsync\u3001\u4e0d\u8c03\u7528fsync\u7b49\u5f85\u7cfb\u7edf\u81ea\u5df1\u540c\u6b65\uff09\n- slaveof <masterip\\> <masterport\\> \uff1a\u4e3b\u4ece\u914d\u7f6e\uff0c\u5728redis-slave\u4e0a\u914d\u7f6emaster\u7684ip port\uff0c\u5373\u53ef\u3002\n\n\u4f8b\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u4fee\u6539\u4e3a\u5982\u4e0b\u65b9\u5f0f\uff1a\n\n\tdaemonize yes #\u5b88\u62a4\u8fdb\u7a0b\u6a21\u5f0f\n\n\tsave 60 1000 #\u5f53\u65f6\u95f4\u95f4\u9694\u8d85\u8fc760\u79d2\uff0c\u6216\u5b58\u50a8\u8d85\u8fc71000\u6761\u8bb0\u5f55\u65f6\uff0c\u8fdb\u884c\u6301\u4e45\u5316\u3002\n\n\tmaxmemory 256mb #\u5206\u914d256MB\u5185\u5b58\n\nPS\uff1a\u5207\u8bb0\uff0c\u4e00\u5b9a\u8981\u8bbe\u5b9a**maxmemmory**\uff0c\u4e14\u914d\u7f6e\u5927\u5c0f\u8981\u5c0f\u4e8e\u7269\u7406\u5185\u5b58\uff0c\u7559\u6709\u8db3\u591f\u7684\u5185\u5b58\u4f9b\u7cfb\u7edf\u4f7f\u7528\u3002\n###4) TCP somaxconn\u914d\u7f6e\u4fee\u6539\n\u521a\u624d\u542f\u52a8\u540e\u8fd8\u6709\u4ee5\u4e0b\u8b66\u544a\uff1a\n\n\t17366:M 26 May 15:28:57.245 # WARNING: The TCP backlog setting of 511 cannot be enforced because /proc/sys/net/core/somaxconn is set to the lower value of 128.\n\n `/proc/sys/net/core/somaxconn` \u8fd9\u4e2a\u53c2\u6570\uff0clinux\u4e2d\u5185\u6838\u7684\u4e00\u4e2a\u4e0d\u9519\u7684\u53c2\u6570somaxconn\n\n\u5bf9\u4e8e\u4e00\u4e2aTCP\u8fde\u63a5\uff0cServer\u4e0eClient\u9700\u8981\u901a\u8fc7\u4e09\u6b21\u63e1\u624b\u6765\u5efa\u7acb\u7f51\u7edc\u8fde\u63a5.\u5f53\u4e09\u6b21\u63e1\u624b\u6210\u529f\u540e,\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u7aef\u53e3\u7684\u72b6\u6001\u7531LISTEN\u8f6c\u53d8\u4e3aESTABLISHED,\u63a5\u7740\u8fd9\u6761\u94fe\u8def\u4e0a\u5c31\u53ef\u4ee5\u5f00\u59cb\u4f20\u9001\u6570\u636e\u4e86.\n\n\u6bcf\u4e00\u4e2a\u5904\u4e8e\u76d1\u542c(Listen)\u72b6\u6001\u7684\u7aef\u53e3,\u90fd\u6709\u81ea\u5df1\u7684\u76d1\u542c\u961f\u5217.\u76d1\u542c\u961f\u5217\u7684\u957f\u5ea6,\u4e0e\u5982\u4e0b\u4e24\u65b9\u9762\u6709\u5173:\n\n- somaxconn\u53c2\u6570.\n- \u4f7f\u7528\u8be5\u7aef\u53e3\u7684\u7a0b\u5e8f\u4e2dlisten()\u51fd\u6570.\n\n\u5173\u4e8esomaxconn\u53c2\u6570:\n\n\u3000\u3000\u5b9a\u4e49\u4e86\u7cfb\u7edf\u4e2d\u6bcf\u4e00\u4e2a\u7aef\u53e3\u6700\u5927\u7684\u76d1\u542c\u961f\u5217\u7684\u957f\u5ea6,\u8fd9\u662f\u4e2a\u5168\u5c40\u7684\u53c2\u6570,\u9ed8\u8ba4\u503c\u4e3a128,\u5177\u4f53\u4fe1\u606f\u4e3a:\n\n\t\u3000\u3000Purpose:\n\t\u3000\u3000Specifies the maximum listen backlog.\n\t\u3000\u3000Values:\n\t\u3000\u3000Default: 128 connections\n\t\u3000\u3000Range: 0 to MAXSHORT\n\t\u3000\u3000Type: Connect\n\t\u3000\u3000Diagnosis:\n\t\u3000\u3000N/A\n\t\u3000\u3000Tuning\n\t\u3000\u3000Increase this parameter on busy Web servers to handle peak connection rates.\n\u770b\u4e0bFREEBSD\u7684\u89e3\u6790\uff1a\n\n\u3000\u3000\u9650\u5236\u4e86\u63a5\u6536\u65b0 TCP \u8fde\u63a5\u4fa6\u542c\u961f\u5217\u7684\u5927\u5c0f\u3002\u5bf9\u4e8e\u4e00\u4e2a\u7ecf\u5e38\u5904\u7406\u65b0\u8fde\u63a5\u7684\u9ad8\u8d1f\u8f7d web\u670d\u52a1\u73af\u5883\u6765\u8bf4\uff0c\u9ed8\u8ba4\u7684 `128` \u592a\u5c0f\u4e86\u3002\u5927\u591a\u6570\u73af\u5883\u8fd9\u4e2a\u503c\u5efa\u8bae\u589e\u52a0\u5230 1024 \u6216\u8005\u66f4\u591a\u3002 \u670d\u52a1\u8fdb\u7a0b\u4f1a\u81ea\u5df1\u9650\u5236\u4fa6\u542c\u961f\u5217\u7684\u5927\u5c0f(\u4f8b\u5982 `sendmail(8)` \u6216\u8005 `Apache`)\uff0c\u5e38\u5e38\u5728\u5b83\u4eec\u7684\u914d\u7f6e\u6587\u4ef6\u4e2d\u6709\u8bbe\u7f6e\u961f\u5217\u5927\u5c0f\u7684\u9009\u9879\u3002\u5927\u7684\u4fa6\u542c\u961f\u5217\u5bf9\u9632\u6b62\u62d2\u7edd\u670d\u52a1 DoS \u653b\u51fb\u4e5f\u4f1a\u6709\u6240\u5e2e\u52a9\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\uff0c\n\n\techo 511 >/proc/sys/net/core/somaxconn\n\n\u6765\u4fee\u6539\u8fd9\u4e2a\u53c2\u6570\u3002\n###5) \u4e0b\u9762\u4ecb\u7ecd\u53e6\u5916\u4e00\u79cd\u914d\u7f6e\u65b9\u5f0f\uff0c\u901a\u8fc7\u547d\u4ee4\u884c\u6765\u914d\u7f6e\u3002\n\u5047\u5982\u8bf4\u6211\u4eec\u4e0d\u60f3\u4fee\u6539\u914d\u7f6e\u6587\u4ef6\u6765\u542f\u52a8\u6307\u5b9a\u7aef\u53e3\u53f7\u7684redis\u670d\u52a1\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u7ec8\u7aef\u4e0a\u6267\u884c\u4e0b\u9762\u7684\u547d\u4ee4\uff1a\n\n    redis-server --port 6379 --daemonize yes\n\n    redis-cli -p 6379\n\n\u4f46\u6211\u8fd8\u662f\u63a8\u8350\u4f7f\u7528\u914d\u7f6e\u6587\u4ef6\u7684\u65b9\u5f0f\u3002\n\n\u5982\u679c\u5728\u751f\u4ea7\u73af\u5883\u91cc\u9762\u9700\u8981\u4fee\u6539\u67d0\u4e9b\u914d\u7f6e\u9879\uff0c\u4f46\u6211\u4eec\u53c8\u4e0d\u60f3\u505c\u6389\u670d\u52a1\uff0c\u600e\u4e48\u529e\uff1f\n\nRedis\u5141\u8bb8\u5728\u8fd0\u884c\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5728\u4e0d\u91cd\u542f\u670d\u52a1\u5668\u7684\u60c5\u51b5\u4e0b\u66f4\u6539\u670d\u52a1\u5668\u914d\u7f6e\uff0c\u540c\u65f6\u4e5f\u652f\u6301 \u4f7f\u7528\u7279\u6b8a\u7684[CONFIG SET](http://www.redis.cn/commands/config-set.html)\u548c [CONFIG GET](http://www.redis.cn/commands/config-get.html)\u547d\u4ee4\u7528\u7f16\u7a0b\u65b9\u5f0f\u67e5\u8be2\u5e76\u8bbe\u7f6e\u914d\u7f6e\u3002\n#\u4e8c.Redis \u4e3b\u4ece\u590d\u5236\nRedis \u7684\u4e3b\u4ece\u590d\u5236\u914d\u7f6e\u975e\u5e38\u5bb9\u6613\uff0c\u4f46\u6211\u4eec\u5148\u6765\u4e86\u89e3\u4e00\u4e0b\u5b83\u7684\u4e00\u4e9b\u7279\u6027\u3002\n\n- 1.redis \u4f7f\u7528\u5f02\u6b65\u590d\u5236\u3002\u4ece redis 2.8 \u5f00\u59cb\uff0cslave \u4e5f\u4f1a\u5468\u671f\u6027\u7684\u544a\u8bc9 master \u73b0\u5728\u7684\u6570\u636e\u91cf\u3002\u53ef\u80fd\u53ea\u662f\u4e2a\u673a\u5236\uff0c\u7528\u9014\u5e94\u8be5\u4e0d\u5927\u3002\n\n- 2.\u4e00\u4e2a master \u53ef\u4ee5\u62e5\u6709\u591a\u4e2a slave\uff0c\u5e9f\u8bdd\uff0c\u8fd9\u4e5f\u662f\u4e1a\u754c\u7684\u6807\u914d\u5427\u3002\n\n- 3.slave \u53ef\u4ee5\u63a5\u6536\u6765\u81ea\u5176\u4ed6 slave \u7684\u8fde\u63a5\u3002\u610f\u601d\u662f\u4e0d\u662f\u5c31\u662f\u8bf4 slave \u5728\u63a5\u6536\u5176\u4ed6\u7684slave\u7684\u8fde\u63a5\u4e4b\u540e\u6210\u4e3a master \uff1f\u7b49\u4e0b\u6211\u4eec\u6765\u9a8c\u8bc1\u3002\n\n- 4.redis \u590d\u5236\u5728 master \u8fd9\u4e00\u7aef\u662f\u975e\u963b\u585e\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u5728\u548c slave \u540c\u6b65\u6570\u636e\u7684\u65f6\u5019\uff0cmaster \u4ecd\u7136\u53ef\u4ee5\u6267\u884c\u5ba2\u6237\u7aef\u7684\u64cd\u4f5c\u547d\u4ee4\u800c\u4e0d\u53d7\u5176\u5f71\u54cd\u3002\u8fd9\u70b9\u90fd\u4e0d\u80fd\u4fdd\u8bc1\uff0c\u8981\u4f60\u5e72\u561b\uff1f\n\n- 5.redis \u590d\u5236\u5728 slave \u8fd9\u4e00\u7aef\u4e5f\u662f\u975e\u963b\u585e\u7684\u3002\u5728\u914d\u7f6e\u6587\u4ef6\u91cc\u9762\u6709 slave-serve-stale-data \u8fd9\u4e00\u9879\uff0c\u5982\u679c\u5b83\u4e3a yes \uff0cslave \u5728\u6267\u884c\u540c\u6b65\u65f6\uff0c\u5b83\u53ef\u4ee5\u4f7f\u7528\u8001\u7248\u672c\u7684\u6570\u636e\u6765\u5904\u7406\u67e5\u8be2\u8bf7\u6c42\uff0c\u5982\u679c\u662f no \uff0cslave \u5c06\u8fd4\u56de\u4e00\u4e2a\u9519\u8bef\u3002\u5728\u5b8c\u6210\u540c\u6b65\u540e\uff0cslave \u9700\u8981\u5220\u9664\u8001\u6570\u636e\uff0c\u52a0\u8f7d\u65b0\u6570\u636e\uff0c\u5728\u8fd9\u4e2a\u9636\u6bb5\uff0cslave \u4f1a\u963b\u6b62\u8fde\u63a5\u8fdb\u6765\u3002\n\n- 6.Replication can be used both for scalability, in order to have multiple slaves for read-only queries (for example, heavy SORT operations can be offloaded to slaves), or simply for data redundancy.\u8fd9\u53e5\u8bdd\u6211\u4e5f\u6ca1\u7406\u89e3\u4ec0\u4e48\u610f\u601d\u3002\n\n- 7.\u4f7f\u7528\u590d\u5236\u53ef\u4ee5\u907f\u514d master \u56e0\u4e3a\u9700\u8981\u628a\u5168\u90e8\u7684\u6570\u636e\u96c6\u5199\u5165\u78c1\u76d8\u800c\u9020\u6210\u7684\u5f00\u9500\uff0c\u56e0\u6b64\u53ef\u4ee5\u628a master \u4e2d save \u914d\u7f6e\u9879\u5168\u90e8\u6ce8\u91ca\u6389\uff0c\u4e0d\u8ba9\u5b83\u8fdb\u884c\u4fdd\u5b58\uff0c\u7136\u540e\u914d\u7f6e slave \uff0c\u8ba9 slave \u4fdd\u5b58\u3002\u867d\u7136\u6709\u8fd9\u4e2a\u7279\u6027\uff0c\u4f46\u662f\u6211\u4eec\u597d\u50cf\u4e00\u822c\u4e0d\u8fd9\u4e48\u505a\u3002\n\n\u597d\u5427\uff0c\u6211\u4eec\u505a\u51e0\u4e2a\u4f8b\u5b50\u7ec3\u4e60\u4e00\u4e0b\u3002\n\n\u5148\u6253\u5f00\u4e09\u4e2a\u7ec8\u7aef\uff0c\u7136\u540e\u8d77\u4e09\u4e2a\u5b9e\u4f8b\uff0c\u5206\u522b\u7528\u4e09\u4e2a client \u53bb\u8fde\u63a5\u5b83\u4eec\uff1a\n\nmaster\n\n\t$ ./redis-server --port 10000 --daemonize yes\n\n\t$ ./redis-cli -p 10000\n\nslave 01\uff1a\n\n\t$ ./redis-server --port 10001 --daemonize yes\n\n\t$ ./redis-cli -p 10001\n\nslave 02\uff1a\n\n\t$ ./redis-server --port 10002 --daemonize yes\n\n\t$ ./redis-cli -p 10002\n\n\u4e0a\u9762\u53ea\u662f\u8ba9\u5b83\u4eec\u7684\u5b9e\u4f8b\u542f\u52a8\u4e86\u5e76\u7528\u5ba2\u6237\u7aef\u53bb\u8fde\u63a5\u5b83\uff0c\u5e76\u6ca1\u6709\u8bbe\u7f6e\u4e3b\u4ece\u5173\u7cfb\u3002\u5728 `slave 01` \u548c `slave 02` \u4e0a\u6267\u884c\u4e0b\u9762\u7684\u547d\u4ee4\uff1a\n\n\t127.0.0.1:10001> slaveof 127.0.0.1 10000\n\n\tOK\n\n\t127.0.0.1:10001>\n\n\u8fd9\u6837\u5c31\u8bbe\u7f6e\u597d\u4e86\u4e3b\u4ece\u5173\u7cfb\u3002\u6211\u4eec\u6765\u8bd5\u8bd5\u6709\u6ca1\u6709\u6548\u679c\u3002\n\n\t127.0.0.1:10001> get name\n\n\t(nil)\n\n\t127.0.0.1:10001>\n\n\u8fd9\u4e2a\u65f6\u5019\u662f\u6ca1\u6709\u503c\u7684\u3002\n\nmaster \u4e0a\u6267\u884c\uff1a\n\n\t127.0.0.1:10000> set name sherlock\n\n\tOK\n\n\t127.0.0.1:10000>\n\n\u7136\u540e\u770b\u770b slave \u4e0a\u6709\u6ca1\u6709\uff1a\n\n\t127.0.0.1:10001> get name\n\n\t\"sherlock\"\n\n\t127.0.0.1:10001>\n\n\t127.0.0.1:10002> get name\n\n\t\"sherlock\"\n\n\t127.0.0.1:10002>\n\n\u6709\u4e86\uff0c\u662f\u4e0d\u662f\u5f88easy \uff1f\u5df2\u7ecf\u6709\u4e86\u611f\u6027\u7684\u8ba4\u8bc6\uff0c\u6211\u4eec\u6765\u4ecb\u7ecd\u4e00\u4e0b\u5b83\u7684\u539f\u7406\u5427\u3002\n\n\u5f53\u4f60\u8bbe\u7f6e\u4e86\u4e3b\u4ece\u5173\u7cfb\u540e\uff0c`slave` \u5728\u7b2c\u4e00\u6b21\u8fde\u63a5\u6216\u8005\u91cd\u65b0\u8fde\u63a5 `master` \u65f6\uff0c`slave` \u90fd\u4f1a\u53d1\u9001\u4e00\u6761\u540c\u6b65\u6307\u4ee4\u7ed9`master`\uff1b\n\n`master` \u63a5\u5230\u6307\u4ee4\u540e\uff0c\u5f00\u59cb\u542f\u52a8\u540e\u53f0\u4fdd\u5b58\u8fdb\u7a0b\u4fdd\u5b58\u6570\u636e\uff0c\u63a5\u7740\u6536\u96c6\u6240\u6709\u7684\u6570\u636e\u4fee\u6539\u6307\u4ee4\u3002\u540e\u53f0\u4fdd\u5b58\u5b8c\u4e86\uff0c`master` \u5c31\u628a\u8fd9\u4efd\u6570\u636e\u53d1\u9001\u7ed9 `slave`\uff0c`slave` \u5148\u628a\u6570\u636e\u4fdd\u5b58\u5230\u78c1\u76d8\uff0c\u7136\u540e\u628a\u5b83\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d\uff0c`master` \u63a5\u7740\u5c31\u628a\u6536\u96c6\u7684\u6570\u636e\u4fee\u6539\u6307\u4ee4\u4e00\u884c\u4e00\u884c\u7684\u53d1\u7ed9 `slave`\uff0c`slave` \u63a5\u6536\u5230\u4e4b\u540e\u91cd\u65b0\u6267\u884c\u8be5\u6307\u4ee4\uff0c\u8fd9\u6837\u5c31\u5b9e\u73b0\u4e86\u6570\u636e\u540c\u6b65\u3002\n\n`slave` \u5728\u4e0e `master` \u5931\u53bb\u8054\u7cfb\u540e\uff0c\u81ea\u52a8\u7684\u91cd\u65b0\u8fde\u63a5\u3002\u5982\u679c `master` \u6536\u5230\u4e86\u591a\u4e2a `slave` \u7684\u540c\u6b65\u8bf7\u6c42\uff0c\u5b83\u4f1a\u6267\u884c\u5355\u4e2a\u540e\u53f0\u4fdd\u5b58\u6765\u4e3a\u6240\u6709\u7684 `slave` \u670d\u52a1\u3002\n\n\u4e00\u65e6 `master` \u548c `slave` \u5728\u5931\u53bb\u8054\u7cfb\u5e76\u91cd\u65b0\u8fde\u63a5\u4e0a\uff0c\u603b\u662f\u4f1a\u91cd\u65b0\u8fdb\u884c\u4e00\u6b21\u5b8c\u6574\u7684\u540c\u6b65\u3002\u4e0d\u8fc7\u4ece `redis 2.8` \u5f00\u59cb\uff0c\u53ea\u662f\u90e8\u5206\u91cd\u65b0\u540c\u6b65\u4e5f\u662f\u53ef\u4ee5\u7684\u3002\u5177\u4f53\u8bf7\u5927\u5bb6\u53c2\u8003\u5b98\u65b9\u6587\u6863\u3002\n#\u4e09.\u4e3b\u4ece\u5907\u4efd\n\u5728\u4ece\u670d\u52a1\u5668\u4e0a\u6267\u884c\u4e0b\u5217\u547d\u4ee4\uff1a\n\n$\u5907\u4efd\n\n\tredis-cli save\n\n$\u5173\u95edredis\u670d\u52a1\u5668\n\n\tredis-cli shutdown\n\n\u7136\u540e\uff0c\u62f7\u8d1d\u6570\u636e\u76ee\u5f55\u4e0b\u7684`rdb`\u6587\u4ef6\u3002\n#\u53c2\u8003\n- 1.\u6709\u5173linux\u4e0bredis overcommit_memory\u7684\u95ee\u9898\n[http://blog.csdn.net/whycold/article/details/21388455](http://blog.csdn.net/whycold/article/details/21388455 \"\u6709\u5173linux\u4e0bredis overcommit_memory\u7684\u95ee\u9898\")\n- 2.Redis\u5b9e\u6218\uff08\u7cfb\u5217\uff09[http://blog.csdn.net/it_man/article/details/9730559](http://blog.csdn.net/it_man/article/details/9730559)\n- 3.\u9ad8\u6027\u80fd\u7f51\u7ad9\u67b6\u6784\u8bbe\u8ba1\u4e4b\u7f13\u5b58\u7bc7\uff081\uff09- Redis\u7684\u5b89\u88c5\u4e0e\u4f7f\u7528 [http://www.cnblogs.com/zhaoguihua/p/redis-001.html](http://www.cnblogs.com/zhaoguihua/p/redis-001.html)\n- 4.linux\u73af\u5883 redis overcommit_memory [https://blog.hackroad.com/operations-engineer/linux_server/1422.html](https://blog.hackroad.com/operations-engineer/linux_server/1422.html)\n- 5.\u7406\u89e3\u548c\u914d\u7f6e Linux \u4e0b\u7684 OOM Killer [http://www.vpsee.com/2013/10/how-to-configure-the-linux-oom-killer/](http://www.vpsee.com/2013/10/how-to-configure-the-linux-oom-killer/)\n- 6.\u9ad8\u6027\u80fd\u7f51\u7ad9\u67b6\u6784\u8bbe\u8ba1\u4e4b\u7f13\u5b58\u7bc7\uff085\uff09- Redis \u96c6\u7fa4\uff08\u4e0a\uff09 [http://www.cnblogs.com/zhaoguihua/p/redis-005.html](http://www.cnblogs.com/zhaoguihua/p/redis-005.html)\n- 7.\u9ad8\u6027\u80fd\u7f51\u7ad9\u67b6\u6784\u8bbe\u8ba1\u4e4b\u7f13\u5b58\u7bc7\uff086\uff09- Redis \u96c6\u7fa4\uff08\u4e2d\uff09 [http://www.cnblogs.com/zhaoguihua/p/redis-006.html](http://www.cnblogs.com/zhaoguihua/p/redis-006.html)", 
                        "published_at": 1432123320000, 
                        "published_by": 1, 
                        "slug": "redis-studing", 
                        "status": "published", 
                        "title": "Redis Studing", 
                        "updated_at": 1432123320000, 
                        "updated_by": 1, 
                        "uuid": "b6ac1b78-345c-46df-a6d9-720763415347"
                    }, 
                    {
                        "created_at": 1431607920000, 
                        "created_by": 1, 
                        "id": 7, 
                        "language": "en_US", 
                        "markdown": "## \u76ee\u5f55\n\n1. [\u524d\u8a00](#Intro)\n1. [\u6e90\u6587\u4ef6\u57fa\u7840](#SFBasic)\n1. [\u6e90\u6587\u4ef6\u7ed3\u6784](#SFStruct)\n1. [\u683c\u5f0f](#Format)\n1. [\u547d\u540d\u7ea6\u5b9a](#Naming)\n1. [\u7f16\u7a0b\u5b9e\u8df5](#Practice)\n1. [Javadoc](#Javadoc)\n1. [\u540e\u8bb0](#End)\n\n## <a id=\"Intro\">\u524d\u8a00</a>\n\n\u8fd9\u4efd\u6587\u6863\u662fGoogle Java\u7f16\u7a0b\u98ce\u683c\u89c4\u8303\u7684\u5b8c\u6574\u5b9a\u4e49\u3002\u5f53\u4e14\u4ec5\u5f53\u4e00\u4e2aJava\u6e90\u6587\u4ef6\u7b26\u5408\u6b64\u6587\u6863\u4e2d\u7684\u89c4\u5219\uff0c\n\u6211\u4eec\u624d\u8ba4\u4e3a\u5b83\u7b26\u5408Google\u7684Java\u7f16\u7a0b\u98ce\u683c\u3002\n\n\u4e0e\u5176\u5b83\u7684\u7f16\u7a0b\u98ce\u683c\u6307\u5357\u4e00\u6837\uff0c\u8fd9\u91cc\u6240\u8ba8\u8bba\u7684\u4e0d\u4ec5\u4ec5\u662f\u7f16\u7801\u683c\u5f0f\u7f8e\u4e0d\u7f8e\u89c2\u7684\u95ee\u9898\uff0c\n\u540c\u65f6\u4e5f\u8ba8\u8bba\u4e00\u4e9b\u7ea6\u5b9a\u53ca\u7f16\u7801\u6807\u51c6\u3002\u7136\u800c\uff0c\u8fd9\u4efd\u6587\u6863\u4e3b\u8981\u4fa7\u91cd\u4e8e\u6211\u4eec\u6240\u666e\u904d\u9075\u5faa\u7684\u89c4\u5219\uff0c\n\u5bf9\u4e8e\u90a3\u4e9b\u4e0d\u662f\u660e\u786e\u5f3a\u5236\u8981\u6c42\u7684\uff0c\u6211\u4eec\u5c3d\u91cf\u907f\u514d\u63d0\u4f9b\u610f\u89c1\u3002\n\n<!--more-->\n### 1.1 \u672f\u8bed\u8bf4\u660e\n\n\u5728\u672c\u6587\u6863\u4e2d\uff0c\u9664\u975e\u53e6\u6709\u8bf4\u660e\uff1a\n\n1. \u672f\u8bedclass\u53ef\u8868\u793a\u4e00\u4e2a\u666e\u901a\u7c7b\uff0c\u679a\u4e3e\u7c7b\uff0c\u63a5\u53e3\u6216\u662fannotation\u7c7b\u578b(`@interface`)\n1. \u672f\u8bedcomment\u53ea\u7528\u6765\u6307\u4ee3\u5b9e\u73b0\u7684\u6ce8\u91ca(implementation comments)\uff0c\u6211\u4eec\u4e0d\u4f7f\u7528\u201cdocumentation comments\u201d\u4e00\u8bcd\uff0c\u800c\u662f\u7528Javadoc\u3002\n\n\u5176\u4ed6\u7684\u672f\u8bed\u8bf4\u660e\u4f1a\u5076\u5c14\u5728\u540e\u9762\u7684\u6587\u6863\u51fa\u73b0\u3002\n\n### 1.2 \u6307\u5357\u8bf4\u660e\n\n\u672c\u6587\u6863\u4e2d\u7684\u793a\u4f8b\u4ee3\u7801\u5e76\u4e0d\u4f5c\u4e3a\u89c4\u8303\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u867d\u7136\u793a\u4f8b\u4ee3\u7801\u662f\u9075\u5faaGoogle\u7f16\u7a0b\u98ce\u683c\uff0c\u4f46\u5e76\u4e0d\u610f\u5473\u7740\u8fd9\u662f\u5c55\u73b0\u8fd9\u4e9b\u4ee3\u7801\u7684\u552f\u4e00\u65b9\u5f0f\u3002\n\u793a\u4f8b\u4e2d\u7684\u683c\u5f0f\u9009\u62e9\u4e0d\u5e94\u8be5\u88ab\u5f3a\u5236\u5b9a\u4e3a\u89c4\u5219\u3002\n\n## <a id=\"SFBasic\">\u6e90\u6587\u4ef6\u57fa\u7840</a>\n\n### 2.1 \u6587\u4ef6\u540d\n\n\u6e90\u6587\u4ef6\u4ee5\u5176\u6700\u9876\u5c42\u7684\u7c7b\u540d\u6765\u547d\u540d\uff0c\u5927\u5c0f\u5199\u654f\u611f\uff0c\u6587\u4ef6\u6269\u5c55\u540d\u4e3a`.java`\u3002\n\n### 2.2 \u6587\u4ef6\u7f16\u7801\uff1aUTF-8\n\n\u6e90\u6587\u4ef6\u7f16\u7801\u683c\u5f0f\u4e3aUTF-8\u3002\n\n### 2.3 \u7279\u6b8a\u5b57\u7b26\n\n#### 2.3.1 \u7a7a\u767d\u5b57\u7b26\n\n\u9664\u4e86\u884c\u7ed3\u675f\u7b26\u5e8f\u5217\uff0cASCII\u6c34\u5e73\u7a7a\u683c\u5b57\u7b26(0x20\uff0c\u5373\u7a7a\u683c)\u662f\u6e90\u6587\u4ef6\u4e2d\u552f\u4e00\u5141\u8bb8\u51fa\u73b0\u7684\u7a7a\u767d\u5b57\u7b26\uff0c\u8fd9\u610f\u5473\u7740\uff1a\n\n1. \u6240\u6709\u5176\u5b83\u5b57\u7b26\u4e32\u4e2d\u7684\u7a7a\u767d\u5b57\u7b26\u90fd\u8981\u8fdb\u884c\u8f6c\u4e49\u3002\n1. \u5236\u8868\u7b26\u4e0d\u7528\u4e8e\u7f29\u8fdb\u3002\n\n#### 2.3.2 \u7279\u6b8a\u8f6c\u4e49\u5e8f\u5217\n\n\u5bf9\u4e8e\u5177\u6709\u7279\u6b8a[\u8f6c\u4e49\u5e8f\u5217](http://zh.wikipedia.org/wiki/%E8%BD%AC%E4%B9%89%E5%BA%8F%E5%88%97)\u7684\u4efb\u4f55\u5b57\u7b26(\\b, \\t, \\n, \\f, \\r, \\\", \\'\u53ca\\\\)\uff0c\u6211\u4eec\u4f7f\u7528\u5b83\u7684\u8f6c\u4e49\u5e8f\u5217\uff0c\u800c\u4e0d\u662f\u76f8\u5e94\u7684\u516b\u8fdb\u5236(\u6bd4\u5982`\\012`)\u6216Unicode(\u6bd4\u5982`\\u000a`)\u8f6c\u4e49\u3002\n\n#### 2.3.3 \u975eASCII\u5b57\u7b26\n\n\u5bf9\u4e8e\u5269\u4f59\u7684\u975eASCII\u5b57\u7b26\uff0c\u662f\u4f7f\u7528\u5b9e\u9645\u7684Unicode\u5b57\u7b26(\u6bd4\u5982\u221e)\uff0c\u8fd8\u662f\u4f7f\u7528\u7b49\u4ef7\u7684Unicode\u8f6c\u4e49\u7b26(\u6bd4\u5982\\u221e)\uff0c\u53d6\u51b3\u4e8e\u54ea\u4e2a\u80fd\u8ba9\u4ee3\u7801\u66f4\u6613\u4e8e\u9605\u8bfb\u548c\u7406\u89e3\u3002\n\n> Tip: \u5728\u4f7f\u7528Unicode\u8f6c\u4e49\u7b26\u6216\u662f\u4e00\u4e9b\u5b9e\u9645\u7684Unicode\u5b57\u7b26\u65f6\uff0c\u5efa\u8bae\u505a\u4e9b\u6ce8\u91ca\u7ed9\u51fa\u89e3\u91ca\uff0c\u8fd9\u6709\u52a9\u4e8e\u522b\u4eba\u9605\u8bfb\u548c\u7406\u89e3\u3002\n\n\u4f8b\u5982\uff1a\n```java\n\tString unitAbbrev = \"\u03bcs\";                                 | \u8d5e\uff0c\u5373\u4f7f\u6ca1\u6709\u6ce8\u91ca\u4e5f\u975e\u5e38\u6e05\u6670\n\tString unitAbbrev = \"\\u03bcs\"; // \"\u03bcs\"                    | \u5141\u8bb8\uff0c\u4f46\u6ca1\u6709\u7406\u7531\u8981\u8fd9\u6837\u505a\n\tString unitAbbrev = \"\\u03bcs\"; // Greek letter mu, \"s\"    | \u5141\u8bb8\uff0c\u4f46\u8fd9\u6837\u505a\u663e\u5f97\u7b28\u62d9\u8fd8\u5bb9\u6613\u51fa\u9519\n\tString unitAbbrev = \"\\u03bcs\";                            | \u5f88\u7cdf\uff0c\u8bfb\u8005\u6839\u672c\u770b\u4e0d\u51fa\u8fd9\u662f\u4ec0\u4e48\n\treturn '\\ufeff' + content; // byte order mark             | Good\uff0c\u5bf9\u4e8e\u975e\u6253\u5370\u5b57\u7b26\uff0c\u4f7f\u7528\u8f6c\u4e49\uff0c\u5e76\u5728\u5fc5\u8981\u65f6\u5199\u4e0a\u6ce8\u91ca\n```\n\n> Tip: \u6c38\u8fdc\u4e0d\u8981\u7531\u4e8e\u5bb3\u6015\u67d0\u4e9b\u7a0b\u5e8f\u53ef\u80fd\u65e0\u6cd5\u6b63\u786e\u5904\u7406\u975eASCII\u5b57\u7b26\u800c\u8ba9\u4f60\u7684\u4ee3\u7801\u53ef\u8bfb\u6027\u53d8\u5dee\u3002\u5f53\u7a0b\u5e8f\u65e0\u6cd5\u6b63\u786e\u5904\u7406\u975eASCII\u5b57\u7b26\u65f6\uff0c\u5b83\u81ea\u7136\u65e0\u6cd5\u6b63\u786e\u8fd0\u884c\uff0c\n\u4f60\u5c31\u4f1a\u53bbfix\u8fd9\u4e9b\u95ee\u9898\u7684\u4e86\u3002(\u8a00\u4e0b\u4e4b\u610f\u5c31\u662f\u5927\u80c6\u53bb\u7528\u975eASCII\u5b57\u7b26\uff0c\u5982\u679c\u771f\u7684\u6709\u9700\u8981\u7684\u8bdd)\n\n## <a id=\"SFStruct\">\u6e90\u6587\u4ef6\u7ed3\u6784</a>\n\n\u4e00\u4e2a\u6e90\u6587\u4ef6\u5305\u542b(\u6309\u987a\u5e8f\u5730)\uff1a\n\n1. \u8bb8\u53ef\u8bc1\u6216\u7248\u6743\u4fe1\u606f(\u5982\u6709\u9700\u8981)\n1. package\u8bed\u53e5\n1. import\u8bed\u53e5\n1. \u4e00\u4e2a\u9876\u7ea7\u7c7b(**\u53ea\u6709\u4e00\u4e2a**)\n\n\u4ee5\u4e0a\u6bcf\u4e2a\u90e8\u5206\u4e4b\u95f4\u7528\u4e00\u4e2a\u7a7a\u884c\u9694\u5f00\u3002\n\n### 3.1 \u8bb8\u53ef\u8bc1\u6216\u7248\u6743\u4fe1\u606f\n\n\u5982\u679c\u4e00\u4e2a\u6587\u4ef6\u5305\u542b\u8bb8\u53ef\u8bc1\u6216\u7248\u6743\u4fe1\u606f\uff0c\u90a3\u4e48\u5b83\u5e94\u5f53\u88ab\u653e\u5728\u6587\u4ef6\u6700\u524d\u9762\u3002\n\n### 3.2 package\u8bed\u53e5\n\npackage\u8bed\u53e5\u4e0d\u6362\u884c\uff0c\u5217\u9650\u5236(4.4\u8282)\u5e76\u4e0d\u9002\u7528\u4e8epackage\u8bed\u53e5\u3002(\u5373package\u8bed\u53e5\u5199\u5728\u4e00\u884c\u91cc)\n\n### 3.3 import\u8bed\u53e5\n\n#### 3.3.1 import\u4e0d\u8981\u4f7f\u7528\u901a\u914d\u7b26\n\n\u5373\uff0c\u4e0d\u8981\u51fa\u73b0\u7c7b\u4f3c\u8fd9\u6837\u7684import\u8bed\u53e5\uff1a`import java.util.*;`\n\n#### 3.3.2 \u4e0d\u8981\u6362\u884c\n\nimport\u8bed\u53e5\u4e0d\u6362\u884c\uff0c\u5217\u9650\u5236(4.4\u8282)\u5e76\u4e0d\u9002\u7528\u4e8eimport\u8bed\u53e5\u3002(\u6bcf\u4e2aimport\u8bed\u53e5\u72ec\u7acb\u6210\u884c)\n\n#### 3.3.3 \u987a\u5e8f\u548c\u95f4\u8ddd\n\nimport\u8bed\u53e5\u53ef\u5206\u4e3a\u4ee5\u4e0b\u51e0\u7ec4\uff0c\u6309\u7167\u8fd9\u4e2a\u987a\u5e8f\uff0c\u6bcf\u7ec4\u7531\u4e00\u4e2a\u7a7a\u884c\u5206\u9694\uff1a\n\n1. \u6240\u6709\u7684\u9759\u6001\u5bfc\u5165\u72ec\u7acb\u6210\u7ec4\n1. `com.google` imports(\u4ec5\u5f53\u8fd9\u4e2a\u6e90\u6587\u4ef6\u662f\u5728`com.google`\u5305\u4e0b)\n1. \u7b2c\u4e09\u65b9\u7684\u5305\u3002\u6bcf\u4e2a\u9876\u7ea7\u5305\u4e3a\u4e00\u7ec4\uff0c\u5b57\u5178\u5e8f\u3002\u4f8b\u5982\uff1aandroid, com, junit, org, sun\n1. `java` imports\n1. `javax` imports\n\n\u7ec4\u5185\u4e0d\u7a7a\u884c\uff0c\u6309\u5b57\u5178\u5e8f\u6392\u5217\u3002\n\n### 3.4 \u7c7b\u58f0\u660e\n\n#### 3.4.1 \u53ea\u6709\u4e00\u4e2a\u9876\u7ea7\u7c7b\u58f0\u660e\n\n\u6bcf\u4e2a\u9876\u7ea7\u7c7b\u90fd\u5728\u4e00\u4e2a\u4e0e\u5b83\u540c\u540d\u7684\u6e90\u6587\u4ef6\u4e2d(\u5f53\u7136\uff0c\u8fd8\u5305\u542b`.java`\u540e\u7f00)\u3002\n\n\u4f8b\u5916\uff1a`package-info.java`\uff0c\u8be5\u6587\u4ef6\u4e2d\u53ef\u6ca1\u6709`package-info`\u7c7b\u3002\n\n#### 3.4.2 \u7c7b\u6210\u5458\u987a\u5e8f\n\n\u7c7b\u7684\u6210\u5458\u987a\u5e8f\u5bf9\u6613\u5b66\u6027\u6709\u5f88\u5927\u7684\u5f71\u54cd\uff0c\u4f46\u8fd9\u4e5f\u4e0d\u5b58\u5728\u552f\u4e00\u7684\u901a\u7528\u6cd5\u5219\u3002\u4e0d\u540c\u7684\u7c7b\u5bf9\u6210\u5458\u7684\u6392\u5e8f\u53ef\u80fd\u662f\u4e0d\u540c\u7684\u3002\n\u6700\u91cd\u8981\u7684\u4e00\u70b9\uff0c\u6bcf\u4e2a\u7c7b\u5e94\u8be5\u4ee5\u67d0\u79cd\u903b\u8f91\u53bb\u6392\u5e8f\u5b83\u7684\u6210\u5458\uff0c\u7ef4\u62a4\u8005\u5e94\u8be5\u8981\u80fd\u89e3\u91ca\u8fd9\u79cd\u6392\u5e8f\u903b\u8f91\u3002\u6bd4\u5982\uff0c\n\u65b0\u7684\u65b9\u6cd5\u4e0d\u80fd\u603b\u662f\u4e60\u60ef\u6027\u5730\u6dfb\u52a0\u5230\u7c7b\u7684\u7ed3\u5c3e\uff0c\u56e0\u4e3a\u8fd9\u6837\u5c31\u662f\u6309\u65f6\u95f4\u987a\u5e8f\u800c\u975e\u67d0\u79cd\u903b\u8f91\u6765\u6392\u5e8f\u7684\u3002\n\n##### 3.4.2.1 \u91cd\u8f7d\uff1a\u6c38\u4e0d\u5206\u79bb\n\n\u5f53\u4e00\u4e2a\u7c7b\u6709\u591a\u4e2a\u6784\u9020\u51fd\u6570\uff0c\u6216\u662f\u591a\u4e2a\u540c\u540d\u65b9\u6cd5\uff0c\u8fd9\u4e9b\u51fd\u6570/\u65b9\u6cd5\u5e94\u8be5\u6309\u987a\u5e8f\u51fa\u73b0\u5728\u4e00\u8d77\uff0c\u4e2d\u95f4\u4e0d\u8981\u653e\u8fdb\u5176\u5b83\u51fd\u6570/\u65b9\u6cd5\u3002\n\n## <a id=\"Format\">\u683c\u5f0f</a>\n\n**\u672f\u8bed\u8bf4\u660e**\uff1a\u5757\u72b6\u7ed3\u6784(block-like construct)\u6307\u7684\u662f\u4e00\u4e2a\u7c7b\uff0c\u65b9\u6cd5\u6216\u6784\u9020\u51fd\u6570\u7684\u4e3b\u4f53\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u6570\u7ec4\u521d\u59cb\u5316\u4e2d\u7684\u521d\u59cb\u503c\u53ef\u88ab\u9009\u62e9\u6027\u5730\u89c6\u4e3a\u5757\u72b6\u7ed3\u6784(4.8.3.1\u8282)\u3002\n\n### 4.1 \u5927\u62ec\u53f7\n\n#### 4.1.1 \u4f7f\u7528\u5927\u62ec\u53f7(\u5373\u4f7f\u662f\u53ef\u9009\u7684)\n\n\u5927\u62ec\u53f7\u4e0e`if, else, for, do, while`\u8bed\u53e5\u4e00\u8d77\u4f7f\u7528\uff0c\u5373\u4f7f\u53ea\u6709\u4e00\u6761\u8bed\u53e5(\u6216\u662f\u7a7a)\uff0c\u4e5f\u5e94\u8be5\u628a\u5927\u62ec\u53f7\u5199\u4e0a\u3002\n\n#### 4.1.2 \u975e\u7a7a\u5757\uff1aK & R \u98ce\u683c\n\n\u5bf9\u4e8e\u975e\u7a7a\u5757\u548c\u5757\u72b6\u7ed3\u6784\uff0c\u5927\u62ec\u53f7\u9075\u5faaKernighan\u548cRitchie\u98ce\u683c\n([Egyptian brackets](http://www.codinghorror.com/blog/2012/07/new-programming-jargon.html)):\n\n* \u5de6\u5927\u62ec\u53f7\u524d\u4e0d\u6362\u884c\n* \u5de6\u5927\u62ec\u53f7\u540e\u6362\u884c\n* \u53f3\u5927\u62ec\u53f7\u524d\u6362\u884c\n* \u5982\u679c\u53f3\u5927\u62ec\u53f7\u662f\u4e00\u4e2a\u8bed\u53e5\u3001\u51fd\u6570\u4f53\u6216\u7c7b\u7684\u7ec8\u6b62\uff0c\u5219\u53f3\u5927\u62ec\u53f7\u540e\u6362\u884c; \u5426\u5219\u4e0d\u6362\u884c\u3002\u4f8b\u5982\uff0c\u5982\u679c\u53f3\u5927\u62ec\u53f7\u540e\u9762\u662felse\u6216\u9017\u53f7\uff0c\u5219\u4e0d\u6362\u884c\u3002\n\n\u793a\u4f8b\uff1a\n\n```java\n\treturn new MyClass() {\n\t  @Override public void method() {\n\t\tif (condition()) {\n\t\t  try {\n\t\t\tsomething();\n\t\t  } catch (ProblemException e) {\n\t\t\trecover();\n\t\t  }\n\t\t}\n\t  }\n\t};\n```\n\n4.8.1\u8282\u7ed9\u51fa\u4e86enum\u7c7b\u7684\u4e00\u4e9b\u4f8b\u5916\u3002\n\n#### 4.1.3 \u7a7a\u5757\uff1a\u53ef\u4ee5\u7528\u7b80\u6d01\u7248\u672c\n\n\u4e00\u4e2a\u7a7a\u7684\u5757\u72b6\u7ed3\u6784\u91cc\u4ec0\u4e48\u4e5f\u4e0d\u5305\u542b\uff0c\u5927\u62ec\u53f7\u53ef\u4ee5\u7b80\u6d01\u5730\u5199\u6210`{}`\uff0c\u4e0d\u9700\u8981\u6362\u884c\u3002\u4f8b\u5916\uff1a\u5982\u679c\u5b83\u662f\u4e00\u4e2a\u591a\u5757\u8bed\u53e5\u7684\u4e00\u90e8\u5206(if/else \u6216 try/catch/finally)\n\uff0c\u5373\u4f7f\u5927\u62ec\u53f7\u5185\u6ca1\u5185\u5bb9\uff0c\u53f3\u5927\u62ec\u53f7\u4e5f\u8981\u6362\u884c\u3002\n\n\u793a\u4f8b\uff1a\n\n```java\nvoid doNothing() {}\n```\n\n### 4.2 \u5757\u7f29\u8fdb\uff1a2\u4e2a\u7a7a\u683c\n\n\u6bcf\u5f53\u5f00\u59cb\u4e00\u4e2a\u65b0\u7684\u5757\uff0c\u7f29\u8fdb\u589e\u52a02\u4e2a\u7a7a\u683c\uff0c\u5f53\u5757\u7ed3\u675f\u65f6\uff0c\u7f29\u8fdb\u8fd4\u56de\u5148\u524d\u7684\u7f29\u8fdb\u7ea7\u522b\u3002\u7f29\u8fdb\u7ea7\u522b\u9002\u7528\u4e8e\u4ee3\u7801\u548c\u6ce8\u91ca\u3002(\u89c14.1.2\u8282\u4e2d\u7684\u4ee3\u7801\u793a\u4f8b)\n\n### 4.3 \u4e00\u884c\u4e00\u4e2a\u8bed\u53e5\n\n\u6bcf\u4e2a\u8bed\u53e5\u540e\u8981\u6362\u884c\u3002\n\n### 4.4 \u5217\u9650\u5236\uff1a80\u6216100\n\n\u4e00\u4e2a\u9879\u76ee\u53ef\u4ee5\u9009\u62e9\u4e00\u884c80\u4e2a\u5b57\u7b26\u6216100\u4e2a\u5b57\u7b26\u7684\u5217\u9650\u5236\uff0c\u9664\u4e86\u4e0b\u8ff0\u4f8b\u5916\uff0c\u4efb\u4f55\u4e00\u884c\u5982\u679c\u8d85\u8fc7\u8fd9\u4e2a\u5b57\u7b26\u6570\u9650\u5236\uff0c\u5fc5\u987b\u81ea\u52a8\u6362\u884c\u3002\n\n\u4f8b\u5916\uff1a\n\n1. \u4e0d\u53ef\u80fd\u6ee1\u8db3\u5217\u9650\u5236\u7684\u884c(\u4f8b\u5982\uff0cJavadoc\u4e2d\u7684\u4e00\u4e2a\u957fURL\uff0c\u6216\u662f\u4e00\u4e2a\u957f\u7684JSNI\u65b9\u6cd5\u53c2\u8003)\u3002\n1. `package`\u548c`import`\u8bed\u53e5(\u89c13.2\u8282\u548c3.3\u8282)\u3002\n1. \u6ce8\u91ca\u4e2d\u90a3\u4e9b\u53ef\u80fd\u88ab\u526a\u5207\u5e76\u7c98\u8d34\u5230shell\u4e2d\u7684\u547d\u4ee4\u884c\u3002\n\n### 4.5 \u81ea\u52a8\u6362\u884c\n\n**\u672f\u8bed\u8bf4\u660e**\uff1a\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u4e00\u884c\u957f\u4ee3\u7801\u4e3a\u4e86\u907f\u514d\u8d85\u51fa\u5217\u9650\u5236(80\u6216100\u4e2a\u5b57\u7b26)\u800c\u88ab\u5206\u4e3a\u591a\u884c\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a\u81ea\u52a8\u6362\u884c(line-wrapping)\u3002\n\n\u6211\u4eec\u5e76\u6ca1\u6709\u5168\u9762\uff0c\u786e\u5b9a\u6027\u7684\u51c6\u5219\u6765\u51b3\u5b9a\u5728\u6bcf\u4e00\u79cd\u60c5\u51b5\u4e0b\u5982\u4f55\u81ea\u52a8\u6362\u884c\u3002\u5f88\u591a\u65f6\u5019\uff0c\u5bf9\u4e8e\u540c\u4e00\u6bb5\u4ee3\u7801\u4f1a\u6709\u597d\u51e0\u79cd\u6709\u6548\u7684\u81ea\u52a8\u6362\u884c\u65b9\u5f0f\u3002\n\n> Tip: \u63d0\u53d6\u65b9\u6cd5\u6216\u5c40\u90e8\u53d8\u91cf\u53ef\u4ee5\u5728\u4e0d\u6362\u884c\u7684\u60c5\u51b5\u4e0b\u89e3\u51b3\u4ee3\u7801\u8fc7\u957f\u7684\u95ee\u9898(\u662f\u5408\u7406\u7f29\u77ed\u547d\u540d\u957f\u5ea6\u5427)\n\n#### 4.5.1 \u4ece\u54ea\u91cc\u65ad\u5f00\n\n\u81ea\u52a8\u6362\u884c\u7684\u57fa\u672c\u51c6\u5219\u662f\uff1a\u66f4\u503e\u5411\u4e8e\u5728\u66f4\u9ad8\u7684\u8bed\u6cd5\u7ea7\u522b\u5904\u65ad\u5f00\u3002\n\n1. \u5982\u679c\u5728`\u975e\u8d4b\u503c\u8fd0\u7b97\u7b26`\u5904\u65ad\u5f00\uff0c\u90a3\u4e48\u5728\u8be5\u7b26\u53f7\u524d\u65ad\u5f00(\u6bd4\u5982+\uff0c\u5b83\u5c06\u4f4d\u4e8e\u4e0b\u4e00\u884c)\u3002\u6ce8\u610f\uff1a\u8fd9\u4e00\u70b9\u4e0eGoogle\u5176\u5b83\u8bed\u8a00\u7684\u7f16\u7a0b\u98ce\u683c\u4e0d\u540c(\u5982C++\u548cJavaScript)\u3002\n\u8fd9\u6761\u89c4\u5219\u4e5f\u9002\u7528\u4e8e\u4ee5\u4e0b\u201c\u7c7b\u8fd0\u7b97\u7b26\u201d\u7b26\u53f7\uff1a\u70b9\u5206\u9694\u7b26(.)\uff0c\u7c7b\u578b\u754c\u9650\u4e2d\u7684&\uff08`<T extends Foo & Bar>`)\uff0ccatch\u5757\u4e2d\u7684\u7ba1\u9053\u7b26\u53f7(`catch (FooException | BarException e`)\n1. \u5982\u679c\u5728`\u8d4b\u503c\u8fd0\u7b97\u7b26`\u5904\u65ad\u5f00\uff0c\u901a\u5e38\u7684\u505a\u6cd5\u662f\u5728\u8be5\u7b26\u53f7\u540e\u65ad\u5f00(\u6bd4\u5982=\uff0c\u5b83\u4e0e\u524d\u9762\u7684\u5185\u5bb9\u7559\u5728\u540c\u4e00\u884c)\u3002\u8fd9\u6761\u89c4\u5219\u4e5f\u9002\u7528\u4e8e`foreach`\u8bed\u53e5\u4e2d\u7684\u5206\u53f7\u3002\n1. \u65b9\u6cd5\u540d\u6216\u6784\u9020\u51fd\u6570\u540d\u4e0e\u5de6\u62ec\u53f7\u7559\u5728\u540c\u4e00\u884c\u3002\n1. \u9017\u53f7(,)\u4e0e\u5176\u524d\u9762\u7684\u5185\u5bb9\u7559\u5728\u540c\u4e00\u884c\u3002\n\n#### 4.5.2 \u81ea\u52a8\u6362\u884c\u65f6\u7f29\u8fdb\u81f3\u5c11+4\u4e2a\u7a7a\u683c\n\n\u81ea\u52a8\u6362\u884c\u65f6\uff0c\u7b2c\u4e00\u884c\u540e\u7684\u6bcf\u4e00\u884c\u81f3\u5c11\u6bd4\u7b2c\u4e00\u884c\u591a\u7f29\u8fdb4\u4e2a\u7a7a\u683c(\u6ce8\u610f\uff1a\u5236\u8868\u7b26\u4e0d\u7528\u4e8e\u7f29\u8fdb\u3002\u89c12.3.1\u8282)\u3002\n\n\u5f53\u5b58\u5728\u8fde\u7eed\u81ea\u52a8\u6362\u884c\u65f6\uff0c\u7f29\u8fdb\u53ef\u80fd\u4f1a\u591a\u7f29\u8fdb\u4e0d\u53ea4\u4e2a\u7a7a\u683c(\u8bed\u6cd5\u5143\u7d20\u5b58\u5728\u591a\u7ea7\u65f6)\u3002\u4e00\u822c\u800c\u8a00\uff0c\u4e24\u4e2a\u8fde\u7eed\u884c\u4f7f\u7528\u76f8\u540c\u7684\u7f29\u8fdb\u5f53\u4e14\u4ec5\u5f53\u5b83\u4eec\u5f00\u59cb\u4e8e\u540c\u7ea7\u8bed\u6cd5\u5143\u7d20\u3002\n\n\u7b2c4.6.3\u6c34\u5e73\u5bf9\u9f50\u4e00\u8282\u4e2d\u6307\u51fa\uff0c\u4e0d\u9f13\u52b1\u4f7f\u7528\u53ef\u53d8\u6570\u76ee\u7684\u7a7a\u683c\u6765\u5bf9\u9f50\u524d\u9762\u884c\u7684\u7b26\u53f7\u3002\n\n### 4.6 \u7a7a\u767d\n\n#### 4.6.1 \u5782\u76f4\u7a7a\u767d\n\n\u4ee5\u4e0b\u60c5\u51b5\u9700\u8981\u4f7f\u7528\u4e00\u4e2a\u7a7a\u884c\uff1a\n\n1. \u7c7b\u5185\u8fde\u7eed\u7684\u6210\u5458\u4e4b\u95f4\uff1a\u5b57\u6bb5\uff0c\u6784\u9020\u51fd\u6570\uff0c\u65b9\u6cd5\uff0c\u5d4c\u5957\u7c7b\uff0c\u9759\u6001\u521d\u59cb\u5316\u5757\uff0c\u5b9e\u4f8b\u521d\u59cb\u5316\u5757\u3002\n    - **\u4f8b\u5916**\uff1a\u4e24\u4e2a\u8fde\u7eed\u5b57\u6bb5\u4e4b\u95f4\u7684\u7a7a\u884c\u662f\u53ef\u9009\u7684\uff0c\u7528\u4e8e\u5b57\u6bb5\u7684\u7a7a\u884c\u4e3b\u8981\u7528\u6765\u5bf9\u5b57\u6bb5\u8fdb\u884c\u903b\u8f91\u5206\u7ec4\u3002\n1. \u5728\u51fd\u6570\u4f53\u5185\uff0c\u8bed\u53e5\u7684\u903b\u8f91\u5206\u7ec4\u95f4\u4f7f\u7528\u7a7a\u884c\u3002\n1. \u7c7b\u5185\u7684\u7b2c\u4e00\u4e2a\u6210\u5458\u524d\u6216\u6700\u540e\u4e00\u4e2a\u6210\u5458\u540e\u7684\u7a7a\u884c\u662f\u53ef\u9009\u7684(\u65e2\u4e0d\u9f13\u52b1\u4e5f\u4e0d\u53cd\u5bf9\u8fd9\u6837\u505a\uff0c\u89c6\u4e2a\u4eba\u559c\u597d\u800c\u5b9a)\u3002\n1. \u8981\u6ee1\u8db3\u672c\u6587\u6863\u4e2d\u5176\u4ed6\u8282\u7684\u7a7a\u884c\u8981\u6c42(\u6bd4\u59823.3\u8282\uff1aimport\u8bed\u53e5)\n\n\u591a\u4e2a\u8fde\u7eed\u7684\u7a7a\u884c\u662f\u5141\u8bb8\u7684\uff0c\u4f46\u6ca1\u6709\u5fc5\u8981\u8fd9\u6837\u505a(\u6211\u4eec\u4e5f\u4e0d\u9f13\u52b1\u8fd9\u6837\u505a)\u3002\n\n#### 4.6.2 \u6c34\u5e73\u7a7a\u767d\n\n\u9664\u4e86\u8bed\u8a00\u9700\u6c42\u548c\u5176\u5b83\u89c4\u5219\uff0c\u5e76\u4e14\u9664\u4e86\u6587\u5b57\uff0c\u6ce8\u91ca\u548cJavadoc\u7528\u5230\u5355\u4e2a\u7a7a\u683c\uff0c\u5355\u4e2aASCII\u7a7a\u683c\u4e5f\u51fa\u73b0\u5728\u4ee5\u4e0b\u51e0\u4e2a\u5730\u65b9\uff1a\n\n1. \u5206\u9694\u4efb\u4f55\u4fdd\u7559\u5b57\u4e0e\u7d27\u968f\u5176\u540e\u7684\u5de6\u62ec\u53f7(`(`)(\u5982`if, for catch`\u7b49)\u3002\n1. \u5206\u9694\u4efb\u4f55\u4fdd\u7559\u5b57\u4e0e\u5176\u524d\u9762\u7684\u53f3\u5927\u62ec\u53f7(`}`)(\u5982`else, catch`)\u3002\n1. \u5728\u4efb\u4f55\u5de6\u5927\u62ec\u53f7\u524d(`{`)\uff0c\u4e24\u4e2a\u4f8b\u5916\uff1a\n    - `@SomeAnnotation({a, b})`(\u4e0d\u4f7f\u7528\u7a7a\u683c)\u3002\n    - `String[][] x = {{\"foo\"}};`(\u5927\u62ec\u53f7\u95f4\u6ca1\u6709\u7a7a\u683c\uff0c\u89c1\u4e0b\u9762\u7684Note)\u3002\n1. \u5728\u4efb\u4f55\u4e8c\u5143\u6216\u4e09\u5143\u8fd0\u7b97\u7b26\u7684\u4e24\u4fa7\u3002\u8fd9\u4e5f\u9002\u7528\u4e8e\u4ee5\u4e0b\u201c\u7c7b\u8fd0\u7b97\u7b26\u201d\u7b26\u53f7\uff1a\n    - \u7c7b\u578b\u754c\u9650\u4e2d\u7684&(`<T extends Foo & Bar>`)\u3002\n    - catch\u5757\u4e2d\u7684\u7ba1\u9053\u7b26\u53f7(`catch (FooException | BarException e`)\u3002\n    - `foreach`\u8bed\u53e5\u4e2d\u7684\u5206\u53f7\u3002\n1. \u5728`, : ;`\u53ca\u53f3\u62ec\u53f7(`)`)\u540e\n1. \u5982\u679c\u5728\u4e00\u6761\u8bed\u53e5\u540e\u505a\u6ce8\u91ca\uff0c\u5219\u53cc\u659c\u6760(//)\u4e24\u8fb9\u90fd\u8981\u7a7a\u683c\u3002\u8fd9\u91cc\u53ef\u4ee5\u5141\u8bb8\u591a\u4e2a\u7a7a\u683c\uff0c\u4f46\u6ca1\u6709\u5fc5\u8981\u3002\n1. \u7c7b\u578b\u548c\u53d8\u91cf\u4e4b\u95f4\uff1aList<String> list\u3002\n1. \u6570\u7ec4\u521d\u59cb\u5316\u4e2d\uff0c\u5927\u62ec\u53f7\u5185\u7684\u7a7a\u683c\u662f\u53ef\u9009\u7684\uff0c\u5373`new int[] {5, 6}`\u548c`new int[] { 5, 6 }`\u90fd\u662f\u53ef\u4ee5\u7684\u3002\n\n> Note\uff1a\u8fd9\u4e2a\u89c4\u5219\u5e76\u4e0d\u8981\u6c42\u6216\u7981\u6b62\u4e00\u884c\u7684\u5f00\u5173\u6216\u7ed3\u5c3e\u9700\u8981\u989d\u5916\u7684\u7a7a\u683c\uff0c\u53ea\u5bf9\u5185\u90e8\u7a7a\u683c\u505a\u8981\u6c42\u3002\n\n#### 4.6.3 \u6c34\u5e73\u5bf9\u9f50\uff1a\u4e0d\u505a\u8981\u6c42\n\n**\u672f\u8bed\u8bf4\u660e**\uff1a\u6c34\u5e73\u5bf9\u9f50\u6307\u7684\u662f\u901a\u8fc7\u589e\u52a0\u53ef\u53d8\u6570\u91cf\u7684\u7a7a\u683c\u6765\u4f7f\u67d0\u4e00\u884c\u7684\u5b57\u7b26\u4e0e\u4e0a\u4e00\u884c\u7684\u76f8\u5e94\u5b57\u7b26\u5bf9\u9f50\u3002\n\n\u8fd9\u662f\u5141\u8bb8\u7684(\u800c\u4e14\u5728\u4e0d\u5c11\u5730\u65b9\u53ef\u4ee5\u770b\u5230\u8fd9\u6837\u7684\u4ee3\u7801)\uff0c\u4f46Google\u7f16\u7a0b\u98ce\u683c\u5bf9\u6b64\u4e0d\u505a\u8981\u6c42\u3002\u5373\u4f7f\u5bf9\u4e8e\u5df2\u7ecf\u4f7f\u7528\u6c34\u5e73\u5bf9\u9f50\u7684\u4ee3\u7801\uff0c\u6211\u4eec\u4e5f\u4e0d\u9700\u8981\u53bb\u4fdd\u6301\u8fd9\u79cd\u98ce\u683c\u3002\n\n\u4ee5\u4e0b\u793a\u4f8b\u5148\u5c55\u793a\u672a\u5bf9\u9f50\u7684\u4ee3\u7801\uff0c\u7136\u540e\u662f\u5bf9\u9f50\u7684\u4ee3\u7801\uff1a\n\n```java\nprivate int x; // this is fine\nprivate Color color; // this too\n\nprivate int   x;      // permitted, but future edits\nprivate Color color;  // may leave it unaligned\n```\n\n> Tip\uff1a\u5bf9\u9f50\u53ef\u589e\u52a0\u4ee3\u7801\u53ef\u8bfb\u6027\uff0c\u4f46\u5b83\u4e3a\u65e5\u540e\u7684\u7ef4\u62a4\u5e26\u6765\u95ee\u9898\u3002\u8003\u8651\u672a\u6765\u67d0\u4e2a\u65f6\u5019\uff0c\u6211\u4eec\u9700\u8981\u4fee\u6539\u4e00\u5806\u5bf9\u9f50\u7684\u4ee3\u7801\u4e2d\u7684\u4e00\u884c\u3002\n\u8fd9\u53ef\u80fd\u5bfc\u81f4\u539f\u672c\u5f88\u6f02\u4eae\u7684\u5bf9\u9f50\u4ee3\u7801\u53d8\u5f97\u9519\u4f4d\u3002\u5f88\u53ef\u80fd\u5b83\u4f1a\u63d0\u793a\u4f60\u8c03\u6574\u5468\u56f4\u4ee3\u7801\u7684\u7a7a\u767d\u6765\u4f7f\u8fd9\u4e00\u5806\u4ee3\u7801\u91cd\u65b0\u6c34\u5e73\u5bf9\u9f50(\u6bd4\u5982\u7a0b\u5e8f\u5458\u60f3\u4fdd\u6301\u8fd9\u79cd\u6c34\u5e73\u5bf9\u9f50\u7684\u98ce\u683c)\uff0c\n\u8fd9\u5c31\u4f1a\u8ba9\u4f60\u505a\u8bb8\u591a\u7684\u65e0\u7528\u529f\uff0c\u589e\u52a0\u4e86reviewer\u7684\u5de5\u4f5c\u5e76\u4e14\u53ef\u80fd\u5bfc\u81f4\u66f4\u591a\u7684\u5408\u5e76\u51b2\u7a81\u3002\n\n### 4.7 \u7528\u5c0f\u62ec\u53f7\u6765\u9650\u5b9a\u7ec4\uff1a\u63a8\u8350\n\n\u9664\u975e\u4f5c\u8005\u548creviewer\u90fd\u8ba4\u4e3a\u53bb\u6389\u5c0f\u62ec\u53f7\u4e5f\u4e0d\u4f1a\u4f7f\u4ee3\u7801\u88ab\u8bef\u89e3\uff0c\u6216\u662f\u53bb\u6389\u5c0f\u62ec\u53f7\u80fd\u8ba9\u4ee3\u7801\u66f4\u6613\u4e8e\u9605\u8bfb\uff0c\u5426\u5219\u6211\u4eec\u4e0d\u5e94\u8be5\u53bb\u6389\u5c0f\u62ec\u53f7\u3002\n\u6211\u4eec\u6ca1\u6709\u7406\u7531\u5047\u8bbe\u8bfb\u8005\u80fd\u8bb0\u4f4f\u6574\u4e2aJava\u8fd0\u7b97\u7b26\u4f18\u5148\u7ea7\u8868\u3002\n\n### 4.8 \u5177\u4f53\u7ed3\u6784\n\n#### 4.8.1 \u679a\u4e3e\u7c7b\n\n\u679a\u4e3e\u5e38\u91cf\u95f4\u7528\u9017\u53f7\u9694\u5f00\uff0c\u6362\u884c\u53ef\u9009\u3002\n\n\u6ca1\u6709\u65b9\u6cd5\u548c\u6587\u6863\u7684\u679a\u4e3e\u7c7b\u53ef\u5199\u6210\u6570\u7ec4\u521d\u59cb\u5316\u7684\u683c\u5f0f\uff1a\n\n```java\nprivate enum Suit { CLUBS, HEARTS, SPADES, DIAMONDS }\n```\n\n\u7531\u4e8e\u679a\u4e3e\u7c7b\u4e5f\u662f\u4e00\u4e2a\u7c7b\uff0c\u56e0\u6b64\u6240\u6709\u9002\u7528\u4e8e\u5176\u5b83\u7c7b\u7684\u683c\u5f0f\u89c4\u5219\u4e5f\u9002\u7528\u4e8e\u679a\u4e3e\u7c7b\u3002\n\n#### 4.8.2 \u53d8\u91cf\u58f0\u660e\n\n##### 4.8.2.1 \u6bcf\u6b21\u53ea\u58f0\u660e\u4e00\u4e2a\u53d8\u91cf\n\n\u4e0d\u8981\u4f7f\u7528\u7ec4\u5408\u58f0\u660e\uff0c\u6bd4\u5982`int a, b;`\u3002\n\n##### 4.8.2.2 \u9700\u8981\u65f6\u624d\u58f0\u660e\uff0c\u5e76\u5c3d\u5feb\u8fdb\u884c\u521d\u59cb\u5316\n\n\u4e0d\u8981\u5728\u4e00\u4e2a\u4ee3\u7801\u5757\u7684\u5f00\u5934\u628a\u5c40\u90e8\u53d8\u91cf\u4e00\u6b21\u6027\u90fd\u58f0\u660e\u4e86(\u8fd9\u662fc\u8bed\u8a00\u7684\u505a\u6cd5)\uff0c\u800c\u662f\u5728\u7b2c\u4e00\u6b21\u9700\u8981\u4f7f\u7528\u5b83\u65f6\u624d\u58f0\u660e\u3002\n\u5c40\u90e8\u53d8\u91cf\u5728\u58f0\u660e\u65f6\u6700\u597d\u5c31\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u6216\u8005\u58f0\u660e\u540e\u5c3d\u5feb\u8fdb\u884c\u521d\u59cb\u5316\u3002\n\n#### 4.8.3 \u6570\u7ec4\n\n##### 4.8.3.1 \u6570\u7ec4\u521d\u59cb\u5316\uff1a\u53ef\u5199\u6210\u5757\u72b6\u7ed3\u6784\n\n\u6570\u7ec4\u521d\u59cb\u5316\u53ef\u4ee5\u5199\u6210\u5757\u72b6\u7ed3\u6784\uff0c\u6bd4\u5982\uff0c\u4e0b\u9762\u7684\u5199\u6cd5\u90fd\u662fOK\u7684\uff1a\n\n```java\nnew int[] {\n  0, 1, 2, 3\n}\n\nnew int[] {\n  0,\n  1,\n  2,\n  3\n}\n\nnew int[] {\n  0, 1,\n  2, 3\n}\n\nnew int[]\n    {0, 1, 2, 3}\n```\n\n##### 4.8.3.2 \u975eC\u98ce\u683c\u7684\u6570\u7ec4\u58f0\u660e\n\n\u4e2d\u62ec\u53f7\u662f\u7c7b\u578b\u7684\u4e00\u90e8\u5206\uff1a`String[] args`\uff0c \u800c\u975e`String args[]`\u3002\n\n#### 4.8.4 switch\u8bed\u53e5\n\n**\u672f\u8bed\u8bf4\u660e**\uff1aswitch\u5757\u7684\u5927\u62ec\u53f7\u5185\u662f\u4e00\u4e2a\u6216\u591a\u4e2a\u8bed\u53e5\u7ec4\u3002\u6bcf\u4e2a\u8bed\u53e5\u7ec4\u5305\u542b\u4e00\u4e2a\u6216\u591a\u4e2aswitch\u6807\u7b7e(`case FOO:`\u6216`default:`)\uff0c\u540e\u9762\u8ddf\u7740\u4e00\u6761\u6216\u591a\u6761\u8bed\u53e5\u3002\n\n##### 4.8.4.1 \u7f29\u8fdb\n\n\u4e0e\u5176\u5b83\u5757\u72b6\u7ed3\u6784\u4e00\u81f4\uff0cswitch\u5757\u4e2d\u7684\u5185\u5bb9\u7f29\u8fdb\u4e3a2\u4e2a\u7a7a\u683c\u3002\n\n\u6bcf\u4e2aswitch\u6807\u7b7e\u540e\u65b0\u8d77\u4e00\u884c\uff0c\u518d\u7f29\u8fdb2\u4e2a\u7a7a\u683c\uff0c\u5199\u4e0b\u4e00\u6761\u6216\u591a\u6761\u8bed\u53e5\u3002\n\n##### 4.8.4.2 Fall-through\uff1a\u6ce8\u91ca\n\n\u5728\u4e00\u4e2aswitch\u5757\u5185\uff0c\u6bcf\u4e2a\u8bed\u53e5\u7ec4\u8981\u4e48\u901a\u8fc7`break, continue, return`\u6216\u629b\u51fa\u5f02\u5e38\u6765\u7ec8\u6b62\uff0c\u8981\u4e48\u901a\u8fc7\u4e00\u6761\u6ce8\u91ca\u6765\u8bf4\u660e\u7a0b\u5e8f\u5c06\u7ee7\u7eed\u6267\u884c\u5230\u4e0b\u4e00\u4e2a\u8bed\u53e5\u7ec4\uff0c\n\u4efb\u4f55\u80fd\u8868\u8fbe\u8fd9\u4e2a\u610f\u601d\u7684\u6ce8\u91ca\u90fd\u662fOK\u7684(\u5178\u578b\u7684\u662f\u7528`// fall through`)\u3002\u8fd9\u4e2a\u7279\u6b8a\u7684\u6ce8\u91ca\u5e76\u4e0d\u9700\u8981\u5728\u6700\u540e\u4e00\u4e2a\u8bed\u53e5\u7ec4(\u4e00\u822c\u662f`default`)\u4e2d\u51fa\u73b0\u3002\u793a\u4f8b\uff1a\n\n```java\nswitch (input) {\n  case 1:\n  case 2:\n    prepareOneOrTwo();\n    // fall through\n  case 3:\n    handleOneTwoOrThree();\n    break;\n  default:\n    handleLargeNumber(input);\n}\n```\n\n##### 4.8.4.3 default\u7684\u60c5\u51b5\u8981\u5199\u51fa\u6765\n\n\u6bcf\u4e2aswitch\u8bed\u53e5\u90fd\u5305\u542b\u4e00\u4e2a`default`\u8bed\u53e5\u7ec4\uff0c\u5373\u4f7f\u5b83\u4ec0\u4e48\u4ee3\u7801\u4e5f\u4e0d\u5305\u542b\u3002\n\n#### 4.8.5 \u6ce8\u89e3(Annotations)\n\n\u6ce8\u89e3\u7d27\u8ddf\u5728\u6587\u6863\u5757\u540e\u9762\uff0c\u5e94\u7528\u4e8e\u7c7b\u3001\u65b9\u6cd5\u548c\u6784\u9020\u51fd\u6570\uff0c\u4e00\u4e2a\u6ce8\u89e3\u72ec\u5360\u4e00\u884c\u3002\u8fd9\u4e9b\u6362\u884c\u4e0d\u5c5e\u4e8e\u81ea\u52a8\u6362\u884c(\u7b2c4.5\u8282\uff0c\u81ea\u52a8\u6362\u884c)\uff0c\u56e0\u6b64\u7f29\u8fdb\u7ea7\u522b\u4e0d\u53d8\u3002\u4f8b\u5982\uff1a\n\n```java\n@Override\n@Nullable\npublic String getNameIfPresent() { ... }\n```\n\n**\u4f8b\u5916**\uff1a\u5355\u4e2a\u7684\u6ce8\u89e3\u53ef\u4ee5\u548c\u7b7e\u540d\u7684\u7b2c\u4e00\u884c\u51fa\u73b0\u5728\u540c\u4e00\u884c\u3002\u4f8b\u5982\uff1a\n\n```java\n@Override public int hashCode() { ... }\n```\n\n\u5e94\u7528\u4e8e\u5b57\u6bb5\u7684\u6ce8\u89e3\u7d27\u968f\u6587\u6863\u5757\u51fa\u73b0\uff0c\u5e94\u7528\u4e8e\u5b57\u6bb5\u7684\u591a\u4e2a\u6ce8\u89e3\u5141\u8bb8\u4e0e\u5b57\u6bb5\u51fa\u73b0\u5728\u540c\u4e00\u884c\u3002\u4f8b\u5982\uff1a\n\n```java\n@Partial @Mock DataLoader loader;\n```\n\n\u53c2\u6570\u548c\u5c40\u90e8\u53d8\u91cf\u6ce8\u89e3\u6ca1\u6709\u7279\u5b9a\u89c4\u5219\u3002\n\n#### 4.8.6 \u6ce8\u91ca\n\n##### 4.8.6.1 \u5757\u6ce8\u91ca\u98ce\u683c\n\n\u5757\u6ce8\u91ca\u4e0e\u5176\u5468\u56f4\u7684\u4ee3\u7801\u5728\u540c\u4e00\u7f29\u8fdb\u7ea7\u522b\u3002\u5b83\u4eec\u53ef\u4ee5\u662f`/* ... */`\u98ce\u683c\uff0c\u4e5f\u53ef\u4ee5\u662f`// ...`\u98ce\u683c\u3002\u5bf9\u4e8e\u591a\u884c\u7684`/* ... */`\u6ce8\u91ca\uff0c\u540e\u7eed\u884c\u5fc5\u987b\u4ece`*`\u5f00\u59cb\uff0c\n\u5e76\u4e14\u4e0e\u524d\u4e00\u884c\u7684`*`\u5bf9\u9f50\u3002\u4ee5\u4e0b\u793a\u4f8b\u6ce8\u91ca\u90fd\u662fOK\u7684\u3002\n\n```java\n/*\n * This is          // And so           /* Or you can\n * okay.            // is this.          * even do this. */\n */\n```\n\n\u6ce8\u91ca\u4e0d\u8981\u5c01\u95ed\u5728\u7531\u661f\u53f7\u6216\u5176\u5b83\u5b57\u7b26\u7ed8\u5236\u7684\u6846\u67b6\u91cc\u3002\n\n> Tip\uff1a\u5728\u5199\u591a\u884c\u6ce8\u91ca\u65f6\uff0c\u5982\u679c\u4f60\u5e0c\u671b\u5728\u5fc5\u8981\u65f6\u80fd\u91cd\u65b0\u6362\u884c(\u5373\u6ce8\u91ca\u50cf\u6bb5\u843d\u98ce\u683c\u4e00\u6837)\uff0c\u90a3\u4e48\u4f7f\u7528`/* ... */`\u3002\n\n#### 4.8.7 Modifiers\n\n\u7c7b\u548c\u6210\u5458\u7684modifiers\u5982\u679c\u5b58\u5728\uff0c\u5219\u6309Java\u8bed\u8a00\u89c4\u8303\u4e2d\u63a8\u8350\u7684\u987a\u5e8f\u51fa\u73b0\u3002\n\n```java\npublic protected private abstract static final transient volatile synchronized native strictfp\n```\n\n## <a id=\"Naming\">\u547d\u540d\u7ea6\u5b9a</a>\n\n### 5.1 \u5bf9\u6240\u6709\u6807\u8bc6\u7b26\u90fd\u901a\u7528\u7684\u89c4\u5219\n\n\u6807\u8bc6\u7b26\u53ea\u80fd\u4f7f\u7528ASCII\u5b57\u6bcd\u548c\u6570\u5b57\uff0c\u56e0\u6b64\u6bcf\u4e2a\u6709\u6548\u7684\u6807\u8bc6\u7b26\u540d\u79f0\u90fd\u80fd\u5339\u914d\u6b63\u5219\u8868\u8fbe\u5f0f`\\w+`\u3002\n\n\u5728Google\u5176\u5b83\u7f16\u7a0b\u8bed\u8a00\u98ce\u683c\u4e2d\u4f7f\u7528\u7684\u7279\u6b8a\u524d\u7f00\u6216\u540e\u7f00\uff0c\u5982`name_`, `mName`, `s_name`\u548c`kName`\uff0c\u5728Java\u7f16\u7a0b\u98ce\u683c\u4e2d\u90fd\u4e0d\u518d\u4f7f\u7528\u3002\n\n### 5.2 \u6807\u8bc6\u7b26\u7c7b\u578b\u7684\u89c4\u5219\n\n#### 5.2.1 \u5305\u540d\n\n\u5305\u540d\u5168\u90e8\u5c0f\u5199\uff0c\u8fde\u7eed\u7684\u5355\u8bcd\u53ea\u662f\u7b80\u5355\u5730\u8fde\u63a5\u8d77\u6765\uff0c\u4e0d\u4f7f\u7528\u4e0b\u5212\u7ebf\u3002\n\n#### 5.2.2 \u7c7b\u540d\n\n\u7c7b\u540d\u90fd\u4ee5`UpperCamelCase`\u98ce\u683c\u7f16\u5199\u3002\n\n\u7c7b\u540d\u901a\u5e38\u662f\u540d\u8bcd\u6216\u540d\u8bcd\u77ed\u8bed\uff0c\u63a5\u53e3\u540d\u79f0\u6709\u65f6\u53ef\u80fd\u662f\u5f62\u5bb9\u8bcd\u6216\u5f62\u5bb9\u8bcd\u77ed\u8bed\u3002\u73b0\u5728\u8fd8\u6ca1\u6709\u7279\u5b9a\u7684\u89c4\u5219\u6216\u884c\u4e4b\u6709\u6548\u7684\u7ea6\u5b9a\u6765\u547d\u540d\u6ce8\u89e3\u7c7b\u578b\u3002\n\n\u6d4b\u8bd5\u7c7b\u7684\u547d\u540d\u4ee5\u5b83\u8981\u6d4b\u8bd5\u7684\u7c7b\u7684\u540d\u79f0\u5f00\u59cb\uff0c\u4ee5`Test`\u7ed3\u675f\u3002\u4f8b\u5982\uff0c`HashTest`\u6216`HashIntegrationTest`\u3002\n\n#### 5.2.3 \u65b9\u6cd5\u540d\n\n\u65b9\u6cd5\u540d\u90fd\u4ee5`lowerCamelCase`\u98ce\u683c\u7f16\u5199\u3002\n\n\u65b9\u6cd5\u540d\u901a\u5e38\u662f\u52a8\u8bcd\u6216\u52a8\u8bcd\u77ed\u8bed\u3002\n\n\u4e0b\u5212\u7ebf\u53ef\u80fd\u51fa\u73b0\u5728JUnit\u6d4b\u8bd5\u65b9\u6cd5\u540d\u79f0\u4e2d\u7528\u4ee5\u5206\u9694\u540d\u79f0\u7684\u903b\u8f91\u7ec4\u4ef6\u3002\u4e00\u4e2a\u5178\u578b\u7684\u6a21\u5f0f\u662f\uff1a`test<MethodUnderTest>_<state>`\uff0c\u4f8b\u5982`testPop_emptyStack`\u3002\n\u5e76\u4e0d\u5b58\u5728\u552f\u4e00\u6b63\u786e\u7684\u65b9\u5f0f\u6765\u547d\u540d\u6d4b\u8bd5\u65b9\u6cd5\u3002\n\n#### 5.2.4 \u5e38\u91cf\u540d\n\n\u5e38\u91cf\u540d\u547d\u540d\u6a21\u5f0f\u4e3a`CONSTANT_CASE`\uff0c\u5168\u90e8\u5b57\u6bcd\u5927\u5199\uff0c\u7528\u4e0b\u5212\u7ebf\u5206\u9694\u5355\u8bcd\u3002\u90a3\uff0c\u5230\u5e95\u4ec0\u4e48\u7b97\u662f\u4e00\u4e2a\u5e38\u91cf\uff1f\n\n\u6bcf\u4e2a\u5e38\u91cf\u90fd\u662f\u4e00\u4e2a\u9759\u6001final\u5b57\u6bb5\uff0c\u4f46\u4e0d\u662f\u6240\u6709\u9759\u6001final\u5b57\u6bb5\u90fd\u662f\u5e38\u91cf\u3002\u5728\u51b3\u5b9a\u4e00\u4e2a\u5b57\u6bb5\u662f\u5426\u662f\u4e00\u4e2a\u5e38\u91cf\u65f6\uff0c\n\u8003\u8651\u5b83\u662f\u5426\u771f\u7684\u611f\u89c9\u50cf\u662f\u4e00\u4e2a\u5e38\u91cf\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4efb\u4f55\u4e00\u4e2a\u8be5\u5b9e\u4f8b\u7684\u89c2\u6d4b\u72b6\u6001\u662f\u53ef\u53d8\u7684\uff0c\u5219\u5b83\u51e0\u4e4e\u80af\u5b9a\u4e0d\u4f1a\u662f\u4e00\u4e2a\u5e38\u91cf\u3002\n\u53ea\u662f\u6c38\u8fdc\u4e0d`\u6253\u7b97`\u6539\u53d8\u5bf9\u8c61\u4e00\u822c\u662f\u4e0d\u591f\u7684\uff0c\u5b83\u8981\u771f\u7684\u4e00\u76f4\u4e0d\u53d8\u624d\u80fd\u5c06\u5b83\u793a\u4e3a\u5e38\u91cf\u3002\n\n```java\n// Constants\nstatic final int NUMBER = 5;\nstatic final ImmutableList<String> NAMES = ImmutableList.of(\"Ed\", \"Ann\");\nstatic final Joiner COMMA_JOINER = Joiner.on(',');  // because Joiner is immutable\nstatic final SomeMutableType[] EMPTY_ARRAY = {};\nenum SomeEnum { ENUM_CONSTANT }\n\n// Not constants\nstatic String nonFinal = \"non-final\";\nfinal String nonStatic = \"non-static\";\nstatic final Set<String> mutableCollection = new HashSet<String>();\nstatic final ImmutableSet<SomeMutableType> mutableElements = ImmutableSet.of(mutable);\nstatic final Logger logger = Logger.getLogger(MyClass.getName());\nstatic final String[] nonEmptyArray = {\"these\", \"can\", \"change\"};\n```\n\n\u8fd9\u4e9b\u540d\u5b57\u901a\u5e38\u662f\u540d\u8bcd\u6216\u540d\u8bcd\u77ed\u8bed\u3002\n\n#### 5.2.5 \u975e\u5e38\u91cf\u5b57\u6bb5\u540d\n\n\u975e\u5e38\u91cf\u5b57\u6bb5\u540d\u4ee5`lowerCamelCase`\u98ce\u683c\u7f16\u5199\u3002\n\n\u8fd9\u4e9b\u540d\u5b57\u901a\u5e38\u662f\u540d\u8bcd\u6216\u540d\u8bcd\u77ed\u8bed\u3002\n\n#### 5.2.6 \u53c2\u6570\u540d\n\n\u53c2\u6570\u540d\u4ee5`lowerCamelCase`\u98ce\u683c\u7f16\u5199\u3002\n\n\u53c2\u6570\u5e94\u8be5\u907f\u514d\u7528\u5355\u4e2a\u5b57\u7b26\u547d\u540d\u3002\n\n#### 5.2.7 \u5c40\u90e8\u53d8\u91cf\u540d\n\n\u5c40\u90e8\u53d8\u91cf\u540d\u4ee5`lowerCamelCase`\u98ce\u683c\u7f16\u5199\uff0c\u6bd4\u8d77\u5176\u5b83\u7c7b\u578b\u7684\u540d\u79f0\uff0c\u5c40\u90e8\u53d8\u91cf\u540d\u53ef\u4ee5\u6709\u66f4\u4e3a\u5bbd\u677e\u7684\u7f29\u5199\u3002\n\n\u867d\u7136\u7f29\u5199\u66f4\u5bbd\u677e\uff0c\u4f46\u8fd8\u662f\u8981\u907f\u514d\u7528\u5355\u5b57\u7b26\u8fdb\u884c\u547d\u540d\uff0c\u9664\u4e86\u4e34\u65f6\u53d8\u91cf\u548c\u5faa\u73af\u53d8\u91cf\u3002\n\n\u5373\u4f7f\u5c40\u90e8\u53d8\u91cf\u662ffinal\u548c\u4e0d\u53ef\u6539\u53d8\u7684\uff0c\u4e5f\u4e0d\u5e94\u8be5\u628a\u5b83\u793a\u4e3a\u5e38\u91cf\uff0c\u81ea\u7136\u4e5f\u4e0d\u80fd\u7528\u5e38\u91cf\u7684\u89c4\u5219\u53bb\u547d\u540d\u5b83\u3002\n\n#### 5.2.8 \u7c7b\u578b\u53d8\u91cf\u540d\n\n\u7c7b\u578b\u53d8\u91cf\u53ef\u7528\u4ee5\u4e0b\u4e24\u79cd\u98ce\u683c\u4e4b\u4e00\u8fdb\u884c\u547d\u540d\uff1a\n\n* \u5355\u4e2a\u7684\u5927\u5199\u5b57\u6bcd\uff0c\u540e\u9762\u53ef\u4ee5\u8ddf\u4e00\u4e2a\u6570\u5b57(\u5982\uff1aE, T, X, T2)\u3002\n* \u4ee5\u7c7b\u547d\u540d\u65b9\u5f0f(5.2.2\u8282)\uff0c\u540e\u9762\u52a0\u4e2a\u5927\u5199\u7684T(\u5982\uff1aRequestT, FooBarT)\u3002\n\n### 5.3 \u9a7c\u5cf0\u5f0f\u547d\u540d\u6cd5(CamelCase)\n\n[\u9a7c\u5cf0\u5f0f\u547d\u540d\u6cd5](http://zh.wikipedia.org/wiki/%E9%A7%9D%E5%B3%B0%E5%BC%8F%E5%A4%A7%E5%B0%8F%E5%AF%AB)\u5206\u5927\u9a7c\u5cf0\u5f0f\u547d\u540d\u6cd5(`UpperCamelCase`)\u548c\u5c0f\u9a7c\u5cf0\u5f0f\u547d\u540d\u6cd5(`lowerCamelCase`)\u3002\n\u6709\u65f6\uff0c\u6211\u4eec\u6709\u4e0d\u53ea\u4e00\u79cd\u5408\u7406\u7684\u65b9\u5f0f\u5c06\u4e00\u4e2a\u82f1\u8bed\u8bcd\u7ec4\u8f6c\u6362\u6210\u9a7c\u5cf0\u5f62\u5f0f\uff0c\u5982\u7f29\u7565\u8bed\u6216\u4e0d\u5bfb\u5e38\u7684\u7ed3\u6784(\u4f8b\u5982\"IPv6\"\u6216\"iOS\")\u3002Google\u6307\u5b9a\u4e86\u4ee5\u4e0b\u7684\u8f6c\u6362\u65b9\u6848\u3002\n\n\u540d\u5b57\u4ece`\u6563\u6587\u5f62\u5f0f`(prose form)\u5f00\u59cb:\n\n1. \u628a\u77ed\u8bed\u8f6c\u6362\u4e3a\u7eafASCII\u7801\uff0c\u5e76\u4e14\u79fb\u9664\u4efb\u4f55\u5355\u5f15\u53f7\u3002\u4f8b\u5982\uff1a\"M\u00fcller's algorithm\"\u5c06\u53d8\u6210\"Muellers algorithm\"\u3002\n1. \u628a\u8fd9\u4e2a\u7ed3\u679c\u5207\u5206\u6210\u5355\u8bcd\uff0c\u5728\u7a7a\u683c\u6216\u5176\u5b83\u6807\u70b9\u7b26\u53f7(\u901a\u5e38\u662f\u8fde\u5b57\u7b26)\u5904\u5206\u5272\u5f00\u3002\n    - \u63a8\u8350\uff1a\u5982\u679c\u67d0\u4e2a\u5355\u8bcd\u5df2\u7ecf\u6709\u4e86\u5e38\u7528\u7684\u9a7c\u5cf0\u8868\u793a\u5f62\u5f0f\uff0c\u6309\u5b83\u7684\u7ec4\u6210\u5c06\u5b83\u5206\u5272\u5f00(\u5982\"AdWords\"\u5c06\u5206\u5272\u6210\"ad words\")\u3002\n    \u9700\u8981\u6ce8\u610f\u7684\u662f\"iOS\"\u5e76\u4e0d\u662f\u4e00\u4e2a\u771f\u6b63\u7684\u9a7c\u5cf0\u8868\u793a\u5f62\u5f0f\uff0c\u56e0\u6b64\u8be5\u63a8\u8350\u5bf9\u5b83\u5e76\u4e0d\u9002\u7528\u3002\n1. \u73b0\u5728\u5c06\u6240\u6709\u5b57\u6bcd\u90fd\u5c0f\u5199(\u5305\u62ec\u7f29\u5199)\uff0c\u7136\u540e\u5c06\u5355\u8bcd\u7684\u7b2c\u4e00\u4e2a\u5b57\u6bcd\u5927\u5199\uff1a\n    - \u6bcf\u4e2a\u5355\u8bcd\u7684\u7b2c\u4e00\u4e2a\u5b57\u6bcd\u90fd\u5927\u5199\uff0c\u6765\u5f97\u5230\u5927\u9a7c\u5cf0\u5f0f\u547d\u540d\u3002\n    - \u9664\u4e86\u7b2c\u4e00\u4e2a\u5355\u8bcd\uff0c\u6bcf\u4e2a\u5355\u8bcd\u7684\u7b2c\u4e00\u4e2a\u5b57\u6bcd\u90fd\u5927\u5199\uff0c\u6765\u5f97\u5230\u5c0f\u9a7c\u5cf0\u5f0f\u547d\u540d\u3002\n1. \u6700\u540e\u5c06\u6240\u6709\u7684\u5355\u8bcd\u8fde\u63a5\u8d77\u6765\u5f97\u5230\u4e00\u4e2a\u6807\u8bc6\u7b26\u3002\n\n\u793a\u4f8b\uff1a\n\n    Prose form                Correct               Incorrect\n    ------------------------------------------------------------------\n    \"XML HTTP request\"        XmlHttpRequest        XMLHTTPRequest\n    \"new customer ID\"         newCustomerId         newCustomerID\n    \"inner stopwatch\"         innerStopwatch        innerStopWatch\n    \"supports IPv6 on iOS?\"   supportsIpv6OnIos     supportsIPv6OnIOS\n    \"YouTube importer\"        YouTubeImporter\n                              YoutubeImporter*\n\n\u52a0\u661f\u53f7\u5904\u8868\u793a\u53ef\u4ee5\uff0c\u4f46\u4e0d\u63a8\u8350\u3002\n\n> Note\uff1a\u5728\u82f1\u8bed\u4e2d\uff0c\u67d0\u4e9b\u5e26\u6709\u8fde\u5b57\u7b26\u7684\u5355\u8bcd\u5f62\u5f0f\u4e0d\u552f\u4e00\u3002\u4f8b\u5982\uff1a\"nonempty\"\u548c\"non-empty\"\u90fd\u662f\u6b63\u786e\u7684\uff0c\u56e0\u6b64\u65b9\u6cd5\u540d`checkNonempty`\u548c`checkNonEmpty`\u4e5f\u90fd\u662f\u6b63\u786e\u7684\u3002\n\n## <a id=\"Practice\">\u7f16\u7a0b\u5b9e\u8df5</a>\n\n### 6.1 @Override\uff1a\u80fd\u7528\u5219\u7528\n\n\u53ea\u8981\u662f\u5408\u6cd5\u7684\uff0c\u5c31\u628a`@Override`\u6ce8\u89e3\u7ed9\u7528\u4e0a\u3002\n\n### 6.2 \u6355\u83b7\u7684\u5f02\u5e38\uff1a\u4e0d\u80fd\u5ffd\u89c6\n\n\u9664\u4e86\u4e0b\u9762\u7684\u4f8b\u5b50\uff0c\u5bf9\u6355\u83b7\u7684\u5f02\u5e38\u4e0d\u505a\u54cd\u5e94\u662f\u6781\u5c11\u6b63\u786e\u7684\u3002(\u5178\u578b\u7684\u54cd\u5e94\u65b9\u5f0f\u662f\u6253\u5370\u65e5\u5fd7\uff0c\u6216\u8005\u5982\u679c\u5b83\u88ab\u8ba4\u4e3a\u662f\u4e0d\u53ef\u80fd\u7684\uff0c\u5219\u628a\u5b83\u5f53\u4f5c\u4e00\u4e2a`AssertionError`\u91cd\u65b0\u629b\u51fa\u3002)\n\n\u5982\u679c\u5b83\u786e\u5b9e\u662f\u4e0d\u9700\u8981\u5728catch\u5757\u4e2d\u505a\u4efb\u4f55\u54cd\u5e94\uff0c\u9700\u8981\u505a\u6ce8\u91ca\u52a0\u4ee5\u8bf4\u660e(\u5982\u4e0b\u9762\u7684\u4f8b\u5b50)\u3002\n\n```java\ntry {\n  int i = Integer.parseInt(response);\n  return handleNumericResponse(i);\n} catch (NumberFormatException ok) {\n  // it's not numeric; that's fine, just continue\n}\nreturn handleTextResponse(response);\n```\n\n**\u4f8b\u5916**\uff1a\u5728\u6d4b\u8bd5\u4e2d\uff0c\u5982\u679c\u4e00\u4e2a\u6355\u83b7\u7684\u5f02\u5e38\u88ab\u547d\u540d\u4e3a`expected`\uff0c\u5219\u5b83\u53ef\u4ee5\u88ab\u4e0d\u52a0\u6ce8\u91ca\u5730\u5ffd\u7565\u3002\u4e0b\u9762\u662f\u4e00\u79cd\u975e\u5e38\u5e38\u89c1\u7684\u60c5\u5f62\uff0c\u7528\u4ee5\u786e\u4fdd\u6240\u6d4b\u8bd5\u7684\u65b9\u6cd5\u4f1a\u629b\u51fa\u4e00\u4e2a\u671f\u671b\u4e2d\u7684\u5f02\u5e38\uff0c\n\u56e0\u6b64\u5728\u8fd9\u91cc\u5c31\u6ca1\u6709\u5fc5\u8981\u52a0\u6ce8\u91ca\u3002\n\n```java\ntry {\n  emptyStack.pop();\n  fail();\n} catch (NoSuchElementException expected) {\n}\n```\n\n### 6.3 \u9759\u6001\u6210\u5458\uff1a\u4f7f\u7528\u7c7b\u8fdb\u884c\u8c03\u7528\n\n\u4f7f\u7528\u7c7b\u540d\u8c03\u7528\u9759\u6001\u7684\u7c7b\u6210\u5458\uff0c\u800c\u4e0d\u662f\u5177\u4f53\u67d0\u4e2a\u5bf9\u8c61\u6216\u8868\u8fbe\u5f0f\u3002\n\n```java\nFoo aFoo = ...;\nFoo.aStaticMethod(); // good\naFoo.aStaticMethod(); // bad\nsomethingThatYieldsAFoo().aStaticMethod(); // very bad\n```\n\n### 6.4 Finalizers: \u7981\u7528\n\n\u6781\u5c11\u4f1a\u53bb\u91cd\u8f7d`Object.finalize`\u3002\n\n> Tip\uff1a\u4e0d\u8981\u4f7f\u7528finalize\u3002\u5982\u679c\u4f60\u975e\u8981\u4f7f\u7528\u5b83\uff0c\u8bf7\u5148\u4ed4\u7ec6\u9605\u8bfb\u548c\u7406\u89e3[Effective Java](http://books.google.com/books?isbn=8131726592)\n\u7b2c7\u6761\u6b3e\uff1a\u201cAvoid Finalizers\u201d\uff0c\u7136\u540e\u4e0d\u8981\u4f7f\u7528\u5b83\u3002\n\n## <a id=\"Javadoc\">Javadoc</a>\n\n### 7.1 \u683c\u5f0f\n\n#### 7.1.1 \u4e00\u822c\u5f62\u5f0f\n\nJavadoc\u5757\u7684\u57fa\u672c\u683c\u5f0f\u5982\u4e0b\u6240\u793a\uff1a\n\n```java\n/**\n * Multiple lines of Javadoc text are written here,\n * wrapped normally...\n */\npublic int method(String p1) { ... }\n```\n\n\u6216\u8005\u662f\u4ee5\u4e0b\u5355\u884c\u5f62\u5f0f\uff1a\n\n```java\n/** An especially short bit of Javadoc. */\n```\n\n\u57fa\u672c\u683c\u5f0f\u603b\u662fOK\u7684\u3002\u5f53\u6574\u4e2aJavadoc\u5757\u80fd\u5bb9\u7eb3\u4e8e\u4e00\u884c\u65f6(\u4e14\u6ca1\u6709Javadoc\u6807\u8bb0@XXX)\uff0c\u53ef\u4ee5\u4f7f\u7528\u5355\u884c\u5f62\u5f0f\u3002\n\n#### 7.1.2 \u6bb5\u843d\n\n\u7a7a\u884c(\u5373\uff0c\u53ea\u5305\u542b\u6700\u5de6\u4fa7\u661f\u53f7\u7684\u884c)\u4f1a\u51fa\u73b0\u5728\u6bb5\u843d\u4e4b\u95f4\u548cJavadoc\u6807\u8bb0(@XXX)\u4e4b\u524d(\u5982\u679c\u6709\u7684\u8bdd)\u3002\n\u9664\u4e86\u7b2c\u4e00\u4e2a\u6bb5\u843d\uff0c\u6bcf\u4e2a\u6bb5\u843d\u7b2c\u4e00\u4e2a\u5355\u8bcd\u524d\u90fd\u6709\u6807\u7b7e`<p>`\uff0c\u5e76\u4e14\u5b83\u548c\u7b2c\u4e00\u4e2a\u5355\u8bcd\u95f4\u6ca1\u6709\u7a7a\u683c\u3002\n\n#### 7.1.3 Javadoc\u6807\u8bb0\n\n\u6807\u51c6\u7684Javadoc\u6807\u8bb0\u6309\u4ee5\u4e0b\u987a\u5e8f\u51fa\u73b0\uff1a`@param`, `@return`, `@throws`, `@deprecated`, \u524d\u9762\u8fd94\u79cd\u6807\u8bb0\u5982\u679c\u51fa\u73b0\uff0c\u63cf\u8ff0\u90fd\u4e0d\u80fd\u4e3a\u7a7a\u3002\n\u5f53\u63cf\u8ff0\u65e0\u6cd5\u5728\u4e00\u884c\u4e2d\u5bb9\u7eb3\uff0c\u8fde\u7eed\u884c\u9700\u8981\u81f3\u5c11\u518d\u7f29\u8fdb4\u4e2a\u7a7a\u683c\u3002\n\n### 7.2 \u6458\u8981\u7247\u6bb5\n\n\u6bcf\u4e2a\u7c7b\u6216\u6210\u5458\u7684Javadoc\u4ee5\u4e00\u4e2a\u7b80\u77ed\u7684\u6458\u8981\u7247\u6bb5\u5f00\u59cb\u3002\u8fd9\u4e2a\u7247\u6bb5\u662f\u975e\u5e38\u91cd\u8981\u7684\uff0c\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u5b83\u662f\u552f\u4e00\u51fa\u73b0\u7684\u6587\u672c\uff0c\u6bd4\u5982\u5728\u7c7b\u548c\u65b9\u6cd5\u7d22\u5f15\u4e2d\u3002\n\n\u8fd9\u53ea\u662f\u4e00\u4e2a\u5c0f\u7247\u6bb5\uff0c\u53ef\u4ee5\u662f\u4e00\u4e2a\u540d\u8bcd\u77ed\u8bed\u6216\u52a8\u8bcd\u77ed\u8bed\uff0c\u4f46\u4e0d\u662f\u4e00\u4e2a\u5b8c\u6574\u7684\u53e5\u5b50\u3002\u5b83\u4e0d\u4f1a\u4ee5`A {@code Foo} is a...`\u6216`This method returns...`\u5f00\u5934,\n\u5b83\u4e5f\u4e0d\u4f1a\u662f\u4e00\u4e2a\u5b8c\u6574\u7684\u7948\u4f7f\u53e5\uff0c\u5982`Save the record...`\u3002\u7136\u800c\uff0c\u7531\u4e8e\u5f00\u5934\u5927\u5199\u53ca\u88ab\u52a0\u4e86\u6807\u70b9\uff0c\u5b83\u770b\u8d77\u6765\u5c31\u50cf\u662f\u4e2a\u5b8c\u6574\u7684\u53e5\u5b50\u3002\n\n> Tip\uff1a\u4e00\u4e2a\u5e38\u89c1\u7684\u9519\u8bef\u662f\u628a\u7b80\u5355\u7684Javadoc\u5199\u6210`/** @return the customer ID */`\uff0c\u8fd9\u662f\u4e0d\u6b63\u786e\u7684\u3002\u5b83\u5e94\u8be5\u5199\u6210`/** Returns the customer ID. */`\u3002\n\n### 7.3 \u54ea\u91cc\u9700\u8981\u4f7f\u7528Javadoc\n\n\u81f3\u5c11\u5728\u6bcf\u4e2apublic\u7c7b\u53ca\u5b83\u7684\u6bcf\u4e2apublic\u548cprotected\u6210\u5458\u5904\u4f7f\u7528Javadoc\uff0c\u4ee5\u4e0b\u662f\u4e00\u4e9b\u4f8b\u5916\uff1a\n\n#### 7.3.1 \u4f8b\u5916\uff1a\u4e0d\u8a00\u81ea\u660e\u7684\u65b9\u6cd5\n\n\u5bf9\u4e8e\u7b80\u5355\u660e\u663e\u7684\u65b9\u6cd5\u5982`getFoo`\uff0cJavadoc\u662f\u53ef\u9009\u7684(\u5373\uff0c\u662f\u53ef\u4ee5\u4e0d\u5199\u7684)\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0b\u9664\u4e86\u5199\u201cReturns the foo\u201d\uff0c\u786e\u5b9e\u4e5f\u6ca1\u6709\u4ec0\u4e48\u503c\u5f97\u5199\u4e86\u3002\n\n\u5355\u5143\u6d4b\u8bd5\u7c7b\u4e2d\u7684\u6d4b\u8bd5\u65b9\u6cd5\u53ef\u80fd\u662f\u4e0d\u8a00\u81ea\u660e\u7684\u6700\u5e38\u89c1\u4f8b\u5b50\u4e86\uff0c\u6211\u4eec\u901a\u5e38\u53ef\u4ee5\u4ece\u8fd9\u4e9b\u65b9\u6cd5\u7684\u63cf\u8ff0\u6027\u547d\u540d\u4e2d\u77e5\u9053\u5b83\u662f\u5e72\u4ec0\u4e48\u7684\uff0c\u56e0\u6b64\u4e0d\u9700\u8981\u989d\u5916\u7684\u6587\u6863\u8bf4\u660e\u3002\n\n> Tip\uff1a\u5982\u679c\u6709\u4e00\u4e9b\u76f8\u5173\u4fe1\u606f\u662f\u9700\u8981\u8bfb\u8005\u4e86\u89e3\u7684\uff0c\u90a3\u4e48\u4ee5\u4e0a\u7684\u4f8b\u5916\u4e0d\u5e94\u4f5c\u4e3a\u5ffd\u89c6\u8fd9\u4e9b\u4fe1\u606f\u7684\u7406\u7531\u3002\u4f8b\u5982\uff0c\u5bf9\u4e8e\u65b9\u6cd5\u540d`getCanonicalName`\uff0c\n\u5c31\u4e0d\u5e94\u8be5\u5ffd\u89c6\u6587\u6863\u8bf4\u660e\uff0c\u56e0\u4e3a\u8bfb\u8005\u5f88\u53ef\u80fd\u4e0d\u77e5\u9053\u8bcd\u8bed`canonical name`\u6307\u7684\u662f\u4ec0\u4e48\u3002\n\n#### 7.3.2 \u4f8b\u5916\uff1a\u91cd\u8f7d\n\n\u5982\u679c\u4e00\u4e2a\u65b9\u6cd5\u91cd\u8f7d\u4e86\u8d85\u7c7b\u4e2d\u7684\u65b9\u6cd5\uff0c\u90a3\u4e48Javadoc\u5e76\u975e\u5fc5\u9700\u7684\u3002\n\n#### 7.3.3 \u53ef\u9009\u7684Javadoc\n\n\u5bf9\u4e8e\u5305\u5916\u4e0d\u53ef\u89c1\u7684\u7c7b\u548c\u65b9\u6cd5\uff0c\u5982\u6709\u9700\u8981\uff0c\u4e5f\u662f\u8981\u4f7f\u7528Javadoc\u7684\u3002\u5982\u679c\u4e00\u4e2a\u6ce8\u91ca\u662f\u7528\u6765\u5b9a\u4e49\u4e00\u4e2a\u7c7b\uff0c\u65b9\u6cd5\uff0c\u5b57\u6bb5\u7684\u6574\u4f53\u76ee\u7684\u6216\u884c\u4e3a\uff0c\n\u90a3\u4e48\u8fd9\u4e2a\u6ce8\u91ca\u5e94\u8be5\u5199\u6210Javadoc\uff0c\u8fd9\u6837\u66f4\u7edf\u4e00\u66f4\u53cb\u597d\u3002\n\n## <a id=\"End\">\u540e\u8bb0</a>\n\n\u672c\u6587\u6863\u7ffb\u8bd1\u81ea[Google Java Style](http://google-styleguide.googlecode.com/svn/trunk/javaguide.html)\uff0c\n\u8bd1\u8005[@Hawstein](http://weibo.com/hawstein)\u3002", 
                        "published_at": 1431607920000, 
                        "published_by": 1, 
                        "slug": "google-java\u7f16\u7a0b\u98ce\u683c\u6307\u5357", 
                        "status": "published", 
                        "title": "Google Java\u7f16\u7a0b\u98ce\u683c\u6307\u5357", 
                        "updated_at": 1431607920000, 
                        "updated_by": 1, 
                        "uuid": "60f128d4-bbe8-432e-ba2d-d5ebcec5d5a4"
                    }, 
                    {
                        "created_at": 1431354720000, 
                        "created_by": 1, 
                        "id": 8, 
                        "language": "en_US", 
                        "markdown": "##1.\u5b89\u88c5\u597d\u4e4b\u540e\u53ef\u4ee5\u7b80\u5355\u914d\u7f6e\u4e00\u4e0b\uff1a\n\u4e3b\u8981\u662f\u4fee\u6539\u6587\u4ef6\uff1a_config.yml \uff0c\u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6\u90fd\u6709\u76f8\u5e94\u7684\u6ce8\u91ca\u3002\u4e3b\u8981\u5c31\u662f\u6539\u4e00\u4e9b\u535a\u5ba2\u5934\uff0c\u4f5c\u8005\u540d\u4e4b\u7c7b\u7684\u4e1c\u897f\u3002 \u6ce8\u610f\u6700\u597d\u628a\u91cc\u9762\u7684twitter\u76f8\u5173\u7684\u4fe1\u606f\u5168\u90e8\u5220\u6389\uff0c\u5426\u5219\u7531\u4e8eGFW\u7684\u539f\u56e0\uff0c\u5c06\u4f1a\u9020\u6210\u9875\u9762load\u5f88\u6162\u3002\n\n###1.1\u6dfb\u52a0\u767e\u5ea6\u7edf\u8ba1\uff0c`/source/_includes/custom/footer.html`\n<!--more-->\n1)\u628agoogle\u7684\u81ea\u5b9a\u4e49\u5b57\u4f53\u53bb\u6389\n\n2)\u6dfb\u52a0\u4ee5\u4e0b\u6587\u672c\u5230footer.html\u4e2d\n\n\n\t```\n\t<script>\n\tvar _hmt = _hmt || [];\n\t(function() {\n\t  var hm = document.createElement(\"script\");\n\t  hm.src = \"//hm.baidu.com/hm.js?ada97da06266f7901b152f7e9cda2ada\";\n\t  var s = document.getElementsByTagName(\"script\")[0];\n\t  s.parentNode.insertBefore(hm, s);\n\t})();\n\t</script>\n\t```\n\n3)\u6dfb\u52a0CNZZ\u7edf\u8ba1\uff0c\u4fee\u6539`source/_includes/custom/footer.html`\u6587\u4ef6\n\u5728`copyright`\u540e\u6dfb\u52a0\u7edf\u8ba1\u4ee3\u7801\u5373\u53ef\n\n\n\t<script type=\"text/javascript\">var cnzz_protocol = ((\"https:\" == document.location.protocol) ? \" https://\" : \" http://\");document.write(unescape(\"%3Cspan id='cnzz_stat_icon_1255137947'%3E%3C/span%3E%3Cscript src='\" + cnzz_protocol + \"s11.cnzz.com/z_stat.php%3Fid%3D1255137947%26show%3Dpic1' type='text/javascript'%3E%3C/script%3E\"));</script>\n\n\n###1.2 \u5206\u4eab\u548c\u8bc4\u8bba\u914d\u7f6e\n\u4e3b\u8981\u4ecb\u7ecd\u4e00\u4e0b\u5982\u4f55\u914d\u7f6e\u8bc4\u8bba\u548c\u5206\u4eab\u5230\u5fae\u535a\u529f\u80fd\u3002\u6b65\u9aa4\u5982\u4e0b\uff1a\n\n- \u5728_config.yml\u4e2d\u589e\u52a0\u4e00\u9879\uff1a `weibo_share: true`\n- \u4fee\u6539 `source/_includes/post/sharing.html` \uff0c\u589e\u52a0\uff1a\uff08\u4f7f\u7528\u65f6\u5c06`\uff5b\uff5d`\u5206\u522b\u6362\u4e3a`{}`\uff09\n\n```html\n\t\uff5b% if site.weibo_share %\uff5d\n\t\t\uff5b% include post/weibo.html %\uff5d\n\t\uff5b% endif %\uff5d\n```\n\n- \u589e\u52a0\u6587\u4ef6\uff1a`source/_includes/post/weibo.html`\n- \u8bbf\u95ee [http://www.jiathis.com/](http://www.jiathis.com/)\uff0c\u83b7\u53d6\u5206\u4eab\u7684\u4ee3\u7801(\u767b\u5f55\u81ea\u5df1\u7684jiathis\u8d26\u53f7)\n- \u8bbf\u95ee [http://uyan.cc/](http://uyan.cc/) \uff0c\u83b7\u5f97\u8bc4\u8bba\u7684\u4ee3\u7801(\u767b\u5f55\u81ea\u5df1\u7684jiathis\u8d26\u53f7)\n- \u5c06\u4e0a\u97622\u6b65\u7684\u4ee3\u7801\u90fd\u52a0\u5165\u5230`weibo.html`\u4e2d\u5373\u53ef,\u6dfb\u52a0\u540e\u7684\u5185\u5bb9\u5982\u4e0b\n\n```html\n<!-- JiaThis Button BEGIN -->\n<div class=\"jiathis_style_32x32\">\n\t<a class=\"jiathis_button_qzone\"></a>\n\t<a class=\"jiathis_button_tsina\"></a>\n\t<a class=\"jiathis_button_tqq\"></a>\n\t<a class=\"jiathis_button_weixin\"></a>\n\t<a class=\"jiathis_button_renren\"></a>\n\t<a href=\"http://www.jiathis.com/share?uid=2031184\" class=\"jiathis jiathis_txt jtico jtico_jiathis\" target=\"_blank\"></a>\n\t<a class=\"jiathis_counter_style\"></a>\n</div>\n<script type=\"text/javascript\">\nvar jiathis_config = {data_track_clickback:'true'};\n</script>\n<script type=\"text/javascript\" src=\"http://v3.jiathis.com/code/jia.js?uid=2031184\" charset=\"utf-8\"></script>\n<!-- JiaThis Button END -->\n<!-- UJian Button BEGIN -->\n\t<div class=\"ujian-hook\"></div>\n\t<script type=\"text/javascript\" src=\"http://v1.ujian.cc/code/ujian.js\"></script>\n<!-- UJian Button END -->\n\n<!-- UY BEGIN \u53cb\u8a00\u63d2\u4ef6-->\n<div id=\"uyan_frame\"></div>\n<script type=\"text/javascript\" src=\"http://v2.uyan.cc/code/uyan.js?uid=2031184\"></script>\n<!-- UY END -->\n```\n\n- \u4fee\u6539`sass/base/_typography.scss`\uff0c\u5c06\u5176\u4e2d\u7684`rticle blockquote`\u7684`font-style`\u7531`italic`\u6539\u4e3a`normal`,\u56e0\u4e3a\u4e2d\u6587\u7684\u5f15\u7528\u6587\u5b57\u7528\u659c\u4f53\u663e\u793a\u5176\u5b9e\u5e76\u4e0d\u597d\u770b\u3002\u518d\u5c06\u5176\u4e2d\u7684ul, ol \u7684`margin-left: 1.3em;`\u4fee\u6539\u4e3a`margin-bottom: 0em;`\n\n###1.3 \u4e3aoctopress\u6dfb\u52a0\u5206\u7c7b(category)\u5217\u8868\n####1.3.1 \u589e\u52a0category_list\u63d2\u4ef6\n\u4fdd\u5b58\u4ee5\u4e0b\u4ee3\u7801\u5230`plugins/category_list_tag.rb`\uff1a\n\n```ruby\nmodule Jekyll\n  class CategoryListTag < Liquid::Tag\n    def render(context)\n      html = \"\"\n      categories = context.registers[:site].categories.keys\n      categories.sort.each do |category|\n        posts_in_category = context.registers[:site].categories[category].size\n        category_dir = context.registers[:site].config['category_dir']\n        category_url = File.join(category_dir, category.gsub(/_|\\P{Word}/, '-').gsub(/-{2,}/, '-').downcase)\n        html << \"<li class='category'><a href='/#{category_url}/'>#{category} (#{posts_in_category})</a></li>\\n\"\n      end\n      html\n    end\n  end\nend\n\nLiquid::Template.register_tag('category_list', Jekyll::CategoryListTag)\n```\n\n\u8fd9\u4e2a\u63d2\u4ef6\u4f1a\u5411liquid\u6ce8\u518c\u4e00\u4e2a\u540d\u4e3a`category_list`\u7684tag\uff0c\u8be5tag\u5c31\u662f\u4ee5li\u7684\u5f62\u5f0f\u5c06\u7ad9\u70b9\u6240\u6709\u7684category\u7ec4\u7ec7\u8d77\u6765\u3002\u5982\u679c\u8981\u5c06category\u52a0\u5165\u5230\u4fa7\u8fb9\u5bfc\u822a\u680f\uff0c\u9700\u8981\u589e\u52a0\u4e00\u4e2aaside\u3002\n####1.3.2 \u589e\u52a0aside\n\u590d\u5236\u4ee5\u4e0b\u4ee3\u7801\u5230`source/_includes/asides/category_list.html`,\uff08\u4f7f\u7528\u65f6\u5c06`\uff5b\uff5d`\u5206\u522b\u6362\u4e3a`{}`\uff09\n\n```html\n<section>\n  <h1>\u5206\u7c7b\u76ee\u5f55</h1>\n  <ul id=\"categories\">\n    \uff5b% category_list %\uff5d\n  </ul>\n</section>\n```\n\n\u914d\u7f6e\u4fa7\u8fb9\u680f\u9700\u8981\u4fee\u6539`_config.yml`\u6587\u4ef6\uff0c\u4fee\u6539\u5176`default_asides`\u9879\uff1a\n\n```xml\ndefault_asides: [asides/category_list.html, asides/recent_posts.html]\n```\n\n\u4ee5\u4e0aasides\u6839\u636e\u81ea\u5df1\u7684\u9700\u6c42\u8c03\u6574\u3002\n##2.Header\uff0cNavigation\uff0cfooter\n###2.1Navigation\uff08\u5bfc\u822a\u680f\uff09\n&nbsp;&nbsp;\u53ef\u4ee5\u81ea\u884c\u4e3a\u5bfc\u822a\u680f\u6dfb\u52a0\u9879\u76ee\uff0c\u94fe\u63a5\u81f3\u4e0d\u540c\u7684\u9875\u9762\uff0c\u5728 `/source/_includes/custom/navigation.html` \u4e2d\u7f16\u8f91\u5373\u53ef\u3002\n```html\n\t<ul class=\"main-navigation\">\n      <li><a href=\"{{ root_url }}/\">\u535a\u5ba2\u4e3b\u9875</a></li>\n      <li><a href=\"{{ root_url }}/blog/archives\">\u6587\u7ae0\u5217\u8868</a></li>\n      <li><a href=\"{{ root_url }}/category-cloud\">\u5206\u7c7b\u4e91</a></li>\n      <li><a href=\"{{ root_url }}/about\">\u5173\u4e8e</a></li>\n    </ul>\n```\n&nbsp;&nbsp;\u5f53\u60f3\u6dfb\u52a0\u4e00\u4e9b\u9875\u9762\uff0c\u5982\u201c\u5173\u4e8e\u201d\u9875\u9762\uff0c\u53ef\u4ee5\u8bd5\u9a8c `rake new_page['name']` \u547d\u4ee4\u6765\u521b\u5efa\uff0c\u5982 `rake new_page['about']` \u540e\uff0c\u4f1a\u5efa\u7acb `source/about/index.html` \u6587\u4ef6\uff0c\u5728\u6b64\u6587\u4ef6\u7f16\u8f91\uff0c\u6dfb\u52a0\u81ea\u5df1\u60f3\u8981\u5c55\u793a\u7684\u5185\u5bb9\uff0c\u7136\u540e\u518d navigation.html \u91cc\u6dfb\u52a0\u6b63\u786e\u7684\u8def\u5f84\u5373\u53ef\uff0c\u5982 `<li><a href=\"/about\">\u5173\u4e8e</a></li>` \u3002\n##3.\u6837\u5f0f\u4fee\u6539\n&nbsp;&nbsp;\u6dfb\u52a0\u6216\u4fee\u6539\u63a7\u5236\u6837\u5f0f\uff0c\u9700\u7f16\u8f91 `sass/custom/_styles.scss` \uff0c\u535a\u5ba2\u7684\u6240\u6709\u989c\u8272\u63a7\u5236\u5728 `/sass/base/_theme.scss` \u4e2d\u8fdb\u884c\u8bbe\u7f6e\u3002\u5b9a\u5236\u81ea\u5df1\u7684\u914d\u8272\uff0c\u7f16\u8f91 `sass/custom/_colors.scss` \u3002\u67e5\u770b [HSL COLOR PICKER](http://hslpicker.com/#e1ff00) \uff0c\u5e2e\u4f60\u6311\u9009\u559c\u6b22\u7684\u989c\u8272\u3002\n\n&nbsp;&nbsp;\u4fee\u6539\u5e03\u5c40\uff0c\u9700\u8981\u7f16\u8f91 `sass/base/_layout.scss` \uff0c\u53ef\u4ee5\u4fee\u6539\u5404\u90e8\u5206\u7684\u5bbd\u5ea6\u7b49\u3002\n###3.1 \u5bfc\u822a\u680f\u5012\u5706\u89d2\n\n&nbsp;&nbsp;\u6211\u8bbe\u7f6e\u7684header\u533a\u80cc\u666f\u8272\u900f\u660e\uff0c\u6240\u4ee5\u5bfc\u822a\u680f\u7684\u76f4\u89d2\u6709\u4e9b\u5c16\u9510\uff0c\u5728 `sass/custom/_styles.scss` \u4e2d\u6dfb\u52a0\u5982\u4e0b\u8bed\u53e5\uff0c\u5c06\u5176\u4fee\u6539\u4e3a\u5706\u89d2\uff1a\n```css\n\t//\u5012\u5706\u89d2\n\t@media only screen and (min-width: 1040px) {\n\t        body > nav {\n\t                @include border-top-radius(.4em);\n\t        }\n\n\t        body > footer {\n\t                @include border-bottom-radius(.4em);\n\t        }\n\t}\n```\n##4.\u6ed1\u52a8\u8fd4\u56de\u9876\u90e8\u6309\u94ae\n\n&nbsp;&nbsp;\u5f53\u6587\u7ae0\u8f83\u957f\uff0c\u901a\u5e38\u5e0c\u671b\u6709\u4e00\u4e2a\u8fd4\u56de\u9876\u90e8\u7684\u6309\u94ae\uff0c\u5982\u4e0b\u65b9\u6cd5\u5b9e\u73b0\u4e86\u5728\u9875\u9762\u53f3\u4e0b\u65b9\u6dfb\u52a0\u4e00\u4e2a\u8fd4\u56de\u9876\u90e8\u7684\u56fe\u7247\u6309\u94ae\uff0c\u70b9\u51fb\u540e\u53ef\u4ee5\u6ed1\u52a8\u7684\u8fd4\u56de\u9876\u90e8\u3002\n\n&nbsp;&nbsp;\u5728`source/_include/custom/footer.html`\u4e2d\u6dfb\u52a0\u5982\u4e0b\u4ee3\u7801,\u5e76\u5c06`css`\u90e8\u5206\u79fb\u5230`header.html`\u4e2d\u4ee5\u4f18\u5316\u52a0\u8f7d\u901f\u5ea6\uff1a\n```html\n\t<script type=\"text/javascript\">\n\t$(document).ready(function(){\n\t  // hide #back-top first\n\t  $(\"#back-top\").hide();\n\t  // fade in #back-top\n\t  $(function () {\n\t\t  $(window).scroll(function () {\n\t\t\t  if ($(this).scrollTop() > 100) {\n\t\t\t\t  $('#back-top').fadeIn();\n\t\t\t  } else {\n\t\t\t\t  $('#back-top').fadeOut();\n\t\t\t  }\n\t\t  });\n\t\t  // scroll body to 0px on click\n\t\t  $('#back-top a').click(function () {\n\t\t\t  $('body,html').animate({\n\t\t\t\t  scrollTop: 0\n\t\t\t  }, 800);\n\t\t\t  return false;\n\t\t  });\n\t  });\n\n\t});\n\t</script>\n\n\t<style type=\"text/css\">\n\t#back-top {\n\t  position: fixed;\n\t  bottom: 30px;\n\t  left: 80%;\n\t  margin-bottom: 0px;\n\t}\n\n\t#back-top a {\n\t  width: 80px;\n\t  display: block;\n\t  text-align: center;\n\t  font: 11px/100% Arial, Helvetica, sans-serif;\n\t  text-transform: uppercase;\n\t  text-decoration: none;\n\t  color: #bbb;\n\n\t  /* transition */\n\t  -webkit-transition: 1s;\n\t  -moz-transition: 1s;\n\t  transition: 1s;\n\t}\n\t#back-top a:hover {\n\t  color: #000;\n\t}\n\n\t/* arrow icon (span tag) */\n\t#back-top span {\n\t  width: 80px;\n\t  height: 80px;\n\t  display: block;\n\t  margin-bottom: 0px;\n\t  background: #ddd url(/images/top.png) no-repeat center center;\n\n\t  /* rounded corners */\n\t  -webkit-border-radius: 15px;\n\t  -moz-border-radius: 15px;\n\t  border-radius: 15px;\n\n\t  /* transition */\n\t  -webkit-transition: 1s;\n\t  -moz-transition: 1s;\n\t  transition: 1s;\n\t}\n\t#back-top a:hover span {\n\t  background-color: #888;\n\t}\n\t</style>\n\t<p id=\"back-top\">\n\t  <a href=\"javascript:;\"><span></span></a>\n\t</p>\n```\n&nbsp;&nbsp;\u6700\u540e\uff0c\u8fd8\u9700\u8981\u5c06\u8fd4\u56de\u9876\u90e8\u7684\u56fe\u7247\u653e\u5165 `source/images` \uff0c\u547d\u540d\u4e3a `top.png` \uff08\u6216\u4fee\u6539`footer.html`\u4e2d\u56fe\u7247\u7684\u8def\u5f84\uff09\u3002\n\n##5.\u4e8c\u7ef4\u7801\u5c55\u793a\n\n&nbsp;&nbsp;\u5728\u5173\u4e8e\u9875\u9762\u6216\u8fb9\u680f\u53ef\u4ee5\u5c55\u793a\u4f60\u7684\u4e2a\u4eba\u535a\u5ba2\u7684\u4e8c\u7ef4\u7801\uff0c\u65b9\u4fbf\u79fb\u52a8\u7ec8\u7aef\u626b\u63cf\u8bbf\u95ee\u4f60\u7684\u535a\u5ba2\uff0c\u63d2\u4ef6\u4e3b\u9875 [\u70b9\u51fb\u8fd9\u91cc](https://github.com/sailor79/Octopress-dynamic-QR-Code-aside) \u3002\n\n&nbsp;&nbsp;\u5728\u4fa7\u8fb9\u680f\u663e\u793a\uff0c\u5219\u5c06 `qrcode.html` \u653e\u5165 `source/_includes/custom/asides/` \u4e2d\uff0c\u5728 `_config.yml` \u4e2d `default_asides` \u6dfb\u52a0 `custom/asides/qrcode.html` \u5373\u53ef\u663e\u793a\u3002\n\n\u6216\u8005\u5c06 `qrcode.html`\u6574\u5408\u5230`about.html` \u4ee3\u7801\u6dfb\u52a0\u5230\u4f60\u60f3\u5c55\u793a\u7684\u9875\u9762\u7684HTML\u6587\u4ef6\u4e2d\u4ea6\u53ef\u3002\n\n##6.\u8ba9\u535a\u5ba2\u4e2d\u8fde\u63a5\u5728\u65b0\u7a97\u53e3\u6253\u5f00\n\n&nbsp;&nbsp;\u7531\u4e8emarkdown\u4e0d\u652f\u6301\u8fd9\u4e00\u8bed\u6cd5\uff0c\u5982\u679c\u8981\u81ea\u5df1\u7528html\u6807\u7b7e\u5b9e\u73b0\uff0c\u53c8\u6709\u4e9b\u8fdd\u80cc\u4e86markdown\u4ee5\u5185\u5bb9\u4e3a\u91cd\u7684\u7acb\u610f\u3002\n\n&nbsp;&nbsp;\u53c2\u8003\u535a\u6587[\u300a\u5728Octopress\u4e2d\u4e3amarkdown\u7684\u8d85\u94fe\u63a5\u52a0\u4e0atarget=\"_blank\"\u300b](http://www.blogjava.net/lishunli/archive/2013/01/20/394478.html)\uff0c\u53ef\u4ee5\u901a\u8fc7\u5c06\u5982\u4e0b\u4ee3\u7801\u6dfb\u52a0\u5230 `{OCTOPRESS_HOME}/source/_includes/custom/head.html`\u6587\u4ef6\u672b\u5c3e\u6765\u5b9e\u73b0\uff1a\n```javascript\n\t<script type=\"text/javascript\">\n\n\tfunction addBlankTargetForLinks () {\n\n\t  $('a[href^=\"http\"]').each(function(){\n\n\t      $(this).attr('target', '_blank');\n\n\t  });\n\n\t}\n\n\t$(document).bind('DOMNodeInserted', function(event) {\n\n\t  addBlankTargetForLinks();\n\n\t});\n\n\t</script>\n```\n##7.\u5217\u8868\u7684\u6392\u7248\n\n&nbsp;&nbsp;\u9ed8\u8ba4\u60c5\u51b5\uff0c\u6240\u6709\u6587\u5b57\u7684\u6392\u5934\u4f1a\u5bf9\u9f50\uff0c\u4f46\u5982\u679c\u6709\u5217\u8868\u9879\u7684\u60c5\u51b5\u4e0b\u4e5f\u5982\u6b64\uff0c\u5217\u8868\u5934\u5c31\u4f1a\u51b2\u51fa\u6587\u7ae0\u7684\u4e3b\u4f53\u533a\u5757\u4e86\u3002\n\n&nbsp;&nbsp;\u5728`octopress/sass/custom/_layout.scss`\u6587\u4ef6\u4e2d\u627e\u5230`#$indented-lists: true`\u884c\uff0c\u53bb\u6389#\u6ce8\u91ca\u5373\u53ef\u3002\n\n\t$indented-lists: true\n\n##8.404ERROR\u9875\u9762\n\n\u5728`ocotopress/source`\u76ee\u5f55\u4e0b\uff0c\u589e\u52a0`404.html`\uff0c`rank new_page[404.html]`\u5e76\u505a\u51fa\u81ea\u5b9a\u4e49\u7684\u7f16\u8f91\u3002\u672c\u535a\u5ba2\u4f7f\u7528\u4e86\u817e\u8baf\u516c\u76ca404\uff0c\u63a8\u8350\u5927\u5bb6\u4f7f\u7528\uff0c\u4e3a\u793e\u4f1a\u8d21\u732e\u4e00\u5206\u6b63\u80fd\u91cf\u3002[\u516c\u76ca404](http://www.qq.com/404/)\n```html\n\t---\n\tlayout: page\n\ttitle: \"404 Error\"\n\tdate: 2013-4-21 02:35\n\tcomments: false\n\tsharing: false\n\tfooter: false\n\t---\n\t<center><h1>blog.sherlocky.com 404!</h1></center>\n\t<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\" homePageUrl=\"http://blog.sherlocky.com/\" homePageName=\"\u56de\u5230\u535a\u5ba2\u4e3b\u9875\"></script>\n```\n\n##9.\u65e5\u671f\u683c\u5f0f\u4fee\u6539\n- \u4fee\u6539`_config.yml`\u4e2d\u7684`date_format`\u53c2\u6570\u4e3a`%Y-%m-%d %A`\uff0c\u5e76\u6dfb\u52a0\u914d\u7f6e`time_format: \"%H:%M:%S\"`\n\n\t\u5177\u4f53\u683c\u5f0f\u8bf4\u660e\u53ef\u4ee5\u53c2\u8003[http://ruby-doc.org/core-1.9.2/Time.html#method-i-strftime](http://ruby-doc.org/core-1.9.2/Time.html#method-i-strftime \"You can customize the format as defined in\")\n\n- \u4fee\u6539`source/_includes/post/date.html`\u6587\u4ef6,\u5c06\u5176\u4e2d\u7684`\\{\\{ page.date_time_html }}`\u548c`\\{\\{ post.date_time_html }}`\u5206\u522b\u66ff\u6362\u4e3a\uff08\u8bf7\u81ea\u89c9\u53bb\u6389\u201c\\\u201d\uff0c\u56e0\u4e3aoctopress\u5904\u7406\u5927\u62ec\u53f7\u7684\u95ee\u9898\uff0c\u4e0d\u52a0\u5c31\u4e0d\u80fd\u663e\u793a\uff0c\u52a0\u4e86\u53c8\u4e0d\u5bf9\uff0c\u4e0b\u540c\uff09:\n```\n\\{\\{ page.date | date: '%Y-%m-%d %H:%M:%S %A' }}\n```\n```\n\\{\\{ post.date | date: '%Y-%m-%d %H:%M:%S %A' }}\n```\n\n- \u5982\u679c\u8981\u4fee\u6539\u6587\u7ae0\u5217\u8868\u9879\u91cc\u7684\u65e5\u671f\u683c\u5f0f\uff0c\u53ef\u4ee5\u4fee\u6539`source/_includes/archive_post.html`\u6587\u4ef6\uff0c\u4fee\u6539`<time>`\u6807\u7b7e\u4e2d\u5bf9\u5e94\u7684`year`,`month`,`day`\u5373\u53ef\n\n\t**PS:%A\u8868\u793a\u82f1\u6587\u7684\u661f\u671f**\n\n##10.\u5728Octopress\u4e2d\u4e3amarkdown\u7684\u8d85\u94fe\u63a5\u52a0\u4e0a`target=\"_blank\"`\nOctopress\u7684[Issues Open links in a new window](https://github.com/imathis/octopress/issues/410)\u5c31\u7ed9\u51fa\u4e86\u6bd4\u8f83\u5b8c\u7f8e\u7684\u7b54\u6848\uff0c\u7b80\u5355hack a \u6807\u7b7e\u3002\n\u8bf7\u5728`{YOUR_OCTOPRESS}\\source\\_includes\\custom\\head.html`\u6587\u4ef6\u540e\u9762\u6dfb\u52a0\u4e0b\u9762\u7684\u4ee3\u7801 (YOUR_OCTOPRESS\u662f\u4f60Octopress\u7684\u4e3b\u76ee\u5f55)\n\n```javascript\nfunction addBlankTargetForLinks () {\n  $('a[href^=\"http\"]').each(function(){\n      $(this).attr('target', '_blank');\n  });\n}\n\n$(document).bind('DOMNodeInserted', function(event) {\n  addBlankTargetForLinks();\n});\n```\n\nPS:\u4ee3\u7801\u6765\u6e90 [https://gist.github.com/4523641](https://gist.github.com/4523641)\n##11.\u4f7f\u6587\u7ae0\u4ee5\u6458\u8981\u5f62\u5f0f\u5c55\u793a\n\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5728\u535a\u5ba2\u7684\u9996\u9875\u662f\u663e\u793a\u6bcf\u7bc7\u6587\u7ae0\u7684\u5168\u90e8\u5185\u5bb9\uff0c\u66f4\u591a\u65f6\u5019\u6211\u4eec\u53ea\u60f3\u5728\u9996\u9875\u5c55\u793a\u6587\u7ae0\u7684\u4e00\u90e8\u5206\u5185\u5bb9\uff0c\u5f53\u70b9\u51fb\u9605\u8bfb\u5168\u6587\u65f6\u8fdb\u5165\u5230\u6587\u7ae0\u7684\u8be6\u7ec6\u9875\u9762\uff0c\u5728Octopress\u4e2d\u53ef\u4ee5\u5f88\u8f7b\u677e\u5b9e\u73b0\u8be5\u529f\u80fd\uff1a\n\n- 1.\u5728\u6587\u7ae0\u5bf9\u5e94\u7684markdown\u6587\u4ef6\u4e2d\uff0c\u5728\u9700\u8981\u663e\u793a\u5728\u9996\u9875\u7684\u6587\u5b57\u540e\u9762\u6dfb\u52a0`<!\u2014more\u2014>`\uff0c\u6267\u884c`rake generate`\u540e\u5728\u9996\u9875\u4e0a\u4f1a\u770b\u5230\u53ea\u663e\u793a`<!\u2014more\u2014>`\u524d\u9762\u7684\u6587\u5b57\uff0c\u6587\u5b57\u540e\u9762\u4f1a\u663e\u793a`Read on`\u94fe\u63a5\uff0c\u70b9\u51fb\u540e\u8fdb\u5165\u6587\u7ae0\u7684\u8be6\u7ec6\u9875\u9762;\n\n- 2.\u5982\u679c\u60f3\u5c06`Read on`\u4fee\u6539\u4e3a\u4e2d\u6587\uff0c\u53ef\u4ee5\u4fee\u6539`_config.yml`\u6587\u4ef6\n\n\t\texcerpt_link: \"\u9605\u8bfb\u5168\u6587&rarr;\"  # \"Continue reading\" link text at the bottom of excerpted articles\n\n##\u53c2\u8003\n1. [\u5c0f\u718a\u7684\u535a\u5ba2](http://blog.thatyear.me/)\n2. [\u8c61\u5199\u7a0b\u5e8f\u4e00\u6837\u5199\u535a\u5ba2\uff1a\u642d\u5efa\u57fa\u4e8egithub\u7684\u535a\u5ba2](http://blog.devtang.com/blog/2012/02/10/setup-blog-based-on-github/)\n3. [\u5c06\u535a\u5ba2\u4eceGitHub\u8fc1\u79fb\u5230GitCafe](http://blog.devtang.com/blog/2014/06/02/use-gitcafe-to-host-blog/)\n4. [\u5b9a\u5236Octopress - CSDN](http://blog.csdn.net/biaobiaoqi/article/details/9289563)\n5. [\u5b9a\u5236Octopress - \u63a8\u9177](http://www.tuicool.com/articles/uA7bUn)\n6. [MarkDown\u7b80\u5355\u793a\u4f8b](http://blog.csdn.net/renfufei/article/details/41648021)\n7. [Ruby\u5f00\u6e90\u9879\u76ee\u4ecb\u7ecd(1)\uff1aoctopress\u2014\u2014\u50cf\u9ed1\u5ba2\u4e00\u6837\u5199\u535a\u5ba2](http://www.yangzhiping.com/tech/octopress.html)\n8. [\u5229\u7528octopress\u90e8\u7f72\u535a\u5ba2\u5230github](http://www.itzhoulin.com/deploy-a-blog-using-octopress-hosted-in-github/)\n9. [git@gitcafe \u7684\u4e00\u4e9b\u7b14\u8bb0](http://blog.csdn.net/ispeller/article/details/22183961)\n10. [Windows\u4e0b\u642d\u5efaOctopress\u535a\u5ba2](http://www.cnblogs.com/oec2003/archive/2013/05/27/3100896.html)\n11. [\u8bbe\u7f6eoctopress\u9996\u9875\u7684\u65e5\u671f\u683c\u5f0f](http://pangyi.github.io/blog/20150102/she-zhi-octopressshou-ye-de-ri-qi-ge-shi/)\n12. [\u5728Octopress\u4e2d\u4e3amarkdown\u7684\u8d85\u94fe\u63a5\u52a0\u4e0atarget=\"_blank\"](http://www.blogjava.net/lishunli/archive/2013/01/20/394478.html)\n13. [\u7528Github\u548cOctopress\u642d\u5efa\u535a\u5ba2-windows](http://corey600.github.io/blog/2013/02/28/use-github-and-octopress-create-blog/)\n14. [GitCafe/Help](https://gitcafe.com/GitCafe/Help/wiki/Pages-%E7%9B%B8%E5%85%B3%E5%B8%AE%E5%8A%A9#wiki)\n15. [paddingme](http://padding.me)\n16. [\u4e3aoctopress\u6dfb\u52a0\u5206\u7c7b(category)\u5217\u8868](http://codemacro.com/2012/07/18/add-category-list-to-octopress/)\n17. [Octopress\u535a\u5ba2\u8bbe\u7f6e](http://www.cnblogs.com/oec2003/archive/2013/05/31/3109577.html \"Octopress\u535a\u5ba2\u8bbe\u7f6e\")", 
                        "published_at": 1431354720000, 
                        "published_by": 1, 
                        "slug": "\u81ea\u5b9a\u4e49\u914d\u7f6eoctopress", 
                        "status": "published", 
                        "title": "\u81ea\u5b9a\u4e49\u914d\u7f6eoctopress", 
                        "updated_at": 1431354720000, 
                        "updated_by": 1, 
                        "uuid": "9600dd08-700c-4598-9d88-055cc62c601d"
                    }, 
                    {
                        "created_at": 1439106240000, 
                        "created_by": 1, 
                        "id": 9, 
                        "language": "en_US", 
                        "markdown": "## \u4e00\u3001\u5982\u4f55\u5224\u65ad\u5bf9\u8c61\u662f\u5426\u8fd8\u5728\u5b58\u6d3b ##\n- #### \u5f15\u7528\u8ba1\u6570\u6cd5:\n\u4e3b\u6d41\u7684Java\u865a\u62df\u673a\u6ca1\u6709\u4f7f\u7528\u8fd9\u79cd\u65b9\u6cd5\u7ba1\u7406\u5185\u5b58,  \u56e0\u4e3a\u5b83\u5f88\u96be\u89e3\u51b3\u5faa\u73af\u4f9d\u8d56\n<!--more-->\n- #### \u53ef\u8fbe\u6027\u5206\u6790:\n\u901a\u8fc7\u4e00\u7cfb\u5217\u7684\u79f0\u4e3a\u201dGC  Roots\u201c\u7684\u5bf9\u8c61\u4f5c\u4e3a\u8d77\u59cb\u70b9,  \u4ece\u8fd9\u4e9b\u8282\u70b9\u5f00\u59cb\u5411\u4e0b\u641c\u7d22,  \u641c\u7d22\u6240\u8d70\u8fc7\u7684\u8def\u5f84\u79f0\u4e3a\u5f15\u7528\u94fe,  \u5f53\u4e00\u4e2a\u5bf9\u8c61\u5230GC Roots\u6ca1\u6709\u4e0e\u4efb\u4f55\u5f15\u7528\u94fe\u76f8\u8fde\u65f6,  \u5219\u8bc1\u660e\u8be5\u5bf9\u8c61\u662f\u4e0d\u53ef\u7528\u7684\u3002\n\n\u4f5c\u4e3aGC Roots\u7684\u5bf9\u8c61\u5305\u62ec\u4ee5\u4e0b\u51e0\u79cd: \u865a\u62df\u673a\u6808\u4e2d\u5f15\u7528\u7684\u5bf9\u8c61\u3001 \u65b9\u6cd5\u533a\u4e2d\u7c7b\u9759\u6001\u5c5e\u6027\u5f15\u7528\u7684\u5bf9\u8c61\u3001\u65b9\u6cd5\u533a\u4e2d\u5e38\u91cf\u5f15\u7528\u7684\u5bf9\u8c61\u4ee5\u53ca\u672c\u5730\u65b9\u6cd5\u6808\u4e2dJNI\u5f15\u7528\u7684\u5bf9\u8c61\u3002\n## \u4e8c\u3001\u5f15\u7528:  ##\n- #### \u5b9a\u4e49:\n\u5982\u679creference\u7c7b\u578b\u7684\u6570\u636e\u4e2d\u5b58\u50a8\u7684\u6570\u503c\u4ee3\u8868\u7684\u662f\u53e6\u5916\u4e00\u5757\u5185\u5b58\u7684\u8d77\u59cb\u5730\u5740,  \u5c31\u79f0\u8fd9\u5757\u5185\u5b58\u4ee3\u8868\u7740\u4e00\u4e2a\u5f15\u7528\u3002\n\n- #### \u5206\u7c7b:\n\n\n+ \u5f3a\u5f15\u7528:\n\u4ee3\u7801\u4e4b\u4e2d\u666e\u904d\u5b58\u5728\u7684,  \u5982Object obj = new Object(), \u53ea\u8981\u5f3a\u5f15\u7528\u8fd8\u5728,  GC\u5c31\u6c38\u8fdc\u4e0d\u4f1a\u56de\u6536\u8be5\u5185\u5bb9\u3002\n\n+ \u8f6f\u5f15\u7528:\n\u63cf\u8ff0\u6709\u7528\u4f46\u975e\u5fc5\u987b\u7684\u5bf9\u8c61\u3002 \u5bf9\u4e8e\u8f6f\u5f15\u7528\u5173\u8054\u7740\u7684\u5bf9\u8c61,  \u5728\u7cfb\u7edf\u5c06\u8981\u629b\u51fa\u5185\u5b58\u5f02\u5e38\u4e4b\u524d,  \u4f1a\u5c06\u8fd9\u4e9b\u5bf9\u8c61\u5217\u8fdb\u56de\u6536\u8303\u56f4\u8fdb\u884c\u4e8c\u6b21\u56de\u6536\u3002 \u5982\u679c\u8fd9\u6b21\u56de\u6536\u8fd8\u6ca1\u6709\u8db3\u591f\u7684\u5185\u5b58,  \u624d\u4f1a\u629b\u51fa\u5f02\u5e38\u3002\uff08SoftReference\uff09\n\n+ \u5f31\u5f15\u7528:\n\u5f31\u5f15\u7528\u4e5f\u7528\u6765\u63cf\u8ff0\u975e\u5fc5\u987b\u7684\u5bf9\u8c61\u3002\u88ab\u82e5\u5f15\u7528\u5173\u8054\u7684\u5bf9\u8c61\u53ea\u80fd\u6d3b\u5230\u4e0b\u6b21\u5783\u573e\u56de\u6536\u53d1\u751f\u4e4b\u524d\u3002 \u5f53\u5783\u573e\u6536\u96c6\u5668\u5de5\u4f5c\u65f6,  \u65e0\u8bba\u5f53\u524d\u5185\u5b58\u662f\u5426\u8db3\u591f,  \u90fd\u4f1a\u56de\u6536\u6389\u53ea\u88ab\u5f31\u5f15\u7528\u5173\u8054\u7684\u5bf9\u8c61\u3002\n\n+ \u865a\u5f15\u7528:\n\u53c8\u79f0\u4e3a\u5e7d\u7075\u5f15\u7528\u6216\u8005\u5e7b\u5f71\u5f15\u7528\u3002 \u4e00\u4e2a\u5bf9\u8c61\u662f\u5426\u6709\u865a\u5f15\u7528\u7684\u5b58\u5728,  \u4e1d\u6beb\u4e0d\u4f1a\u5f71\u54cd\u5bf9\u8c61\u7684\u751f\u5b58\u65f6\u95f4,  \u4e5f\u4e0d\u80fd\u901a\u8fc7\u865a\u5f15\u7528\u83b7\u5f97\u5bf9\u8c61\u5b9e\u4f8b\u3002\u4e3a\u4e00\u4e2a\u5bf9\u8c61\u8bbe\u7f6e\u865a\u5f15\u7528\u5173\u8054\u7684\u552f\u4e00\u76ee\u7684\u5c31\u662f\u80fd\u5728\u8fd9\u4e2a\u5bf9\u8c61\u88ab\u5783\u573e\u6536\u96c6\u5668\u56de\u6536\u65f6\u6536\u5230\u4e00\u4e2a\u7cfb\u7edf\u901a\u77e5\u3002\n## \u4e09\u3001\u5bf9\u8c61\u6807\u8bb0\u4e4b\u540e\u5c31\u4f1a\u56de\u6536\u5417 ##\n+ \u53ef\u8fbe\u6027\u5206\u6790\u4e4b\u540e,  \u6ca1\u6709\u5728\u4efb\u4f55GC Roots\u5f15\u7528\u94fe\u4e0a\u7684\u5bf9\u8c61,  \u5c31\u4f1a\u88ab\u7b2c\u4e00\u6b21\u6807\u8bb0,  \u6807\u8bb0\u4e4b\u540e\u8fd8\u6709\u4e00\u6b21\u7b5b\u9009\u7684\u8fc7\u7a0b;\n+ \u7b5b\u9009\u7684\u6761\u4ef6\u662f:  \u6b64\u5bf9\u8c61\u662f\u5426\u6709\u5fc5\u8981\u6267\u884cfinalize\u65b9\u6cd5, \u6709\u5fc5\u8981\u6267\u884c\u7684\u6761\u4ef6\u662f: \u8be5\u5bf9\u8c61\u8986\u76d6\u4e86finalize\u65b9\u6cd5,  \u5e76\u4e14\u6ca1\u6709\u865a\u62df\u673a\u8c03\u7528\u8fc7,  \u4e5f\u5c31\u662f\u8bf4\u4efb\u4f55\u4e00\u4e2a\u5bf9\u8c61\u7684finalize\u65b9\u6cd5\u90fd\u53ea\u4f1a\u88ab\u7cfb\u7edf\u6267\u884c\u4e00\u6b21\u3002\n+ \u5982\u679c\u6709\u5fc5\u8981\u6267\u884cfinalize\u65b9\u6cd5,  \u8be5\u5bf9\u8c61\u5219\u5c06\u4f1a\u88ab\u653e\u7f6e\u4e00\u4e2a\u6210\u4e3aF_Queue\u7684\u961f\u5217\u4e4b\u4e2d,  \u5e76\u5728\u7a0d\u540e\u7531\u4e00\u4e2a\u6709\u865a\u62df\u673a\u81ea\u52a8\u5efa\u7acb\u7684\u3001\u4f4e\u4f18\u5148\u7ea7\u7684Finalizer\u7ebf\u7a0b\u53bb\u89e6\u53d1\u8be5\u65b9\u6cd5\u3002\u4f46\u4e0d\u4f1a\u7b49\u5f85finalize\u6267\u884c\u7ed3\u675f\u3002\n+ finalize\u65b9\u6cd5\u662f\u5bf9\u8c61\u9003\u8131\u6b7b\u4ea1\u547d\u8fd0\u7684\u6700\u540e\u4e00\u6b21\u673a\u4f1a\u3002\u7a0d\u540eGC\u5c06\u5bf9F_Queue\u4e2d\u7684\u5bf9\u8c61\u8fdb\u884c\u7b2c\u4e8c\u6b21\u5c0f\u89c4\u6a21\u7684\u6807\u8bb0,  \u5982\u679c\u80fd\u4e0e\u5f15\u7528\u94fe\u4e0a\u4efb\u4f55\u4e00\u4e2a\u5bf9\u8c61\u5efa\u7acb\u5173\u7cfb,  \u5bf9\u8c61\u5c31\u4e0d\u4f1a\u88ab\u518d\u6b21\u6807\u8bb0,  \u4ece\u800c\u6d3b\u4e0b\u6765\u3002\n+ \u6ce8: \u5982\u679c\u6ca1\u6709\u5fc5\u8981\u6267\u884cfinalize\u5bf9\u8c61,  \u662f\u4e0d\u662f\u5c31\u4f1a\u7acb\u5373\u88abGC \u56de\u6536\u5462\n## \u56db\u3001\u65b9\u6cd5\u533a\u7684\u56de\u6536 ##\n+ \u5728\u5806\u4e2d, \u5c24\u5176\u662f\u65b0\u751f\u4ee3\u4e2d, \u5e38\u89c4\u5e94\u7528\u8fdb\u884c\u4e00\u6b21\u5783\u573e\u6536\u96c6\u4e00\u822c\u53ef\u4ee5\u56de\u653670%~95%\u7684\u7a7a\u95f4,  \u800c\u6c38\u4e45\u4ee3\u7684\u5783\u573e\u6536\u96c6\u6548\u7387\u8fdc\u4f4e\u4e8e\u6b64\u3002\n+ \u6c38\u4e45\u4ee3\u4e2d\u7684\u5783\u573e\u6536\u96c6\u4e3b\u8981\u56de\u6536\u4e24\u90e8\u5206\u5185\u5bb9:  \u5e9f\u5f03\u5e38\u91cf\u548c\u65e0\u7528\u7684\u7c7b\n+ \u5e9f\u5f03\u5e38\u91cf:  \u5f53\u524d\u7cfb\u7edf\u4e2d\u6ca1\u6709\u4efb\u4f55\u4e00\u4e2a\u5bf9\u8c61\u5f15\u7528\u8be5\u5e38\u91cf\u3002\n+ \u65e0\u7528\u7684\u7c7b:  \u8be5\u7c7b\u6240\u6709\u7684\u5b9e\u4f8b\u90fd\u5df2\u88ab\u56de\u6536(Java\u5806\u4e2d\u4e0d\u5b58\u5728\u8be5\u7c7b\u7684\u4efb\u4f55\u5b9e\u4f8b)\u3001\u52a0\u8f7d\u8be5\u7c7b\u7684ClassLoader\u88ab\u56de\u6536\u3001\u8be5\u7c7b\u5bf9\u5e94\u7684java.lang.Class\u5bf9\u8c61\u6ca1\u6709\u5728\u4efb\u4f55\u5730\u65b9\u88ab\u5f15\u7528,  \u65e0\u6cd5\u5728\u4efb\u4f55\u5730\u65b9\u901a\u8fc7\u53cd\u5c04\u8bbf\u95ee\u8be5\u7c7b\u7684\u65b9\u6cd5\u3002\n## \u4e94\u3001\u5783\u573e\u6536\u96c6\u7b97\u6cd5 ##\n\n### 1\u3001\u6807\u8bb0-\u6e05\u9664\u7b97\u6cd5:\n  \u9996\u5148\u662f\u6807\u8bb0\u51fa\u6240\u6709\u9700\u8981\u56de\u6536\u7684\u5bf9\u8c61,  \u5728\u6807\u8bb0\u5b8c\u6210\u540e\u56de\u6536\u6240\u6709\u88ab\u6807\u8bb0\u7684\u5bf9\u8c61\u3002\n\n\u7f3a\u70b9:\n\n- \u6548\u7387\u95ee\u9898:  \u6807\u8bb0\u548c\u6e05\u695a\u4e24\u4e2a\u8fc7\u7a0b\u7684\u6548\u7387\u90fd\u4e0d\u9ad8\n- \u7a7a\u95f4\u95ee\u9898:  \u6807\u8bb0\u6e05\u9664\u4e4b\u540e\u4f1a\u9020\u6210\u5927\u91cf\u4e0d\u8fde\u7eed\u7684\u5185\u5b58\u788e\u7247,  \u7a7a\u95f4\u788e\u7247\u592a\u591a\u5bfc\u81f4\u9700\u8981\u5206\u914d\u8f83\u5927\u5bf9\u8c61\u65f6,  \u65e0\u6cd5\u627e\u5230\u8db3\u591f\u7684\u8fde\u7eed\u5185\u5b58\u800c\u4e0d\u5f97\u4e0d\u63d0\u524d\u89e6\u53d1\u53e6\u4e00\u6b21\u5783\u573e\u56de\u6536\u52a8\u4f5c\u3002\n### 2\u3001\u590d\u5236\u7b97\u6cd5:\n\n- \u63cf\u8ff0: \u5c06\u53ef\u7528\u5185\u5b58\u6309\u5bb9\u91cf\u5212\u5206\u4e3a\u4e24\u5757,  \u6bcf\u6b21\u53ea\u662f\u7528\u5176\u4e2d\u7684\u4e00\u5757,  \u5f53\u8fd9\u4e00\u5757\u5185\u5b58\u7528\u5b8c\u4e86,  \u5c31\u5c06\u8fd8\u5b58\u6d3b\u7684\u5bf9\u8c61\u590d\u5236\u5230\u53e6\u5916\u4e00\u5757\u5185\u5b58,  \u7136\u540e\u518d\u628a\u5df2\u4f7f\u7528\u8fc7\u7684\u5185\u5b58\u7a7a\u95f4\u4e00\u6b21\u6027\u7684\u6e05\u7406\u6389\u3002\n- \u4f18\u70b9: \u4e0d\u7528\u8003\u8651\u5185\u5b58\u788e\u7247\n- \u7f3a\u70b9: \u5185\u5b58\u7f29\u5c0f\u4e3a\u539f\u6765\u7684\u4e00\u534a\n- \u5e94\u7528: \u76ee\u524d\u7684\u5546\u4e1a\u865a\u62df\u673a\u90fd\u91c7\u7528\u8fd9\u79cd\u6536\u96c6\u7b97\u6cd5\u6765\u56de\u6536\u65b0\u751f\u4ee3, \u5177\u4f53\u5982\u4e0b:\n\n    \u5c06\u5185\u5b58\u5206\u4e3a\u4e00\u5757\u8f83\u5927\u7684Eden\u7a7a\u95f4\u548c\u4e24\u5757\u8f83\u5c0f\u7684Survivior\u7a7a\u95f4,  \u6bcf\u6b21\u4f7f\u7528Eden\u548c\u5176\u4e2d\u4e00\u4e2aSurvivior\u7a7a\u95f4\u3002\n\n    \u5f53\u56de\u6536\u65f6,  \u5c06Eden\u533a\u548cSurvivior\u4e2d\u8fd8\u5b58\u6d3b\u7740\u7684\u5bf9\u8c61\u4e00\u6b21\u6027\u7684\u590d\u5236\u5230\u53e6\u5916\u4e00\u5757Survivior\u7a7a\u95f4\u4e0a,  \u6700\u540e\u6e05\u7406Eden\u533a\u548c\u53e6\u4e00\u5757Survivior\u533a\u3002\n\n    Hotspot \u865a\u62df\u673a\u9ed8\u8ba4Eden\u548cSurvivior\u7684\u5927\u5c0f\u6bd4\u4f8b\u662f8:1\n\n    \u5f53\u53e6\u5916\u4e00\u5757Survivior\u7a7a\u95f4\u6ca1\u6709\u8db3\u591f\u7684\u7a7a\u95f4\u5b58\u653e\u4e0a\u4e00\u6b21\u65b0\u751f\u4ee3\u5b58\u6d3b\u7684\u5bf9\u8c61\u65f6,  \u8fd9\u4e9b\u5bf9\u8c61\u5c06\u76f4\u63a5\u901a\u8fc7\u5206\u914d\u62c5\u4fdd\u673a\u5236\u8fdb\u5165\u8001\u5e74\u4ee3\u3002\n\n### 3\u3001\u6807\u8bb0-\u6574\u7406\u7b97\u6cd5:\n\n  \u6807\u8bb0\u4e4b\u540e,  \u8ba9\u6240\u6709\u5b58\u6d3b\u7684\u5bf9\u8c61\u90fd\u5411\u4e00\u7aef\u79fb\u52a8,  \u7136\u540e\u76f4\u63a5\u6e05\u7406\u6389\u7aef\u8fb9\u754c\u4ee5\u5916\u7684\u5185\u5b58\u3002\n\n### 4\u3001\u5206\u4ee3\u6536\u96c6\u7b97\u6cd5:\n\n  \u5f53\u524d\u865a\u62df\u673a\u7684\u5783\u573e\u6536\u96c6\u90fd\u91c7\u7528\u201d\u5206\u4ee3\u6536\u96c6\u201c\u7b97\u6cd5\u3002\u4e00\u822c\u662f\u628aJava\u5806\u5206\u4e3a\u65b0\u751f\u4ee3\u548c\u8001\u5e74\u4ee3;\n\n  \u65b0\u751f\u4ee3:  \u6bcf\u6b21\u5783\u573e\u6536\u96c6\u65f6\u90fd\u4f1a\u6709\u5927\u6279\u5bf9\u8c61\u6b7b\u53bb,  \u53ea\u6709\u5c11\u91cf\u5b58\u6d3b,  \u8be5\u533a\u57df\u91c7\u7528\u590d\u5236\u7b97\u6cd5\u3002\n\n  \u8001\u5e74\u4ee3: \u5bf9\u8c61\u5b58\u6d3b\u7387\u8f83\u9ad8,  \u800c\u4e14\u6ca1\u6709\u989d\u5916\u7a7a\u95f4\u5bf9\u5979\u8fdb\u884c\u5206\u914d\u62c5\u4fdd,  \u5c31\u5fc5\u987b\u4f7f\u7528\u201d\u6807\u8bb0-\u6e05\u7406\u201c\u6216\u8005\u201d\u6807\u8bb0-\u6574\u7406\u201c\u7b97\u6cd5\u8fdb\u884c\u56de\u6536\u3002\n\n## \u516d\u3001HotSpot \u7684\u7b97\u6cd5 ##\n\n### 1\u3001\u679a\u4e3e\u6839\u8282\u70b9:\n\n  GC\u505c\u987f:\n\n   \u53ef\u8fbe\u6027\u5206\u6790\u8981\u786e\u4fdd\u5728\u4e00\u4e2a\u4e00\u81f4\u6027\u7684\u5feb\u7167\u4e2d\u8fdb\u884c,  \u786e\u4fdd\u5206\u6790\u8fc7\u7a0b\u4e2d\u5f15\u7528\u5173\u7cfb\u4e0d\u518d\u53d8\u5316\u3002 GC\u8fdb\u884c\u65f6,  \u5fc5\u987b\u505c\u987f\u6240\u6709\u7684Java\u6267\u884c\u7ebf\u7a0b\u3002 Stop the World\n\n  \u5982\u4f55\u679a\u4e3e\u6839\u8282\u70b9:\n\n   GC Roots\u4e3b\u8981\u5728\u5168\u5c40\u6027\u7684\u5f15\u7528,  \u5982\u5e38\u91cf\u3001\u7c7b\u9759\u6001\u5c5e\u6027,  \u4e0e\u6267\u884c\u4e0a\u4e0b\u6587\u4e2d,  \u5982\u679c\u9010\u4e2a\u68c0\u67e5,  \u5fc5\u7136\u6d88\u8017\u5927\u91cf\u7684\u65f6\u95f4\u3002\n\n   \u4f7f\u7528OopMap:  HotSpot\u4f7f\u7528\u4e00\u7ec4OopMap\u6765\u8bb0\u5f55\u5bf9\u8c61\u7684\u5f15\u7528,  \u52a0\u5febGC Roots\u7684\u679a\u4e3e\u3002\n\n### 2\u3001\u5b89\u5168\u70b9:\n\n  \u80cc\u666f:           \u5982\u679c\u6bcf\u4e2a\u6307\u4ee4\u90fd\u751f\u6210\u5bf9\u5e94\u7684OopMap,  \u90a3\u4f1a\u9700\u8981\u5927\u91cf\u7684\u989d\u5916\u7a7a\u95f4,  \u8fd9\u6837GC\u7684\u6210\u672c\u5c06\u4f1a\u53d8\u5f97\u975e\u5e38\u9ad8\u3002\n\n  \u89e3\u51b3\u529e\u6cd5:     \u53ea\u5728\u7279\u5b9a\u4f4d\u7f6e\u8bb0\u5f55\u5bf9\u8c61\u7684\u5f15\u7528\u60c5\u51b5,  \u8fd9\u4e9b\u7279\u70b9\u7684\u4f4d\u7f6e\u6211\u4eec\u79f0\u4e4b\u4e3a\u5b89\u5168\u70b9\u3002\n\n  \u5b89\u5168\u70b9\u7684\u9009\u5b9a\u6761\u4ef6: **\u662f\u5426\u5177\u6709\u8ba9\u7a0b\u5e8f\u957f\u65f6\u95f4\u6267\u884c\u7684\u6307\u4ee4 (\u539f\u56e0)**\n\n  \u5982\u4f55\u4fdd\u8bc1GC\u65f6,  \u8ba9\u6240\u6709\u7ebf\u7a0b\u90fd\u8dd1\u5230\u6700\u8fd1\u7684\u5b89\u5168\u70b9\u4e0a\u518d\u505c\u987f\u4e0b\u6765:\n\n- \u4e3b\u52a8\u5f0f\u4e2d\u65ad:\n\nGC\u9700\u8981\u4e2d\u65ad\u7ebf\u7a0b\u7684\u65f6\u5019,  \u4e0d\u76f4\u63a5\u5bf9\u7ebf\u7a0b\u64cd\u4f5c,  \u800c\u662f\u7b80\u5355\u7684\u8bbe\u7f6e\u4e00\u4e2a\u6807\u5fd7,  \u800c\u662f\u5728\u6267\u884c\u5230\u5b89\u5168\u70b9\u65f6\u8f6e\u8bad\u8be5\u6807\u5fd7,  \u5982\u679c\u6807\u5fd7\u4e3a\u771f\u5c31\u81ea\u5df1\u4e2d\u65ad\u6302\u8d77\u3002\n\n- \u62a2\u5148\u5f0f\u4e2d\u65ad:\n\nGC\u53d1\u751f\u65f6,  \u9996\u5148\u628a\u6240\u6709\u7684\u7ebf\u7a0b\u5168\u90e8\u4e2d\u65ad,  \u5982\u679c\u53d1\u73b0\u6709\u7ebf\u7a0b\u4e2d\u65ad\u7684\u5730\u65b9\u4e0d\u5728\u5b89\u5168\u70b9\u4e0a,  \u5c31\u6062\u590d\u7ebf\u7a0b,  \u8ba9\u4ed6\u201d\u8dd1\u201c\u5230\u5b89\u5168\u70b9\u4e0a\u3002\n\n\u73b0\u5728\u51e0\u4e4e\u6ca1\u6709\u865a\u62df\u673a\u91c7\u7528\u8fd9\u79cd\u65b9\u5f0f\u6765\u6682\u505c\u7ebf\u7a0b\u4ee5\u54cd\u5e94GC\u4e8b\u4ef6\n### 3\u3001\u5b89\u5168\u533a\u57df:\n\n- \u80cc\u666f:  \u5b89\u5168\u70b9\u673a\u5236\u4fdd\u8bc1\u4e86\u7a0b\u5e8f\u6267\u884c\u65f6,  \u5728\u4e0d\u592a\u957f\u65f6\u95f4\u5c31\u4f1a\u9047\u5230\u53ef\u8fdb\u5165GC\u7684\u5b89\u5168\u70b9,  \u5982\u679c\u7a0b\u5e8f\u6ca1\u6709\u6267\u884c\u5462,  \u6bd4\u5982\u51fa\u4e8esleep\u6216\u8005blocked\u72b6\u6001,\n\n  \u8fd9\u65f6\u5019\u7ebf\u7a0b\u65e0\u6cd5\u54cd\u5e94jvm\u7684\u4e2d\u65ad\u8bf7\u6c42,  Jvm\u4e5f\u663e\u7136\u4e0d\u592a\u53ef\u80fd\u7b49\u5f85\u7ebf\u7a0b\u88ab\u91cd\u65b0\u5206\u914dCPU\u65f6\u95f4\u3002\n\n- \u5b89\u5168\u533a\u57df: \u5728\u4e00\u6bb5\u4ee3\u7801\u4e4b\u4e2d,  \u5f15\u7528\u5173\u7cfb\u4e0d\u4f1a\u53d1\u751f\u53d8\u5316,  \u5728\u8fd9\u4e2a\u533a\u57df\u4e2d\u4efb\u610f\u5730\u65b9\u5f00\u59cbGC\u90fd\u662f\u5b89\u5168\u7684\n- \u5b9e\u73b0:  \u5f53\u7ebf\u7a0b\u6267\u884c\u5230\u5b89\u5168\u533a\u57df\u540e,  \u9996\u5148\u4f1a\u6807\u793a\u81ea\u5df1\u8fdb\u5165\u4e86\u5b89\u5168\u533a\u57df,  \u90a3\u6837,  \u5f53\u5728\u8fd9\u6bb5\u65f6\u95f4\u5185\u53d1\u751fGC\u65f6,  \u5c31\u4e0d\u7528\u7ba1\u8fd9\u6837\u7684\u7ebf\u7a0b\u4e86, \u5f53\u7ebf\u7a0b\u8981\u79bb\u5f00\n\n  \u8be5\u533a\u57df\u65f6,  \u8981\u68c0\u67e5\u7cfb\u7edf\u662f\u5426\u5df2\u7ecf\u5b8c\u6210\u4e86\u6839\u8282\u70b9\u679a\u4e3e,  \u5982\u679c\u6ca1\u5b8c\u6210,  \u5b83\u5c31\u5fc5\u987b\u7b49\u5f85\u76f4\u5230\u6536\u5230\u53ef\u4ee5\u5b89\u5168\u79bb\u5f00\u5b89\u5168\u533a\u57df\u7684\u4fe1\u53f7\u3002\n\n## \u4e03, \u5783\u573e\u6536\u96c6\u5668 ##\n\n\u76ee\u524d\u65b0\u751f\u4ee3\u5783\u573e\u6536\u96c6\u5668\u6709Serial, ParNew, Parallel Scavenge;  \u8001\u5e74\u4ee3\u6536\u96c6\u5668\u6709CMS, Serial Old, Parallel Old; G1\u8fd9\u6b3e\u5783\u573e\u6536\u96c6\u5668\u65e2\u80fd\u7528\u4e8e\u65b0\u751f\u4ee3\u53c8\u80fd\u7528\u4e8e\u8001\u5e74\u4ee3\u3002\n\n### 1, Serial\u6536\u96c6\u5668:\n\n\u63cf\u8ff0:      \u5355\u7ebf\u7a0b\u6536\u96c6\u5668; \u4ed6\u8fdb\u884c\u5783\u573e\u6536\u96c6\u65f6, \u5fc5\u987b\u6682\u505c\u6240\u6709\u7684\u5de5\u4f5c\u7ebf\u7a0b,  \u76f4\u5230\u5b83\u6536\u96c6\u7ed3\u675f; \u65b0\u751f\u4ee3\u91c7\u53d6\u590d\u5236\u7b97\u6cd5\u6682\u505c\u6240\u6709\u7528\u6237\u7ebf\u7a0b,  \u8001\u5e74\u4ee3\u91c7\u53d6\u6807\u8bb0-\u6574\u7406\u7b97\u6cd5\u6682\u505c\u6240\u6709\u7528\u6237\u7ebf\u7a0b\u3002\n\n\u73b0\u72b6:      \u76ee\u524d\u4e3a\u6b62,  \u4f9d\u7136\u662f\u865a\u62df\u673a\u8fd0\u884c\u5728Client\u6a21\u5f0f\u4e0b\u7684\u9ed8\u8ba4\u65b0\u751f\u4ee3\u6536\u96c6\u5668\u3002\u6536\u96c6\u51e0\u5341\u5146\u751a\u81f3\u4e00\u4e24\u767e\u5146\u7684\u65b0\u751f\u4ee3,  \u505c\u987f\u65f6\u95f4\u5b8c\u5168\u53ef\u4ee5\u63a7\u5236\u5728\u51e0\u5341\u6beb\u79d2\u6700\u591a\u4e00\u767e\u6beb\u79d2\u4ee5\u5185\u3002\n\n### 2, ParNew\u6536\u96c6\u5668:\n\n\u63cf\u8ff0:      \u5176\u5b9e\u5c31\u662fSerial\u7684\u591a\u7ebf\u7a0b\u7248\u672c; \u4f7f\u7528\u591a\u7ebf\u7a0b\u8fdb\u884c\u5783\u573e\u6536\u96c6; \u65b0\u751f\u4ee3\u91c7\u53d6\u590d\u5236\u7b97\u6cd5\u6682\u505c\u6240\u6709\u7528\u6237\u7ebf\u7a0b, \u8001\u5e74\u4ee3\u91c7\u7528\u6807\u8bb0-\u6574\u7406\u7b97\u6cd5\u6682\u505c\u6240\u6709\u7528\u6237\u7ebf\u7a0b\u3002\n\n\u73b0\u72b6:      \u8bb8\u591a\u8fd0\u884c\u5728Server\u6a21\u5f0f\u4e0b\u7684\u865a\u62df\u673a\u9ed8\u8ba4\u7684\u65b0\u751f\u4ee3\u6536\u96c6\u5668; \u4e00\u4e2a\u4e0e\u6027\u80fd\u65e0\u5173\u7684\u539f\u56e0\u662f: \u9664\u4e86Serial\u6536\u96c6\u5668\u5916,  \u76ee\u524d\u53ea\u6709\u5b83\u80fd\u4e0eCMS\u6536\u96c6\u5668\u914d\u5408\u4f7f\u7528\u3002\n\n\u6ce8:\n\n- ParNew\u6536\u96c6\u5668\u662f\u4f7f\u7528-XX: +UseConcMarkSweepGC\u9009\u9879\u540e\u7684\u9ed8\u8ba4\u65b0\u751f\u4ee3\u6536\u96c6\u5668;  \u4e5f\u53ef\u4ee5\u4f7f\u7528-XX: UseParNewGC\u6307\u5b9a\u5b83\n- \u53ef\u4ee5\u4f7f\u7528-XX: +ParallelGCThreads\u53c2\u6570\u9650\u5236\u5783\u573e\u6536\u96c6\u7684\u7ebf\u7a0b\u6570\n### 3, Parallel Scavenge\u6536\u96c6\u5668:\n\n- \u63cf\u8ff0:      Parallel Scavenge\u6536\u96c6\u5668\u7684\u76ee\u6807\u662f\u8fbe\u5230\u4e00\u4e2a\u53ef\u63a7\u5236\u7684\u541e\u5410\u91cf\u3002\u6240\u8c13\u541e\u5410\u91cf\u5c31\u662fcpu\u7528\u4e8e\u8fd0\u884c\u7528\u6237\u4ee3\u7801\u7684\u65f6\u95f4\u4e0eCPU\u603b\u6d88\u8017\u65f6\u95f4\u7684\u6bd4\u503c,  \u5373\u541e\u5410\u91cf=\u8fd0\u884c\u7528\u6237\u4ee3\u7801\u65f6\u95f4/\uff08\u8fd0\u884c\u7528\u6237\u4ee3\u7801\u65f6\u95f4+\u5783\u573e\u6536\u96c6\u65f6\u95f4\uff09\n- \u53c2\u6570:\n\n\u6700\u5927\u5783\u573e\u6536\u96c6\u505c\u987f\u65f6\u95f4\u8bbe\u7f6e: -XX: MaxGCPauseMillis,  \u8bbe\u7f6e\u503c\u662f\u4e00\u4e2a\u5927\u4e8e0\u7684\u6beb\u79d2\u6570,  \u6536\u96c6\u5668\u5c06\u5c3d\u53ef\u80fd\u5730\u4fdd\u8bc1\u5185\u5b58\u56de\u6536\u82b1\u8d39\u7684\u65f6\u95f4\u4e0d\u8d85\u8fc7\u8bbe\u5b9a\u503c\u3002\n\nGC\u505c\u987f\u65f6\u95f4\u7684\u7f29\u77ed\u662f\u4ee5\u727a\u7272\u541e\u5410\u91cf\u548c\u65b0\u751f\u4ee3\u7a7a\u95f4\u6765\u6362\u53d6\u7684, \u53ef\u80fd\u4f1a\u628a\u65b0\u751f\u4ee3\u8c03\u5c0f\u4e00\u4e9b,  \u4ee5\u4f7f\u5728\u89c4\u5b9a\u7684\u65f6\u95f4\u5185\u53ef\u4ee5\u5b8c\u6210\u5783\u573e\u56de\u6536;  \u4e5f\u53ef\u80fd\u4e3a\u4e86\u51cf\u5c0f\u505c\u987f\u65f6\u95f4\u800c\u589e\u5927GC\u9891\u7387\u3002\n\n-XX:+GCTimeRatio:\u8bbe\u7f6e\u4e00\u4e2a\u5927\u4e8e0\u4e14\u5c0f\u4e8e100\u7684\u6574\u6570\u503c,  \u4e5f\u5c31\u662f\u5783\u573e\u6536\u96c6\u65f6\u95f4\u5360\u603b\u65f6\u95f4\u7684\u6bd4\u7387, \u5982\u679c\u8bbe\u7f6e\u6210x,  GC\u65f6\u95f4\u7684\u5360\u6bd4\u5c31\u662f 1/\uff081+x\uff09\n\n-XX: +UseAdaptiveSizePolicy:  \u8fd9\u662f\u4e00\u4e2a\u5f00\u5173\u53c2\u6570,  \u6253\u5f00\u8fd9\u4e2a\u53c2\u6570\u540e,  \u4e0d\u9700\u8981\u624b\u5de5\u6307\u5b9a\u65b0\u751f\u4ee3\u5927\u5c0f, Eden\u548cSurvior\u533a\u7684\u6bd4\u4f8b, \u664b\u5347\u8001\u5e74\u4ee3\u5bf9\u8c61\u5e74\u9f84\u7b49\u7ec6\u8282\u53c2\u6570\u3002 \u865a\u62df\u673a\u4f1a\u6839\u636e\u5f53\u524d\u7cfb\u7edf\u7684\u8fd0\u884c\u60c5\u51b5\u52a8\u6001\u8c03\u6574\u8fd9\u4e9b\u53c2\u6570\u4ee5\u63d0\u4f9b\u6700\u5408\u9002\u7684\u505c\u987f\u65f6\u95f4\u6216\u8005\u6700\u5927\u541e\u5410\u91cf\u3002\n\n  \u4e0eParNew\u6536\u96c6\u5668\u7684\u533a\u522b: \u53ef\u4ee5\u8bbe\u7f6e\u541e\u5410\u91cf\u548c\u6700\u5927\u505c\u987f\u65f6\u95f4;  \u5177\u6709\u81ea\u9002\u5e94\u8c03\u8282\u7b56\u7565\u3002\n\n### 4, Serial Old\u6536\u96c6\u5668:\n\n  \u63cf\u8ff0: Serial Old\u662fSerial\u6536\u96c6\u5668\u7684\u8001\u5e74\u4ee3\u7248\u672c,  \u5355\u7ebf\u7a0b\u6536\u96c6\u5668,  \u4f7f\u7528\u201c\u6807\u8bb0-\u6574\u7406\u201d\u7b97\u6cd5\u3002\n\n### 5, Parallel Old\u6536\u96c6\u5668:\n\n  \u63cf\u8ff0:  Parallel Scavenge\u6536\u96c6\u5668\u7684\u8001\u5e74\u4ee3\u7248\u672c; \u541e\u5410\u91cf\u4f18\u5148\u7684\u6536\u96c6\u5668\n\n### 6, CMS\u6536\u96c6\u5668:  Concurrent Mark Sweep\n\n  \u63cf\u8ff0: \u4ee5\u83b7\u53d6\u6700\u77ed\u56de\u6536\u505c\u987f\u65f6\u95f4\u4e3a\u76ee\u6807; \u57fa\u4e8e\u201c\u6807\u8bb0-\u6e05\u9664\u201d\u7b97\u6cd5\n  \u6b65\u9aa4:\n\n- \u521d\u59cb\u6807\u8bb0: \u6807\u8bb0GC Roots\u80fd\u76f4\u63a5\u5173\u8054\u5230\u7684\u5bf9\u8c61,  \u901f\u5ea6\u5f88\u5feb;  \u8be5\u9636\u6bb5\u9700\u8981stop the world\n- \u5e76\u53d1\u6807\u8bb0: \u8fdb\u884cGC Roots trace,  \u5e76\u53d1\u8fdb\u884c\n- \u91cd\u65b0\u6807\u8bb0: \u4fee\u6b63\u5e76\u53d1\u671f\u95f4\u56e0\u4e3a\u7528\u6237\u7a0b\u5e8f\u7ee7\u7eed\u8fd0\u884c\u800c\u5bfc\u81f4\u53d8\u52a8\u7684\u90a3\u4e00\u90e8\u5206\u5bf9\u8c61\u7684\u6807\u8bb0\u8bb0\u5f55\u3002\n- \u5e76\u53d1\u6e05\u9664:\n\n\u7f3a\u70b9:\n\n- CMS\u6536\u96c6\u5668\u5bf9CPU\u8d44\u6e90\u975e\u5e38\u654f\u611f,  \u5b83\u867d\u7136\u4e0d\u4f1a\u5bfc\u81f4\u7528\u6237\u7ebf\u7a0b\u505c\u987f,  \u4f46\u662f\u7531\u4e8e\u5360\u7528\u4e86\u4e00\u90e8\u5206cpu\u65f6\u95f4\u800c\u5bfc\u81f4\u5e94\u7528\u53d8\u6162,  \u603b\u541e\u5410\u91cf\u4f1a\u964d\u4f4e\u3002\n\n- CMS\u6536\u96c6\u5668\u65e0\u6cd5\u5904\u7406\u6d6e\u52a8\u5783\u573e,  \u53ef\u80fd\u51fa\u73b0Concurrent Mode Failure\u5931\u8d25,  \u5bfc\u81f4\u53e6\u4e00\u6b21full gc\u7684\u4ea7\u751f\u3002\u5e76\u53d1\u6e05\u7406\u8fc7\u7a0b\u4e2d,  \u7528\u6237\u7ebf\u7a0b\u751f\u6210\u7684\u5783\u573e\u4e0d\u80fd\u88ab\u672c\u6b21\u56de\u6536\u6240\u6e05\u7406,  \u53ea\u80fd\u7b49\u5230\u4e0b\u6b21GC\u65f6\u6e05\u7406,  \u8fd9\u90e8\u5206\u5783\u573e\u79f0\u4e3a\u201c\u6d6e\u52a8\u5783\u573e\u201d;  \u6bcf\u6b21\u5783\u573e\u6e05\u7406\u65f6,  \u90fd\u8981\u4e3a\u7528\u6237\u7ebf\u7a0b\u7684\u8fd0\u884c\u7559\u51fa\u5185\u5b58\u7a7a\u95f4,  \u6240\u4ee5\u4e0d\u80fd\u7b49\u5230\u6ca1\u6709\u7a7a\u95f4\u65f6\u624d\u56de\u6536\u3002\u5982\u679cCMS\u8fd0\u884c\u671f\u95f4\u9884\u7559\u7684\u5185\u5b58\u7a7a\u95f4\u65e0\u6cd5\u6ee1\u8db3\u7a0b\u5e8f\u9700\u8981,  \u5c31\u4f1a\u51fa\u51fa\u73b0\u4e00\u6b21\u201cConcurrent Mode Failure\u201d\u5931\u8d25,  \u8fd9\u65f6\u865a\u62df\u673a\u5c06\u542f\u52a8\u540e\u80cc\u9884\u6848: \u4e34\u65f6\u4f7f\u7528Serial Old\u6536\u96c6\u5668\u91cd\u65b0\u8fdb\u884c\u8001\u5e74\u4ee3\u7684\u5783\u573e\u6536\u96c6;  \u4f7f\u7528-XX: CMSInitiatingOccupancyFraction\u8bbe\u7f6e\u9608\u503c\n\n- CMS\u662f\u57fa\u4e8e\u201c\u6807\u8bb0-\u6e05\u7406\u201d\u7b97\u6cd5\u5b9e\u73b0\u7684\u6536\u96c6\u5668,  \u610f\u5473\u7740\u6536\u96c6\u7ed3\u675f\u65f6\u4f1a\u4ea7\u751f\u5927\u91cf\u7684\u7a7a\u95f4\u788e\u7247\u3002 \u7a7a\u95f4\u788e\u7247\u8fc7\u591a\u65f6,  \u4f1a\u56e0\u4e3a\u65e0\u6cd5\u627e\u5230\u8db3\u591f\u8fde\u7eed\u7684\u5185\u5b58\u800c\u65e0\u6cd5\u4e3a\u5927\u5bf9\u8c61\u5206\u914d\u5185\u5b58,  \u9020\u6210FULL GC\n\n## \u516b\u3001 \u7406\u89e3GC\u65e5\u5fd7 ##\n\n![](http://jishu.family.baidu.com/portal/lib/tpubbs/ueditor/themes/default/images/spacer.gif)\n\n### 1.\u505c\u987f\u7c7b\u578b:\n[GC : minor GC, [Full GC:  full GC\n\n### 2.GC\u7684\u4f4d\u7f6e:\n[DefNew: Default New Generation      Serial\u6536\u96c6\u5668\u65b0\u751f\u4ee3\n[ParNew:  Parallel \u65b0\u751f\u4ee3\n[PSYoungGen:  Parallel Scanvenge\u6536\u96c6\u5668\u7684\u65b0\u751f\u4ee3\n[Tenured:   \u8001\u5e74\u4ee3\n[Perm:  \u6c38\u4e45\u4ee3\n\n### 3.\u56de\u6536\u524d\u540e\u5185\u5b58\u7a7a\u95f4\u53d8\u5316:\n35592K -> 1814K(36288K): \u56de\u6536\u524d\u5185\u5b58\u7a7a\u95f4\u5927\u5c0f -> \u56de\u6536\u540e\u5185\u5b58\u7a7a\u95f4\u5927\u5c0f(\u603b\u7684\u5185\u5b58\u7a7a\u95f4\u5927\u5c0f\n## \u4e5d\u3001\u5185\u5b58\u5206\u914d\u4e0e\u56de\u6536\u7b56\u7565:  ##\n\n \u5927\u7684\u65b9\u5411\u8bf4,  \u5bf9\u8c61\u4e3b\u8981\u5206\u914d\u5728\u5806\u7684\u65b0\u751f\u4ee3\u7684Eden\u533a\u4e0a, \u5982\u679c\u542f\u52a8\u4e86\u672c\u5730\u7ebf\u7a0b\u5206\u914d\u7f13\u51b2,  \u5c06\u6309\u7ebf\u7a0b\u4f18\u5148\u5728TLAB\u4e0a\u5206\u914d\u3002\n\n1. \u5bf9\u8c61\u4f18\u5148\u5728Eden\u4e0a\u5206\u914d:\n\u5f53Eden\u4e0a\u6ca1\u6709\u8db3\u591f\u7684\u7a7a\u95f4\u5206\u914d\u65f6,  \u865a\u62df\u673a\u4f1a\u53d1\u8d77\u4e00\u6b21Minor GC,  \u5c06Eden\u4e0a\u548c\u4e00\u4e2asurvivior\u4e0a\u5b58\u6d3b\u7684\u5bf9\u8c61\u590d\u5236\u5230\u53e6\u5916\u4e00\u4e2aSurvivor\u7a7a\u95f4\u4e0a,  \u5982\u679c\u53e6\u5916\u4e00\u4e2aSurvivior\u7a7a\u95f4\u4e0a\u6ca1\u6709\u8db3\u591f\u7684\u7a7a\u95f4,  \u5c06\u4f1a\u5c06\u5b58\u6d3b\u7684\u5bf9\u8c61\u76f4\u63a5\u79fb\u52a8\u5230\u8001\u5e74\u4ee3,  \u5982\u679c\u8001\u5e74\u4ee3\u4e5f\u6ca1\u6709\u8db3\u591f\u7684\u7a7a\u95f4,  \u865a\u62df\u673a\u5c06\u4f1a\u53d1\u8d77\u4e00\u6b21Full GC,  \u5982\u679cFull GC\u4e4b\u540e\u8fd8\u662f\u653e\u4e0d\u4e0b,  \u5219\u4f1a\u62a5OOM\u5f02\u5e38\u3002\n\n1. \u5927\u5bf9\u8c61\u4f1a\u76f4\u63a5\u8fdb\u5165\u8001\u5e74\u4ee3:\n\u865a\u62df\u673a\u63d0\u4f9b\u4e00\u4e2a\u53c2\u6570,  -XX:PretenureSizeThreshould, \u5927\u4e8e\u8fd9\u4e2a\u503c\u7684\u5bf9\u8c61\u76f4\u63a5\u5728\u8001\u5e74\u4ee3\u5206\u914d,  \u907f\u514dEden\u533a\u57dfSurvivior\u533a\u7684\u6765\u56de\u590d\u5236\u3002\n\n1. \u957f\u671f\u5b58\u6d3b\u7684\u5bf9\u8c61\u76f4\u63a5\u8fdb\u5165\u8001\u5e74\u4ee3:\n\u865a\u62df\u673a\u6bcf\u4e2a\u5bf9\u8c61\u5b9a\u4e49\u4e86\u4e00\u4e2a\u5bf9\u8c61\u5e74\u9f84\u8ba1\u7b97\u5668,  \u6bcf\u7ecf\u8fc7\u4e00\u6b21Minor GC,  \u5bf9\u8c61\u5e74\u9f84\u52a0\u4e00,  \u5f53\u5bf9\u8c61\u5e74\u9f84\u8fbe\u5230\u4e00\u5b9a\u6570\u65f6\uff08\u9ed8\u8ba415\uff09, \u5c06\u4f1a\u664b\u5347\u5230\u8001\u5e74\u4ee3\u3002 \u9608\u503c\u8bbe\u7f6e\u53c2\u6570: -XX: MaxTenurngThreshould\n\n1. \u52a8\u6001\u5bf9\u8c61\u5e74\u9f84\u5224\u65ad:\n\u5982\u679cSurvivior\u7a7a\u95f4\u4e2d\u76f8\u540c\u5e74\u9f84\u7684\u5bf9\u8c61\u7684\u5927\u5c0f\u603b\u548c\u5927\u4e8esurvivior\u7a7a\u95f4\u7684\u4e00\u534a\u65f6,  \u5927\u4e8e\u7b49\u4e8e\u8be5\u5e74\u9f84\u7684\u5bf9\u8c61\u5c31\u53ef\u4ee5\u76f4\u63a5\u8fdb\u5165\u8001\u5e74\u4ee3\u3002\n\n1. \u7a7a\u95f4\u5206\u914d\u62c5\u4fdd:\n\u51c6\u5907Minor GC\u65f6,  \u865a\u62df\u673a\u9996\u5148\u4f1a\u68c0\u67e5\u8001\u5e74\u4ee3\u7684\u5269\u4f59\u7a7a\u95f4\u662f\u5426\u5927\u4e8e\u65b0\u751f\u4ee3\u6240\u6709\u5bf9\u8c61\u7684\u603b\u7a7a\u95f4,  \u5982\u679c\u5927\u4e8e,  \u5219\u53ef\u4ee5\u8fdb\u884cMinor GC;  \u5426\u5219,  \u4f1a\u53bb\u67e5\u770b\u662f\u5426\u5141\u8bb8\u62c5\u4fdd\u5931\u8d25\uff08HandlePromotionFailure\uff09,  \u5982\u679c\u4e0d\u5141\u8bb8, \u865a\u62df\u673a\u4f1a\u76f4\u63a5\u53d1\u8d77\u4e00\u6b21Full GC;  \u5982\u679c\u5141\u8bb8,  \u865a\u62df\u673a\u4f1a\u53bb\u68c0\u67e5\u8001\u5e74\u4ee3\u5269\u4f59\u7a7a\u95f4\u662f\u5426\u5927\u4e8e\u5386\u6b21\u664b\u5347\u5230\u8001\u5e74\u4ee3\u5bf9\u8c61\u7684\u5e73\u5747\u5927\u5c0f,  \u5982\u679c\u4e0d\u5927\u4e8e,  \u5219\u4f1a\u53d1\u8d77\u4e00\u6b21Full GC;  \u5982\u679c\u5927\u4e8e,  \u5219\u4f1a\u53d1\u8d77Minor GC,  \u5982\u679c\u8fd9\u65f6\u53d1\u73b0,  \u8001\u5e74\u4ee3\u6ca1\u6709\u8db3\u591f\u7a7a\u95f4\u6765\u5bb9\u7eb3\u65b0\u751f\u4ee3\u664b\u5347\u6765\u7684\u5bf9\u8c61\u7684\u603b\u5927\u5c0f,  \u8fd9\u65f6\u4ecd\u8981\u89e6\u53d1\u4e00\u6b21Full GC,  \u8fd9\u4e2a\u5708\u5b50\u7ed5\u7684\u5c31\u6709\u70b9\u5927\u4e86\u3002\n\n## \u5341\u3001Full GC \u548cMinor GC:  ##\n\n Minor GC:  \u53d1\u751f\u5728\u65b0\u751f\u4ee3,  \u901f\u5ea6\u6bd4\u8f83\u5feb\n\n Full GC:  \u53d1\u751f\u5728\u8001\u5e74\u4ee3,  \u4e00\u822c\u90fd\u4f34\u968f\u8fd9\u4e00\u6b21Minor GC\n\n Minor GC\u4e00\u822c\u90fd\u8981\u6bd4Minor GC\u6162\u5341\u500d\u4ee5\u4e0a, \u56e0\u4e3a\u65b0\u751f\u4ee3\u91c7\u7528\u590d\u5236\u7b97\u6cd5,  \u901f\u5ea6\u6bd4\u8f83\u5feb;  \u800c\u8001\u5e74\u4ee3\u4e00\u822c\u91c7\u7528\u6807\u8bb0-\u6e05\u7406/\u6574\u7406\u7b97\u6cd5;\n\n\n\n\u672c\u6587\u8f6c\u81ea [JVM\u5783\u573e\u6536\u96c6\u5668\u4e0e\u5185\u5b58\u5206\u914d\u7b56\u7565 -  \u738b\u989c\u57f9\u7684\u4e2a\u4eba\u7a7a\u95f4 - \u5f00\u6e90\u4e2d\u56fd\u793e\u533a](http://my.oschina.net/wangyanpei/blog/489490)", 
                        "published_at": 1439106240000, 
                        "published_by": 1, 
                        "slug": "jvm\u5783\u573e\u6536\u96c6\u5668\u4e0e\u5185\u5b58\u5206\u914d\u7b56\u7565", 
                        "status": "published", 
                        "title": "JVM\u5783\u573e\u6536\u96c6\u5668\u4e0e\u5185\u5b58\u5206\u914d\u7b56\u7565", 
                        "updated_at": 1439106240000, 
                        "updated_by": 1, 
                        "uuid": "bbf75ef8-cba1-481e-b55d-188e9c1adc48"
                    }, 
                    {
                        "created_at": 1431583320000, 
                        "created_by": 1, 
                        "id": 10, 
                        "language": "en_US", 
                        "markdown": "## \u76ee\u5f55\n\n1. [\u524d\u8a00](#Begin)\n1. [\u6240\u6709\u4eba\u7684\u56f0\u5883](#Diff)\n1. [\u5fc3\u667a\u7684\u529b\u91cf](#MindPower)\n1. [\u5f00\u542f\u81ea\u5df1\u7684\u5fc3\u667a](#OpenMind)\n1. [\u901a\u8fc7\u7ba1\u7406\u81ea\u5df1\u4e0e\u65f6\u95f4\u505a\u670b\u53cb](#ManageYourself)\n1. [\u5f00\u62d3\u6211\u4eec\u7684\u5fc3\u667a](#OpenUp)\n1. [\u5c0f\u5fc3\u6240\u8c13\"\u6210\u529f\u5b66\"](#WatchOut)\n1. [\u66f4\u591a\u601d\u8003](#More)\n1. [\u4ece\u6b64\u65f6\u6b64\u523b\u5f00\u59cb\u6539\u53d8](#Change)\n\n## <a id=\"Begin\">\u524d\u8a00</a>\n\n\u4eba\u751f\u662f\u9a6c\u62c9\u677e\uff0c\u80dc\u8005\u4e0d\u4e00\u5b9a\u662f\u8dd1\u5f97\u6700\u5feb\u7684\u3002\n\n\u4ee5\u6211\u4e2a\u4eba\u7684\u4f53\u4f1a\uff0c\u6211\u975e\u5e38\u9f13\u52b1\u6bcf\u4e2a\u5e74\u8f7b\u4eba\u80fd\u82b1\u4e0a\u51e0\u5e74\u65f6\u95f4\u5230\u56fd\u5916\u8d70\u4e00\u8d70\uff0c\u5b66\u4e00\u5b66\u3002\u6559\u80b2\u7684\u6839\u672c\u5176\u5b9e\u53ea\u4e0d\u8fc7\u662f\u201c\u89c1\u591a\u8bc6\u5e7f\u201d\u3002\u7136\u540e\u518d\u75285\u523010\u5e74\u65f6\u95f4\u5b9a\u4e49\u4e00\u4e2a\u5c5e\u4e8e\u81ea\u5df1\u7684\u4eba\u751f\u65b9\u5411\uff0c\u4e3a\u4e4b\u594b\u6597\uff0c\u4e3a\u4e4b\u575a\u6301\uff0c\u4e0d\u77e5\u505c\u6b47\u5730\u52aa\u529b\u4e0a10\u5e7420\u5e74\u3002\u6709\u4e9b\u6210\u529f\u9760\u8fd0\u6c14\uff0c\u53ef\u662f\u6301\u7eed\u7684\u6210\u529f\u5374\u4e0e\u8fd0\u6c14\u65e0\u5173\u3002\n\n## <a id=\"Diff\">\u6240\u6709\u4eba\u7684\u56f0\u5883</a>\n\n\u82cf\u683c\u62c9\u5e95\u63d0\u793a\u6240\u8c13\u7684\u601d\u8003\u8fc7\u7a0b\u4e0d\u8fc7\u662f\u201c\u63d0\u95ee\u548c\u56de\u7b54\u201d\u3002\n\n\u6211\u4e00\u76f4\u76f8\u4fe1\uff0c\u6559\u662f\u6700\u597d\u7684\u5b66\u4e60\u65b9\u6cd5\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5728\u4e0d\u505c\u5730\u4e3a\u5b66\u751f\u89e3\u91ca\u7591\u95ee\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u81ea\u5df1\u5b66\u5230\u7684\u4e1c\u897f\u66f4\u591a\uff0c\u800c\u66f4\u591a\u7684\u7a0b\u5e8f\u8d85\u4e4e\u60f3\u8c61\u3002\n\n## <a id=\"MindPower\">\u5fc3\u667a\u7684\u529b\u91cf</a>\n\n\u5236\u4f5c\u4e00\u4e2a\u201c\u4efb\u52a1\u5217\u8868\u201d\uff0c\u5176\u5b9e\u8c01\u90fd\u4f1a\uff1b\u5206\u6e05\u695a\u201c\u91cd\u8981\u201d\u4e0e\u201c\u5c06\u8981\u201d\uff0c\u6216\u8005\u201c\u7d27\u6025\u201d\u4e0e\u201c\u975e\u7d27\u6025\u201d\u4e5f\u6ca1\u6709\u8c01\u4e0d\u4f1a\u3002\u56e0\u201c\u4e0d\u77e5\u9053\u5b66\u4e60\u6709\u4ec0\u4e48\u7528\u201d\u800c\u62d2\u7edd\u5b66\u4e60\u7684\u4eba\uff0c\u4f1a\u5728\u63a5\u4e0b\u6765\u7684\u65e5\u5b50\u91cc\u865a\u5ea6\u65e0\u6570\u5149\u9634\uff0c\u54ea\u6015\u4ed6\u4eec\u5929\u5929\u201c\u79d1\u5b66\u5730\u201d\u5236\u5b9a\u8ba1\u5212\uff0c\u7f16\u5236\u201c\u4efb\u52a1\u5217\u8868\u201d\u3002\u800c\u4e0e\u4e4b\u76f8\u53cd\uff0c\u56e0\u201c\u4e0d\u77e5\u9053\u5b66\u4e60\u6709\u4ec0\u4e48\u7528\u201d\u800c\u9009\u62e9\u52aa\u529b\u5b66\u4e60\u7684\u4eba\uff0c\u6bcf\u65f6\u6bcf\u523b\u90fd\u5145\u6ee1\u4e86\u6536\u83b7\uff0c\u5e76\u4e14\u4f1a\u5728\u5c06\u6765\u7684\u67d0\u4e00\u5929\u83b7\u5f97\u66f4\u591a\u7684\u201c\u610f\u5916\u201d\u6536\u83b7\uff0c\u54ea\u6015\u4ed6\u4eec\u53ef\u80fd\u663e\u5f97\u201c\u6f2b\u65e0\u76ee\u7684\u201d\u2014\u2014\u7ed3\u679c\u771f\u7684\u662f\u5929\u58e4\u4e4b\u522b\u3002\n\n\u7ecf\u5e38\u6709\u5b66\u751f\u5411\u6211\u8868\u793a\u5979\u5bf9\u76ee\u524d\u7684\u4e13\u4e1a\u6ca1\u5174\u8da3\uff0c\u5979\u771f\u6b63\u611f\u5174\u8da3\u7684\u662f\u67d0\u67d0\u4e13\u4e1a\u3002\u2014\u2014\u6b63\u5982\u6211\u4eec\u7ecf\u5e38\u770b\u5230\u7684\u90a3\u6837\uff0c\u8fd9\u4e9b\u4eba\u4e0d\u5feb\u4e50\u3002\u56e0\u4e3a\u4ed6\u4eec\uff08\u89c9\u5f97\uff09\u81ea\u5df1\u6b63\u5728\u505a\u81ea\u5df1\u4e0d\u559c\u6b22\u505a\u7684\u4e8b\u60c5\u3002\u7136\u540e\uff0c\u771f\u7684\u662f\u4ed6\u4eec\u4ee5\u4e3a\u7684\u90a3\u6837\u4e48\uff1f\u4e0d\u5ba2\u6c14\u5730\u8bf4\uff0c99%\u7684\u60c5\u51b5\u4e0b\u5e76\u975e\u5982\u6b64\u3002\u9996\u5148\uff0c\u8fd9\u4e9b\u4eba\u5e76\u4e0d\u662f\u5bf9\u6b63\u5728\u505a\u7684\u4e8b\u60c5\u6ca1\u6709\u5174\u8da3\uff0c\u800c\u662f\u6ca1\u80fd\u529b\u628a\u76ee\u524d\u6b63\u5728\u505a\u7684\u4e8b\u60c5\u505a\u597d\u3002\u6700\u7ec8\u6ca1\u6709\u4eba\u559c\u6b22\u81ea\u5df1\u505a\u4e0d\u597d\u7684\u4e8b\u60c5\u3002\n\n\u505a\u597d\u8fd9\u4ef6\u4e8b\u60c5\u7a76\u7adf\u5bf9\u81ea\u5df1\u6709\u6ca1\u6709\u610f\u4e49\uff1f\u5982\u679c\u6709\uff0c\u90a3\u5c31\u8981\u52aa\u529b\u505a\uff0c\u76f4\u5230\u505a\u597d\u4e3a\u6b62\u2014\u2014\u6ca1\u6709\u5176\u4ed6\u9009\u62e9\u3002\n\n\u73b0\u5728\u8bf4\u53e6\u5916\u4e00\u4e2a\u65b9\u9762\u3002\u4eba\u4eec\u603b\u8bf4\u4ed6\u4eec\u771f\u6b63\u611f\u5174\u8da3\u7684\u662f\u522b\u7684\u4e8b\u60c5\u3002\u53ef\u4e8b\u5b9e\u4e0a\uff0c\u90a3\u5e94\u8be5\u4ec5\u4ec5\u662f\u56e0\u4e3a\u4ed6\u4eec\u8fd8\u6ca1\u5f00\u59cb\u505a\u90a3\u4ef6\u4e8b\u60c5\uff0c\u6240\u4ee5\u8fd8\u6ca1\u6709\u5728\u90a3\u4ef6\u4e8b\u60c5\u4e0a\u906d\u53d7\u632b\u6298\u800c\u5df2\u3002\u56e0\u4e3a\u8fd8\u6ca1\u6709\u9047\u5230\u8fc7\u632b\u6298\uff0c\u8fd8\u6ca1\u6709\u8bc1\u660e\u90a3\u4ef6\u4e8b\u60c5\u4ed6\u4eec\u505a\u4e0d\u597d\uff0c\u6240\u4ee5\uff0c\u90a3\u4ef6\u4e8b\u513f\u5bf9\u4ed6\u4eec\u6765\u8bb2\u786e\u5b9e\u5177\u5907\u5f88\u5927\u7684\u5438\u5f15\u529b\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5f53\u5f88\u591a\u4eba\u771f\u7684\u653e\u5f03\u539f\u6765\u505a\u7684\u4e8b\u60c5\uff0c\u7136\u540e\u53bb\u505a\u65b0\u7684\u3001\u6240\u8c13\u771f\u6b63\u611f\u5174\u8da3\u7684\u4e8b\u60c5\u7684\u65f6\u5019\uff0c\u4ed6\u4eec\u6700\u7ec8\u4f1a\u53d1\u73b0\uff0c\u8fd9\u4ef6\u4e8b\u60f3\u8981\u505a\u597d\u540c\u6837\u56f0\u96be\u91cd\u91cd\uff0c\u632b\u6298\u4e0d\u65ad\u3002\u6ca1\u8fc7\u591a\u4e45\uff0c\u8fd9\u4e9b\u4eba\u53c8\u4f1a\u56e0\u4e3a\u505a\u4e0d\u597d\u8fd9\u4ef6\u4e8b\u800c\u5931\u53bb\u5174\u8da3\uff0c\u7136\u540e\u5f00\u59cb\u5e7b\u60f3\u505a\u53e6\u5916\u7684\u4e8b\u60c5\uff0c\u5e76\u4e14\u5c06\u5176\u884c\u4e3a\u201c\u5408\u7406\u5316\u201d\uff08rationalization\uff09\u7136\u540e\u58f0\u660e\uff1a\u201c\u6211\uff08\u624d\u77e5\u9053\uff09\u771f\u6b63\u611f\u5174\u8da3\u7684\u5e76\u4e0d\u662f\u8fd9\u4e2a\u2026\u2026\u201d\u6240\u4ee5\uff0c\u6211\u89c9\u5f97\u5174\u8da3\u5e76\u4e0d\u662f\u5f88\u91cd\u8981\u3002\u53ea\u8981\u4e00\u4ef6\u4e8b\u513f\u4f60\u80fd\u505a\u597d\uff0c\u5e76\u4e14\u505a\u5230\u6bd4\u8c01\u90fd\u597d\uff0c\u6216\u8005\u81f3\u5c11\u6bd4\u5927\u591a\u6570\u4eba\u597d\uff0c\u4f60\u5c31\u4e0d\u4f1a\u5bf9\u90a3\u4ef6\u4e8b\u60c5\u6ca1\u5174\u8da3\u3002// \u628a\u4e00\u4ef6\u4e8b\u60c5\u505a\u5f97\u6bd4\u5927\u591a\u6570\u4eba\u8981\u597d\uff0c\u5e76\u4e14\u4ece\u4e2d\u6536\u83b7\u4e86\u8ba4\u53ef\u4e0e\u5feb\u4e50\uff08\u4e5f\u53ef\u80fd\u6536\u83b7\u7684\u662f\u522b\u7684\u4e1c\u897f\uff09\uff0c\u5c31\u5f88\u5c11\u4f1a\u4e0d\u5bf9\u8fd9\u4ef6\u4e8b\u60c5\u611f\u5174\u8da3\u3002\n\n\u5f80\u5f80\u5e76\u4e0d\u662f\u6709\u5174\u8da3\u624d\u80fd\u505a\u597d\uff0c\u800c\u662f\u505a\u597d\u4e86\u624d\u6709\u5174\u8da3\u3002\n\n\u5c3d\u7ba1\u5e76\u4e0d\u662f\u7edd\u5bf9\uff0c\u4f46\u786e\u5b9e\u5927\u591a\u6570\u4e8b\u60c5\u90fd\u9700\u8981\u719f\u80fd\u751f\u5de7\u3002\u505a\u5f97\u591a\u4e86\uff0c\u81ea\u7136\u5c31\u64c5\u957f\u4e86\uff1b\u64c5\u957f\u4e86\uff0c\u5c31\u81ea\u7136\u505a\u5f97\u6bd4\u522b\u4eba\u597d\uff1b\u505a\u5f97\u6bd4\u522b\u4eba\u597d\uff0c\u5174\u8da3\u5c31\u5927\u8d77\u6765\u4e86\uff0c\u800c\u540e\u5c31\u66f4\u559c\u6b22\u505a\uff0c\u66f4\u64c5\u957f\uff0c\u66f4\u2026\u2026\u826f\u6027\u5faa\u73af\u3002\u4f46\uff0c\u540c\u6837\uff0c\u505a\u5f97\u591a\u5c31\u9700\u8981\u5927\u91cf\u7684\u65f6\u95f4\u6295\u5165\u3002\u6ca1\u5174\u8da3\uff0c\u5f80\u5f80\u53ea\u4e0d\u8fc7\u662f\u7ed3\u679c\u800c\u5df2\uff0c\u5374\u88ab\u5f53\u4f5c\u4e0d\u53bb\u505a\u597d\u7684\u7406\u7531\uff0c\u6700\u7ec8\u7684\u60e9\u7f5a\u5c31\u662f\u5927\u91cf\u7684\u65f6\u95f4\u767d\u767d\u6d41\u901d\u3002\n\n\u65b9\u6cd5\u56fa\u7136\u91cd\u8981\uff0c\u4f46\u662f\u6bd4\u8d77\u201c\u7528\u529f\u201d\u6765\u8bf4\uff0c\u65b9\u6cd5\u51e0\u4e4e\u53ef\u4ee5\u5ffd\u7565\u4e0d\u8ba1\u3002\n\n\u6240\u6709\u5b66\u4e60\u4e0a\u7684\u6210\u529f\uff0c\u90fd\u53ea\u9760\u4e24\u4ef6\u4e8b\uff1a\u7b56\u7565\u548c\u575a\u6301\uff0c\u800c\u575a\u6301\u672c\u8eab\u5c31\u5e94\u8be5\u662f\u6700\u91cd\u8981\u7684\u7b56\u7565\u3002\n\n\u575a\u6301\uff0c\u5176\u5b9e\u5c31\u662f\u91cd\u590d\uff1b\u800c\u91cd\u590d\uff0c\u8bf4\u5230\u5e95\u5c31\u662f\u65f6\u95f4\u7684\u6295\u5165\uff0c\u6211\u662f\u8bf4\uff0c\u5927\u91cf\u7684\u65f6\u95f4\u6295\u5165\u3002\n\n\u4e0e\u5176\u4e0d\u505c\u5730\u627e\u66f4\u597d\u7684\u65b9\u6cd5\uff0c\u8fd8\u4e0d\u5982\u9a6c\u4e0a\u5f00\u59cb\u884c\u52a8\uff0c\u7701\u5f97\u865a\u5ea6\u66f4\u591a\u7684\u65f6\u95f4\u3002// \u9a6c\u4e0a\u5f00\u59cb\u884c\u52a8\uff0c\u5728\u884c\u52a8\u4e2d\u8c03\u6574\u3001\u6539\u5584\u65b9\u6cd5\u3002\n\n\u53ea\u6709\u62e5\u6709\u4e86\u65e0\u4e0e\u4f26\u6bd4\u7684\u6253\u5b57\u901f\u5ea6\u624d\u77e5\u9053\u6253\u5b57\u5feb\u7a7a\u95f4\u6709\u591a\u5927\u7684\u597d\u5904\u3002\u6211\u7a81\u7136\u53d1\u73b0\u6211\u4e0d\u518d\u8ba8\u538c\u5728\u8bfb\u4e66\u7684\u65f6\u5019\u505a\u7b14\u8bb0\u4e86\uff0c\u56e0\u4e3a\u5728\u952e\u76d8\u4e0a\u6572\u591a\u5c11\u5b57\u76f8\u5bf9\u4e8e\u7528\u7eb8\u7b14\u6765\u8bf4\u90fd\u8981\u8f7b\u677e\u592a\u591a\u3002\u6211\u5f00\u59cb\u5927\u6bb5\u5730\u8bb0\u5f55\u611f\u60f3\u751a\u81f3\u6709\u65f6\u5019\u5e72\u8106\u5927\u6bb5\u6458\u6284\u539f\u6587\u3002// \u53ea\u6709\u5230\u8fbe\u4e86\u5c71\u9876\uff0c\u4f60\u624d\u4f1a\u53d1\u73b0\u90a3\u91cc\u7684\u98ce\u666f\u662f\u591a\u4e48\u597d\u3002\u800c\u5927\u591a\u6570\u4eba\u7531\u4e8e\u61d2\u60f0\uff0c\u5f80\u5f80\u5728\u5c71\u811a\u4e0b\u5c31\u544a\u8bc9\u81ea\u5df1\uff0c\u5c71\u4e0a\u6709\u4ec0\u4e48\u597d\u770b\u7684\u5462\uff0c\u6ca1\u610f\u601d\u3002\u4ece\u800c\u653e\u5f03\u4e86\u722c\u5c71\u7684\u6253\u7b97\u3002\n\n\u4e8b\u5b9e\u4e0a\uff0c\u6ca1\u6709\u4ec0\u4e48\u8981\u6bd4\u53d1\u73b0\u3001\u57f9\u517b\u3001\u5475\u62a4\u3001\u8c03\u6574\u81ea\u5df1\u7684\u5fc3\u667a\u66f4\u91cd\u8981\u7684\u4e8b\u60c5\u4e86\u3002\n\n## <a id=\"OpenMind\">\u5f00\u542f\u81ea\u5df1\u7684\u5fc3\u667a</a>\n\n\u6211\u6240\u8bf4\u7684\u201c\u5fc3\u667a\u201d\uff0c\u5bf9\u5e94\u7684\u82f1\u6587\u5355\u8bcd\u662f\u201cMind\u201d\u3002\u4e00\u4e2a\u4eba\u7684\u201c\u5fc3\u667a\u201d\u6307\u7684\u662f\u4ed6\u5404\u9879\u601d\u7ef4\u80fd\u529b\u7684\u603b\u548c\uff0c\u7528\u4ee5\u611f\u53d7\u3001\u89c2\u5bdf\u3001\u7406\u89e3\u3001\u5224\u65ad\u3001\u9009\u62e9\u3001\u8bb0\u5fc6\u3001\u60f3\u50cf\u3001\u5047\u8bbe\u3001\u63a8\u7406\uff0c\u800c\u540e\u6307\u5bfc\u5176\u884c\u4e3a\u3002\u5728\u4f17\u591a\u5b9a\u4e49\u4e4b\u4e2d\uff0c\u6211\u66f4\u503e\u5411\u4e8e\u4e54\u6cbb\u00b7\u535a\u745e\u535a\u58eb\u7684\u5b9a\u4e49\uff1a\u5fc3\u667a\u4e3b\u8981\u5305\u62ec\u4ee5\u4e0b\u4e09\u4e2a\u65b9\u9762\u7684\u80fd\u529b\uff1aa. \u83b7\u5f97\u77e5\u8bc6\uff1bb. \u5e94\u7528\u77e5\u8bc6\uff1bc. \u62bd\u8c61\u63a8\u7406\u3002\n\n\u6211\u4eec\u751a\u81f3\u53ef\u4ee5\u601d\u8003\u601d\u8003\u65b9\u5f0f\u548c\u601d\u8003\u7ed3\u679c\u662f\u5426\u786e\u5b9e\u662f\u5408\u7406\u7684\u601d\u8003\u65b9\u5f0f\u548c\u601d\u8003\u7ed3\u679c\u3002// \u6211\u4eec\u53ef\u4ee5\u53bb\u601d\u8003\u201c\u601d\u8003\u201d\u8fd9\u4e2a\u884c\u4e3a\u3002\n\n\u4e86\u89e3\u5230\u81ea\u5df1\u7adf\u7136\u53ef\u4ee5\u7528\u81ea\u5df1\u7684\u5927\u8111\u63a7\u5236\u81ea\u5df1\u7684\u5927\u8111\u540e\uff0c\u53ea\u9700\u8981\u7262\u7262\u8bb0\u4f4f\u4e00\u4e2a\u4e8b\u5b9e\u5c31\u53ef\u4ee5\u4ece\u8d77\u70b9\u4e0d\u65ad\u8fdb\u6b65\u4e86\u3002\u8fd9\u4e2a\u4e8b\u5b9e\u662f\uff1a\u8fd9\u4e16\u754c\u4e0a\u6709\u4e9b\u4e8b\u60c5\u6216\u9053\u7406\uff0c\u5927\u62b5\u53ef\u4ee5\u5206\u4e3a\u4ee5\u4e0b4\u79cd\u60c5\u51b5\uff1a\n1. \u5b9e\u9645\u4e0a\u662f\u6b63\u786e\u7684\uff0c\u6211\u4eec\u4e5f\u4ee5\u4e3a\u662f\u6b63\u786e\u7684\uff1b\n2. \u5b9e\u9645\u4e0a\u662f\u9519\u8bef\u7684\uff0c\u6211\u4eec\u5374\u4ee5\u4e3a\u662f\u6b63\u786e\u7684\uff1b\n3. \u5b9e\u9645\u4e0a\u662f\u6b63\u786e\u7684\uff0c\u6211\u4eec\u5374\u4ee5\u4e3a\u662f\u9519\u8bef\u7684\uff1b\n4. \u5b9e\u9645\u4e0a\u662f\u9519\u8bef\u7684\uff0c\u6211\u4eec\u4e5f\u4ee5\u4e3a\u662f\u9519\u8bef\u7684\u3002\n// \u8fd9\u91cc\u7684\u201c\u5b9e\u9645\u4e0a\u6b63\u786e\u201d\u6216\u201c\u5b9e\u9645\u4e0a\u9519\u8bef\u201d\u4e0d\u5e94\u8be5\u88ab\u7406\u89e3\u4e3a\u201c\u7edd\u5bf9\u7684\u6b63\u786e\u201d\u6216\u201c\u7edd\u5bf9\u7684\u9519\u8bef\u201d\uff0c\u5b83\u5e94\u8be5\u4f9d\u8d56\u4e8e\u5177\u4f53\u7684\u65f6\u95f4\u548c\u7a7a\u95f4\u3002\n\n\u7262\u7262\u8bb0\u4f4f\u201c\u6211\u4eec\u7684\u8ba4\u77e5\u4e0d\u4ec5\u53ef\u80fd\u4e5f\u786e\u5b9e\u5f80\u5f80\u80cc\u79bb\u73b0\u5b9e\u201d\u8fd9\u4e2a\u4e8b\u5b9e\u672c\u8eab\uff0c\u5c31\u5df2\u7ecf\u8db3\u4ee5\u4fdd\u8bc1\u6211\u4eec\u4e0d\u65ad\u8fdb\u6b65\u4e86\u2014\u2014\u6211\u4eec\u56e0\u4e86\u89e3\u8fd9\u4e2a\u4e8b\u5b9e\u800c\u5df2\u7ecf\u62e5\u6709\u4e86\u826f\u597d\u7684\u81ea\u7701\u673a\u5236\u3002\n\n\u4f60\u53ef\u80fd\u8981\u6323\u624e\u5f88\u4e45\u624d\u80fd\u771f\u6b63\u660e\u767d\u8fd9\u4e2a\u9053\u7406\uff1a\u4f60\u7684\u5927\u8111\u5e76\u4e0d\u662f\u4f60\uff0c\u4f60\u7684\u5927\u8111\u662f\uff08\u5c5e\u4e8e\uff09\u201c\u4f60\u7684\u201d\u5927\u8111\u3002\u5c3d\u7ba1\u4f60\u7528\u5b83\u601d\u8003\uff0c\u597d\u50cf\u5b83\u5728\u6307\u5bfc\u4f60\u7684\u884c\u4e3a\u3002\u4f46\u662f\uff0c\u4f60\u8981\u660e\u767d\u4f60\u4e0d\u5e94\u8be5\u96b6\u5c5e\u4e8e\u4f60\u7684\u5927\u8111\uff0c\u800c\u5e94\u8be5\u662f\u4f60\u62e5\u6709\u4f60\u7684\u5927\u8111\uff0c\u5e76\u4e14\u5e94\u8be5\u662f\u4f60\u53ef\u4ee5\u63a7\u5236\u4f60\u7684\u5927\u8111\u3002\n\n\u4e0d\u518d\u8ba9\u81ea\u5df1\u6210\u4e3a\u81ea\u5df1\u5927\u8111\u7684\u5974\u96b6\uff0c\u800c\u662f\u9009\u62e9\u7ffb\u8eab\u505a\u4e3b\u4eba\u3002\n\n\u75db\u82e6\u5c31\u662f\u8fd9\u6837\uff0c\u4e00\u65e6\u6211\u4eec\u7adf\u7136\u80fd\u8fd0\u7528\u5fc3\u667a\u628a\u6211\u4eec\u81ea\u5df1\u7684\u6ce8\u610f\u529b\u8f6c\u79fb\u5230\u5176\u4ed6\u5730\u65b9\u4e0a\u53bb\u7684\u65f6\u5019\uff0c\u75db\u82e6\u5c31\u4f1a\u51e0\u4e4e\u81ea\u52a8\u6d88\u5931\uff0c\u5728\u4f60\u91cd\u65b0\u6ce8\u610f\u5b83\u4e4b\u524d\uff0c\u5b83\u4e0d\u4f1a\u56de\u6765\u3002\n\n\u5982\u679c\u8bf4\u8bb0\u5fc6\u672c\u8eab\u662f\u8461\u8404\uff0c\u90a3\u4e48\u56de\u5fc6\u7684\u8fc7\u7a0b\u5c31\u662f\u53d1\u9175\u3002\u6bcf\u4e2a\u4eba\u90fd\u6709\u52aa\u529b\u4f7f\u81ea\u5df1\u7684\u5386\u53f2\u53d8\u5f97\u66f4\u52a0\u6e05\u767d\u66f4\u52a0\u7f8e\u597d\u7684\u503e\u5411\u3002\u6240\u4ee5\uff0c\u5f80\u5f80\u4f1a\u4e0d\u81ea\u89c9\u5730\u7ed9\u81ea\u5df1\u7684\u8bb0\u5fc6\u8fdb\u884c\u5404\u79cd\u5f62\u5f0f\u7684\u4fee\u8865\uff0c\u751a\u81f3\u8981\u8fdb\u4e00\u6b65\u7cbe\u52a0\u5de5\uff0c\u7136\u540e\u624d\u4f1a\u89c9\u5f97\u5fc3\u6ee1\u610f\u8db3\u3002\n\n\u5f53\u4f60\u9762\u4e34\u5c34\u5c2c\uff08\u6216\u9047\u5230\u95ee\u9898\uff09\u7684\u65f6\u5019\uff0c\u8bb0\u5f97\u4e00\u5b9a\u8981\u62ff\u51fa\u7eb8\u7b14\u6765\uff0c\u628a\u4f60\u6240\u9047\u5230\u7684\u5c34\u5c2c\u8bb0\u5f55\u4e0b\u6765\u2014\u2014\u5f53\u7136\uff0c\u6700\u597d\u662f\u8bb0\u5f55\u5728\u540c\u4e00\u4e2a\u672c\u5b50\u91cc\u3002\u8fd9\u6837\u7684\u8bb0\u5f55\u662f\u975e\u5e38\u6709\u610f\u4e49\u7684\u3002\u56e0\u4e3a\u5b83\u4f1a\u63d0\u9192\u4f60\uff0c\u8fd9\u662f\u4f60\u66fe\u7ecf\u9047\u5230\u8fc7\u7684\u5c34\u5c2c\u3002\u5982\u679c\u4f60\u4e0d\u8bb0\u5f55\u4e0b\u6765\uff0c\u90a3\u4f60\u5c31\u80af\u5b9a\u4f1a\u5fd8\u8bb0\u7684\u3002\u7136\u540e\u8fd8\u8981\u517b\u6210\u4e00\u4e2a\u4e60\u60ef\uff0c\u5b9a\u671f\u62ff\u51fa\u8fd9\u4e2a\u672c\u5b50\u56de\u987e\u4e00\u4e0b\u3002\u8fd9\u4e2a\u4e60\u60ef\u5f80\u5f80\u4f1a\u4f7f\u4f60\u5f88\u6709\u6210\u5c31\u611f\uff0c\u56e0\u4e3a\u4f60\u77e5\u9053\uff0c\u751a\u81f3\u53ef\u4ee5\u6e05\u695a\u5730\u770b\u5230\u4f60\u5df2\u7ecf\u6709\u8fdb\u6b65\u4e86\u3002\u56e0\u4e3a\u90a3\u4e2a\u672c\u5b50\u91cc\u8bb0\u5f55\u8fc7\u7684\u5f88\u591a\u9519\u8bef\u4f60\u90fd\u4e0d\u518d\u72af\u4e86\u2014\u2014\u5f53\u7136\uff0c\u4e0d\u518d\u72af\u90a3\u4e9b\u9519\u8bef\u7684\u539f\u56e0\u662f\u56e0\u4e3a\u4f60\u5728\u4e0d\u505c\u5730\u63d0\u9192\u4f60\u81ea\u5df1\uff01\n\n\u53e6\u5916\uff0c\u5728\u9762\u4e34\u5c34\u5c2c\u7684\u65f6\u5019\uff0c\u5c3d\u91cf\u5f31\u5316\u4f60\u7684\u75db\u82e6\u3002\u63a7\u5236\u81ea\u5df1\u7684\u60c5\u7eea\uff0c\u4e0d\u8981\u88ab\u4f60\u7684\u5927\u8111\u7684\u76f4\u63a5\u53cd\u5e94\u6240\u5de6\u53f3\u3002\u8981\u77e5\u9053\uff0c\u4f60\u6240\u9762\u4e34\u7684\u6240\u6709\u5c34\u5c2c\uff0c\u6700\u7ec8\u80af\u5b9a\u6709\u4e00\u90e8\u5206\u539f\u56e0\u662f\u4f60\u81ea\u5df1\u9020\u6210\u7684\u3002\u6240\u4ee5\uff0c\u6ca1\u5fc5\u8981\u627e\u501f\u53e3\uff0c\u6ca1\u5fc5\u8981\u62b1\u6028\u522b\u4eba\uff0c\u6ca1\u5fc5\u8981\u89c9\u5f97\u8fd9\u4e16\u754c\u5c31\u5bf9\u4f60\u4e00\u4e2a\u4eba\u4e0d\u516c\u5e73\uff0c\u8981\u8bb0\u5f97\u201c\u4f60\u5e76\u4e0d\u5b64\u72ec\u201d\u2014\u2014\u80af\u5b9a\u8fd8\u6709\u522b\u4eba\u4e5f\u5728\u4e0d\u540c\u7684\u5730\u65b9\u3001\u4e0d\u540c\u7684\u65f6\u95f4\u906d\u9047\u8fc7\u540c\u6837\u7684\u5c34\u5c2c\u548c\u75db\u82e6\u3002\u4f46\u662f\u6709\u591a\u5c11\u4eba\u80fd\u50cf\u4f60\u73b0\u5728\u8fd9\u6837\u5e73\u9759\u5730\u5bf9\u5f85\u75db\u82e6\uff0c\u800c\u53c8\u6e05\u695a\u5730\u610f\u8bc6\u5230\u4f60\u4e0d\u80fd\u88ab\u4f60\u7684\u5927\u8111\u7684\u76f4\u63a5\u53cd\u5e94\u6240\u5de6\u53f3\u5462\uff1f\u4f60\u8fd9\u6837\u4e00\u60f3\uff0c\u5c31\u91ca\u7136\u4e86\u3002\n\n\u5176\u5b9e\uff0c\u627f\u8ba4\u201c\u5e0c\u671b\u81ea\u5df1\u7684\u6b32\u671b\u9a6c\u4e0a\u83b7\u5f97\u6ee1\u8db3\u201d\u662f\u81ea\u5df1\u7684\u5929\u6027\u5c31\u597d\u529e\u4e86\u3002\u56e0\u4e3a\uff0c\u5e73\u9759\u63a5\u53d7\u5e76\u4e14\u6b63\u786e\u8ba4\u8bc6\u81ea\u5df1\u7684\u5929\u6027\u662f\u6539\u53d8\u5929\u6027\u7684\u7b2c\u4e00\u6b65\u3002\u5c31\u7b97\u6709\u4e9b\u65f6\u5019\u5929\u6027\u96be\u79fb\uff0c\u65e0\u6cd5\u5f7b\u5e95\u6539\u53d8\uff0c\u90a3\u4e48\u4e5f\u8d77\u7801\u8fd8\u53ef\u4ee5\u7a0d\u52a0\u63a7\u5236\uff0c\u7565\u5fae\u6539\u5584\u3002\u6ca1\u5fc5\u8981\u63a7\u5236\u81ea\u5df1\u7684\u65b9\u65b9\u9762\u9762\uff0c\u8fd9\u4e0d\u53ea\u662f\u5f88\u96be\u505a\u5230\uff0c\u800c\u662f\u5e72\u8106\u4e0d\u53ef\u80fd\u505a\u5230\u3002\u5c24\u5176\u662f\u5bf9\u5927\u8111\u683c\u5916\u6d3b\u8dc3\u7684\u4eba\u66f4\u662f\u5982\u6b64\u3002\u6240\u4ee5\uff0c\u6709\u65f6\u5019\u6210\u4e3a\u9ad8\u624b\u9700\u8981\u611a\u949d\uff0c\u91d1\u5eb8\u5c0f\u8bf4\u91cc\u7684\u90ed\u9756\u6210\u4e3a\u4e00\u4ee3\u5b97\u5e08\u7684\u6839\u672c\u539f\u56e0\u66f4\u53ef\u80fd\u662f\u56e0\u4e3a\u4ed6\u50bb\u5230\u4e00\u5b9a\u7a0b\u5ea6\uff0c\u6240\u4ee5\uff0c\u5f88\u591a\u4eba\u6216\u4e8b\u60c5\u5bf9\u522b\u4eba\u6765\u8bb2\u662f\u8bf1\u60d1\uff0c\u5bf9\u4ed6\u6765\u8bb2\u5e72\u8106\u5c31\u662f\u4e0d\u5b58\u5728\u7684\uff1b\u4e8e\u662f\uff0c\u4ed6\u53ef\u4ee5\u7528\u666e\u901a\u7684\u667a\u5546\u957f\u671f\u53ea\u4e13\u6ce8\u5728\u4e00\u4ef6\u6700\u5e94\u8be5\u505a\u7684\u4e8b\u60c5\u4e0a\uff0c\u6700\u7ec8\u5929\u4e0b\u65e0\u654c\u3002// \u53e6\u4e00\u4e2a\u4f8b\u5b50\uff1a\u963f\u7518\n\n\u63a7\u5236\u8fd9\u79cd\u5929\u6027\u6b63\u786e\u7684\u65b9\u6cd5\u662f\uff0c\u4ed4\u7ec6\u5ba1\u89c6\u4e00\u4e0b\u81ea\u5df1\u5728\u54ea\u65b9\u9762\u8fd9\u79cd\u5929\u6027\u5c24\u4e3a\u5f3a\u70c8\uff1f\u518d\u4e00\u6b21\u62ff\u51fa\u7eb8\u7b14\u7f57\u5217\u3002\u7ecf\u8fc7\u51e0\u5929\u751a\u81f3\u51e0\u4e2a\u6708\u7684\u957f\u671f\u53cd\u590d\u5ba1\u89c6\uff0c\u4f60\u4f1a\u53d1\u73b0\u90a3\u4e2a\u5217\u8868\u53d8\u5f97\u8d8a\u6765\u8d8a\u957f\u3002\u522b\u6015\uff0c\u76f8\u4fe1\u6211\uff0c\u8c01\u90fd\u662f\u8fd9\u6837\u7684\u2014\u2014\u81f3\u5c1199.9%\u7684\u4eba\u662f\u8fd9\u6837\u7684\u3002\u7136\u540e\u4ece\u5217\u8868\u4e2d\u6311\u51fa\u4e00\u4e2a\u6700\u91cd\u8981\u7684\uff08\u5982\u679c\u4f60\u6709\u91ce\u5fc3\u7684\u8bdd\uff0c\u518d\u6311\u51fa\u4e00\u4e2a\u4e5f\u5f88\u91cd\u8981\u7684\uff09\uff0c\u5199\u5728\u968f\u673a\u53ef\u4ee5\u770b\u5230\u7684\u5730\u65b9\uff0c\u4e0d\u505c\u5730\u63d0\u9192\u81ea\u5df1\u5728\u8fd9\u65b9\u9762\u4e00\u5b9a\u8981\u63a7\u5236\u8fd9\u79cd\u5929\u6027\u3002\n\n\u6211\u4e2a\u4eba\u89c9\u5f97\uff0c\u5728\u5de5\u4f5c\u548c\u5b66\u4e60\u4e0a\u63a7\u5236\u8fd9\u79cd\u5929\u6027\u662f\u6700\u91cd\u8981\u7684\u3002\u4e3a\u4e86\u80fd\u5728\u8fd9\u65b9\u9762\u63a7\u5236\u4f4f\u81ea\u5df1\u7684\u5929\u6027\uff0c\u6709\u7684\u65f6\u5019\uff0c\u5728\u5176\u4ed6\u65b9\u9762\u7a0d\u5fae\u653e\u7eb5\u4e00\u4e0b\u90fd\u662f\u975e\u5e38\u6709\u5fc5\u8981\u7684\u3002\u76f8\u4fe1\u6211\uff0c\u5076\u5c14\u5927\u9189\u4e00\u573a\u6ca1\u4ec0\u4e48\u4e0d\u597d\u3002\u5076\u5c14\u8fde\u7eed\u6253\u4e0a\u4e24\u5929\u4e24\u591c\u7684\u724c\u4e0d\u4ec5\u6709\u52a9\u4e8e\u8eab\u5fc3\u5065\u5eb7\uff0c\u4e5f\u662f\u4e00\u79cd\u5f88\u597d\u7684\u793e\u4ea4\u6d3b\u52a8\u3002\u4f46\u662f\uff0c\u5728\u5de5\u4f5c\u548c\u5b66\u4e60\u4e0a\uff0c\u575a\u51b3\u4e0d\u8981\u653e\u7eb5\u3002\u5de5\u4f5c\u548c\u5b66\u4e60\u90fd\u662f\u8270\u82e6\u7684\uff0c\u8def\u7a0b\u90fd\u662f\u6f2b\u957f\u7684\uff0c\u6210\u679c\u90fd\u4e0d\u53ef\u80fd\u4e00\u8e74\u800c\u5c31\u3002\u7ecf\u9a8c\u544a\u8bc9\u6211\u4eec\uff0c\u5728\u5de5\u4f5c\u548c\u5b66\u4e60\u7684\u8fc7\u7a0b\u4e2d\u5f53\u7136\u9700\u8981\u6280\u5de7\uff0c\u4f46\u662f\uff0c\u5f53\u573a\u89c1\u6548\u7684\u6280\u5de7\u5c11\u4e4b\u53c8\u5c11\u3002\u800c\u4e14\uff0c\u5c31\u7b97\u627e\u5230\u4e86\uff0c\u4e5f\u53ea\u4e0d\u8fc7\u662f\u4e24\u79cd\u60c5\u51b5\u4e4b\u4e00\uff1aa. \u5bfb\u627e\u8fd9\u4e2a\u6280\u5de7\u5df2\u7ecf\u82b1\u8d39\u4e86\u592a\u591a\u7684\u65f6\u95f4\uff1bb. \u8fd9\u4e2a\u6280\u5de7\u53ef\u80fd\u6709\u540e\u9057\u75c7\uff0c\u53ea\u4e0d\u8fc7\u662f\u73b0\u5728\u8fd8\u4e0d\u77e5\u9053\u800c\u5df2\u3002\n\n\u4e8b\u5b9e\u4e0a\uff0c\u201c\u63a8\u8fdf\u6ee1\u8db3\u611f\u201d\u662f\u5fc3\u667a\u6210\u719f\u7684\u4eba\u5fc5\u5907\u7684\u80fd\u529b\uff0c\u4e5f\u662f\u9700\u8981\u6323\u624e\u548c\u953b\u70bc\u624d\u53ef\u4ee5\u4e60\u5f97\u7684\u80fd\u529b\u3002\u5728\u751f\u6d3b\u4e2d\uff0c\u53ea\u6709\u6781\u5c11\u6570\u4eba\u6700\u7ec8\u638c\u63e1\u4e86\u8fd9\u79cd\u80fd\u529b\uff0c\u4e5f\u56e0\u6b64\u4f7f\u5f97\u4ed6\u4eec\u4e0e\u4f17\u4e0d\u540c\u7684\u540c\u65f6\u53c8\u5f80\u5f80\u4ee4\u4ed6\u4eec\u8ff7\u60d1\u5730\u611f\u53f9\u201c\u6211\u600e\u4e48\u770b\u4e0d\u51fa\u6765\u4ed6\u5230\u5e95\u6bd4\u6211\u5f3a\u5728\u54ea\u91cc\u5462\uff1f\u201d\u5176\u5b9e\uff0c\u8bf4\u7a7f\u4e86\u5c31\u5f88\u7b80\u5355\uff0c\u638c\u63e1\u4e86\u201c\u63a8\u8fdf\u6ee1\u8db3\u611f\u201d\u4e4b\u6280\u5de7\u7684\u4eba\u65e9\u5c31\u6709\u56e0\u6b64\u83b7\u5f97\u6781\u5927\u7684\u3001\u53ea\u6709\u5c11\u6570\u4eba\u624d\u4f1a\u83b7\u5f97\u7684\u5229\u76ca\u7684\u7ecf\u5386\u3002\u4e8e\u662f\uff0c\u4ed6\u4eec\u6700\u7ec8\u8868\u73b0\u4e3a\u6bd4\u7edd\u5927\u591a\u6570\u4eba\u201c\u66f4\u6709\u8010\u5fc3\u201d\u2014\u2014\u751a\u81f3\uff0c\u60ca\u4eba\u7684\u8010\u5fc3\u3002\u8fd9\u4e9b\u8010\u5fc3\u88ab\u7528\u6765\u4e0d\u52a8\u58f0\u8272\u5730\u627f\u53d7\u66f4\u591a\u7684\u6253\u51fb\u548c\u632b\u6298\uff0c\u8f7b\u677e\u5766\u7136\u5730\u9762\u5bf9\u66f4\u591a\u7684\u5a01\u903c\u548c\u5229\u8bf1\uff1b\u751a\u81f3\uff0c\u53ef\u80fd\u4f1a\u4ec5\u4ec5\u56e0\u4e3a\u4ed6\u4eec\u60ca\u4eba\u7684\u8010\u5fc3\uff0c\u90a3\u4e9b\u6253\u51fb\u548c\u632b\u6298\u5bf9\u4ed6\u4eec\u6765\u8bb2\u4e0d\u518d\u79f0\u5f97\u4e0a\u662f\u6253\u51fb\u6216\u8005\u632b\u6298\uff0c\u90a3\u4e9b\u5a01\u903c\u548c\u5229\u8bf1\u5bf9\u4ed6\u4eec\u6765\u8bb2\u6839\u672c\u5e76\u4e0d\u5b58\u5728\u2026\u2026\n\n\u6b63\u5728\u62e5\u6709\u8010\u5fc3\uff0c\u751a\u81f3\u60ca\u4eba\u8010\u5fc3\u7684\u4f60\uff0c\u751f\u6d3b\u5c31\u4f1a\u4ece\u6b64\u53d1\u751f\u5929\u7ffb\u5730\u8986\u7684\u53d8\u5316\u3002\n\n\u8010\u5fc3\u6709\u7740\u795e\u5947\u7684\u529b\u91cf\u3002\u5f53\u6bcf\u4e2a\u4eba\u90fd\u5728\u62d6\u5ef6\uff0c\u6700\u540e\u53c8\u624b\u5fd9\u811a\u4e71\u7684\u65f6\u5019\uff0c\u4f60\u7684\u751f\u6d3b\u5374\u975e\u5e38\u4ece\u5bb9\u3002\u56e0\u4e3a\u4f60\u4e00\u5f00\u59cb\u5c31\u77e5\u9053\u4f60\u4eca\u5929\u7684\u6240\u6709\u8f7b\u677e\u5b89\u9038\uff0c\u90fd\u53ef\u80fd\u662f\u672a\u6765\u7684\u6210\u672c\uff1b\u6240\u4ee5\uff0c\u4f60\u65e9\u5c31\u628a\u4e00\u4e9b\u8f7b\u677e\u5b89\u9038\u5b89\u6392\u5230\u672a\u6765\u7684\u67d0\u4e2a\u65f6\u6bb5\uff0c\u800c\u5fc3\u5e73\u6c14\u548c\u5730\u6bcf\u5929\u5b8c\u6210\u76f8\u5e94\u7684\u5de5\u4f5c\u3002\u4e8e\u662f\uff0c\u4f60\u4e0d\u4ec5\u4ece\u5bb9\uff0c\u800c\u4e14\u5feb\u4e50\u3002\u4f60\u4f1a\u53d8\u6210\u4e00\u4e2a\u5b88\u65f6\u7684\u4eba\uff0c\u4e00\u4e2a\u751f\u6d3b\u6709\u89c4\u5f8b\u7684\u4eba\uff0c\u4e00\u4e2a\u8eab\u8fb9\u7684\u670b\u53cb\u90fd\u4f9d\u8d56\u7684\u4eba\u3002\u4f60\u4f1a\u5b9a\u65f6\u53bb\u5065\u8eab\u623f\uff0c\u4ece\u4e0d\u4e3a\u81ea\u5df1\u7626\u5f97\u592a\u6162\u800c\u70e6\u607c\u7684\u540c\u65f6\u7adf\u7136\u7528\u8282\u98df\u751a\u81f3\u541e\u98df\u6cfb\u836f\u7684\u65b9\u6cd5\u53bb\u51cf\u80a5\u3002\u56e0\u4e3a\uff0c\u5728\u90a3\u4e9b\u4eba\u56e0\u4e3a\u65e0\u5948\u800c\u62b1\u6028\u6216\u9762\u4e34\u7edd\u671b\u7684\u65f6\u5019\uff0c\u4f60\u65e9\u5df2\u7ecf\u662f\u6301\u7eed\u953b\u70bc\u4e86\u8bb8\u591a\u5e74\u7684\u5065\u5eb7\u7684\u4eba\u3002\n\n## <a id=\"ManageYourself\">\u901a\u8fc7\u7ba1\u7406\u81ea\u5df1\u4e0e\u65f6\u95f4\u505a\u670b\u53cb</a>\n\n\u201c\u5fc3\u667a\u5f00\u542f\u201d\u7684\u8d77\u70b9\u662f\u201c\u610f\u8bc6\u5230\u53ef\u4ee5\u81ea\u5f8b\u201d\uff0c\u800c\u5fc3\u667a\u53d1\u5c55\u7684\u8fc7\u7a0b\u5c31\u662f\u514b\u670d\u61d2\u60f0\u7684\u8fc7\u7a0b\u3002\u5e38\u542c\u8bf4\uff0c\u201c\u6700\u53ef\u6015\u7684\u654c\u4eba\u5c31\u662f\u4f60\u81ea\u5df1\u201d\uff0c\u8fd9\u53e5\u8bdd\u5982\u679c\u6709\u9053\u7406\u7684\u8bdd\uff0c\u90a3\u4e2a\u201c\u6700\u53ef\u6015\u7684\u654c\u4eba\u201d\u5b9e\u9645\u4e0a\u5e94\u8be5\u6307\u7684\u662f\u201c\u4f60\u90a3\u65e0\u6cd5\u63a7\u5236\u7684\u61d2\u60f0\u201d\u3002\n\n\u201c\u4eba\u6216\u591a\u6216\u5c11\u662f\u7ecf\u9a8c\u4e3b\u4e49\u7684\u52a8\u7269\u201d\u3002\u4e5f\u8bb8\u6bcf\u4e2a\u4eba\u7684\u4e0d\u5e78\u90fd\u662f\u4e00\u6837\u7684\uff0c\u4ed6\u4e00\u751f\u4e2d\u6700\u591a\u7684\u7ecf\u9a8c\u662f\u201c\u534a\u9014\u800c\u5e9f\u201d\u2014\u2014\u5404\u79cd\u5404\u6837\u7684\u3001\u5404\u4e2a\u65b9\u9762\u7684\u201c\u534a\u9014\u800c\u5e9f\u201d\u3002\u6211\u4eec\u4e00\u751f\u4e2d\u534a\u9014\u800c\u5e9f\u7684\u7ecf\u9a8c\u592a\u591a\u4e86\uff0c\u4e43\u81f3\u4e8e\u60f3\u8981\u653e\u5f03\u201c\u534a\u9014\u800c\u5e9f\u201d\u8981\u6bd4\u201c\u575a\u6301\u5230\u5e95\u6700\u7ec8\u6210\u529f\u201d\u96be\u592a\u591a\u4e86\u2014\u2014\u5927\u591a\u6570\u4eba\u8fde\u4e00\u6b21\u201c\u575a\u6301\u5230\u5e95\u6700\u7ec8\u6210\u529f\u201d\u7684\u7ecf\u9a8c\u90fd\u6ca1\u6709\u3002\u5f53\u6211\u4eec\u51b3\u5fc3\u6539\u53d8\u7684\u65f6\u5019\uff0c\u201c\u61d2\u60f0\u201d\u4fbf\u4f1a\u6307\u4f7f\u6211\u4eec\u7684\u90a3\u4e2a\u201c\u5927\u8111\u7684\u81ea\u6211\u4fdd\u62a4\u529f\u80fd\u201d\u2014\u2014\u201c\u9057\u5fd8\u201d\u2014\u2014\u8d77\u4f5c\u7528\uff0c\u8ba9\u6211\u4eec\u4e0d\u77e5\u4e0d\u89c9\u505c\u6b62\u6539\u53d8\u3002// \u8bb8\u591a\u7684\u534a\u9014\u800c\u5e9f\u5c31\u662f\u56e0\u4e3a\u4e00\u6bb5\u65f6\u95f4\u540e\uff0c\u6211\u4eec\u5c31\u4f1a\u5fd8\u4e86\u53bb\u575a\u6301\uff1b\u201c\u5fd8\u4e86\u53bb\u575a\u6301\u201d\u5f80\u5f80\u662f\u4ece\u67d0\u4e00\u6b21\u677e\u61c8\u5f00\u59cb\u7684\u3002\u6bd4\u5982\u4e0b\u51b3\u5fc3\u575a\u6301\u6bcf\u5929\u5199\u65e5\u8bb0\uff0c\u7ed3\u679c\u67d0\u4e00\u5929\u56e0\u4e3a\u6709\u4e8b\u5fd9\u5230\u5f88\u665a\uff0c\u7136\u540e\u5bf9\u81ea\u5df1\u8bf4\uff0c\u4eca\u5929\u5c31\u7b97\u4e86\u5427\u3002\u7136\u540e\u4ee5\u540e\u5c31\u6e10\u6e10\u5730\u9057\u5fd8\u4e86\u8981\u6bcf\u5929\u575a\u6301\u5199\u65e5\u8bb0\u8fd9\u4ef6\u4e8b\u3002\u4e5f\u8bb8\u90a3\u4ee5\u540e\u51e0\u5929\u91cc\u8fd8\u4f1a\u7a00\u7a00\u62c9\u62c9\u5199\u51e0\u5929\uff0c\u4f46\u8fc7\u4e0d\u4e86\u591a\u4e45\uff0c\u5c31\u771f\u7684\u5c06\u8fd9\u4ef6\u4e8b\u5f7b\u5e95\u629b\u5f03\u4e86\u3002\u8981\u76f4\u5230\u5f88\u4e45\u540e\u624d\u60f3\u8d77\u201c\u54e6\uff0c\u539f\u6765\u6211\u66fe\u7ecf\u662f\u60f3\u6bcf\u5929\u575a\u6301\u5199\u65e5\u8bb0\u7684\u201d\u3002\u8fd9\u4e0d\u662f\u7edd\u5bf9\uff0c\u5f53\u73b0\u5b9e\u5f80\u5f80\u5982\u6b64\u3002\u4e3a\u4e86\u4e0d\u8ba9\u81ea\u5df1\u9057\u5fd8\uff0c\u4e00\u5b9a\u8981\u7ecf\u5e38\u751a\u81f3\u662f\u6bcf\u5929\u90fd\u63d0\u9192\u81ea\u5df1\uff1b\u6b63\u5982\u4e3a\u4e86\u4e0d\u8ba9\u81ea\u5df1\u6cc4\u6c14\u6bcf\u5929\u7ed9\u81ea\u5df1\u6253\u6c14\u4e00\u6837\u3002\n\n\u4e0e\u61d2\u60f0\u6297\u4e89\u3001\u505c\u6b62\u9057\u5fd8\u3001\u575a\u6301\u6539\u53d8\u7684\u5de5\u5177\uff0c\u5c31\u662f\u7eb8\u7b14\u3002\uff08// \u5f53\u7136\uff0c\u751f\u6d3b\u572821\u4e16\u7eaa\uff0c\u8fd8\u5728\u5b66\u4f1a\u4f7f\u7528\u5404\u79cd\u8f6f\u4ef6\u548capp\u6765\u534f\u52a9\u4f60\u751f\u6d3b\u5f97\u66f4\u597d\u3002\uff09\u90a3\u5929\uff0c\u6211\u770b\u7740\u90a3\u4e2a\u9ed1\u8272\u7cbe\u88c5\u7684\u7b14\u8bb0\u672c\uff0c\u76ef\u7740\u4e00\u5e74\u591a\u4ee5\u524d\u6700\u540e\u8bb0\u5f55\u7684\u65e5\u671f\uff0c\u4e0d\u7981\u53d1\u5446\uff1a\u6211\u5c31\u662f\u77e5\u9053\u201c\u4e0e\u61d2\u60f0\u6297\u4e89\u3001\u505c\u6b62\u9057\u5fd8\u3001\u575a\u6301\u6539\u53d8\u7684\u5de5\u5177\u662f\u7eb8\u548c\u7b14\u201d\uff0c\u6240\u4ee5\u624d\u5f00\u59cb\u8bb0\u5f55\u3002\u53ef\u662f\uff0c\u6211\u73b0\u5728\u600e\u4e48\u7adf\u7136\u8fde\u8bb0\u5f55\u672c\u8eab\u90fd\u5fd8\u4e86\uff01\n\n\u7ec8\u7a76\u6211\u8fd8\u662f\u627e\u5230\u4e86\u89e3\u51b3\u529e\u6cd5\u3002\u6211\u8dd1\u5230\u6587\u5177\u5e97\u4e70\u4e86\u5f88\u591a3M\u968f\u624b\u8d34\uff08Post-it\uff09\uff0c\u751a\u81f3\u5728\u7f51\u4e0a\u4e0b\u8f7d\u4e86\u4e00\u4e2a\u53eb\u201c3M Post-it Notes Lite\u201d\u7684\u514d\u8d39\u8f6f\u4ef6\u3002\u628a\u9700\u8981\u63d0\u9192\u81ea\u5df1\u4e0d\u8981\u5fd8\u8bb0\u7684\u91cd\u8981\u4e8b\u9879\uff0c\u5c24\u5176\u662f\u90a3\u4e9b\u6700\u8fd1\u51b3\u5b9a\u9700\u8981\u517b\u6210\u7684\u4e60\u60ef\u8d34\u5f97\u968f\u5904\u90fd\u662f\uff0c\u5305\u62ec\u7535\u8111\u7684\u684c\u9762\u4e0a\u3002\u53ef\u662f\u6211\u53d1\u73b0\u8fd8\u662f\u4e0d\u591f\uff0c3M\u968f\u624b\u8d34\u6495\u4e0b\u6765\u7684\u7eb8\u6761\u662f\u5e26\u7740\u80f6\u7684\uff0c\u653e\u5728\u53e3\u888b\u91cc\u5f88\u4e0d\u8212\u670d\u3002\u4e8e\u662f\uff0c\u6211\u5c31\u8dd1\u5230\u540d\u7247\u5e97\uff0c\u4e70\u4e86\u4e24\u76d2\u7a7a\u767d\u540d\u7247\u3002\u4e8e\u662f\uff0c\u6211\u53ef\u4ee5\u628a\u4e00\u4e9b\u91cd\u8981\u7684\u4e8b\u9879\u5199\u5728\u8fd9\u4e9b\u7a7a\u767d\u5361\u7247\u4e0a\uff0c\u968f\u8eab\u643a\u5e26\u3002\u90a3\u6bb5\u65f6\u95f4\uff0c\u6211\u7684\u53e3\u888b\u91cc\u6709\u597d\u51e0\u5f20\u5361\u7247\u4e0a\u5199\u7740\u540c\u6837\u7684\u4e00\u53e5\u8bdd\u2014\u2014\u201c\u522b\u5fd8\u4e86\u6bcf\u5929\u665a\u4e0a\u8bb0\u5f55\u65f6\u95f4\u5f00\u9500\uff01\u201d \u8fd9\u6837\u505a\u7684\u6548\u679c\u975e\u5e38\u597d\u3002\u5e94\u4e86\u90a3\u53e5\u8bdd\uff0c\u201c\u95ee\u9898\u95ee\u9898\u590d\u6742\u7684\uff0c\u89e3\u51b3\u65b9\u6cd5\u95ee\u9898\u7b80\u5355\u7684\u3002\u201d\n\n\u517b\u6210\u4efb\u4f55\u4e00\u4e2a\u65b0\u7684\u4e60\u60ef\u90fd\u4e0d\u5bb9\u6613\u3002\u9700\u8981\u591a\u4e45\u624d\u80fd\u771f\u6b63\u6210\u4e3a\u4e60\u60ef\uff0c\u4e0e\u5929\u751f\u7684\u4e00\u6837\u81ea\u7136\u5462\uff1f\u6211\u7684\u7ecf\u9a8c\u544a\u8bc9\u6211\uff0c\u4e00\u822c\u9700\u8981\u4e94\u5e74\u7684\u65f6\u95f4\u3002\u5bf9\uff0c\u662f\u4e94\u5e74\u7684\u65f6\u95f4\u3002\u6211\u770b\u5230\u8fc7\u5f88\u591a\u4e66\u7c4d\u4e0a\u8bf4\uff0c\u4e24\u4e2a\u661f\u671f\u5c31\u53ef\u4ee5\u517b\u6210\u4e00\u4e2a\u4e60\u60ef\uff1b\u6211\u60f3\uff0c\u4e5f\u8bb8\u662f\u6211\u7b28\u5427\u3002// \u786e\u5207\u9700\u8981\u591a\u957f\u7684\u65f6\u95f4\u5f88\u96be\u5b9a\u8bba\uff0c\u4f46\u4ee5\u6211\u81ea\u5df1\u7684\u7ecf\u9a8c\uff0c\u7edd\u5bf9\u4e0d\u4f1a\u662f\u4e24\u5468\u6216\u662f21\u5929\u90a3\u4e48\u77ed\u3002\u4e50\u89c2\u662f\u597d\u4e8b\uff0c\u4f46\u6211\u4eec\u8981\u5728\u4e8b\u5b9e\u7684\u57fa\u7840\u4e0a\u4e50\u89c2\uff0c\u51e1\u4e8b\u8981\u4ee5\u5c0a\u91cd\u4e8b\u5b9e\uff08\u6216\u73b0\u5b9e\uff09\u4e3a\u57fa\u7840\uff0c\u5426\u5219\u5c31\u662f\u81ea\u6b3a\u6b3a\u4eba\u4e86\u3002\n\n\u628a\u6bcf\u5929\u7684\u65f6\u95f4\u5f00\u9500\u8bb0\u5f55\u4e0b\u6765\uff0c\u4e00\u65b9\u9762\u53ef\u4ee5\u57f9\u517b\u81ea\u5df1\u7684\u6210\u5c31\u611f\uff0c\u53e6\u5916\u4e00\u65b9\u9762\u53ef\u4ee5\u907f\u514d\u8f7b\u6613\u539f\u8c05\u81ea\u5df1\u3002\u6bcf\u5929\u665a\u4e0a\u7761\u89c9\u524d\uff0c\u770b\u7740\u81ea\u5df1\u7684\u672c\u5b50\uff0c\u53d1\u73b0\u4eca\u5929\u505a\u4e86\u5f88\u591a\u4e8b\u513f\u7684\u8bdd\uff0c\u4e00\u5b9a\u4f1a\u5f88\u5f00\u5fc3\u3002\u968f\u7740\u65e5\u5b50\u7684\u63a8\u79fb\uff0c\u4f60\u7684\u5fc3\u91cc\u5c31\u4f1a\u8d8a\u6765\u8d8a\u8e0f\u5b9e\uff0c\u54ea\u6015\u4e0d\u53bb\u7ffb\u9605\uff0c\u53ea\u987b\u770b\u770b\u672c\u5b50\u4e2d\u8fb9\u7f18\u53d8\u5f97\u7a0d\u5fae\u6709\u70b9\u513f\u9ed1\u7684\u90e8\u5206\u8d8a\u6765\u8d8a\u539a\uff0c\u5c31\u4f1a\u5f88\u6709\u6210\u5c31\u611f\u3002\u4f46\u662f\uff0c\u5982\u679c\u4f60\u4e0d\u8bb0\u5f55\u4e0b\u6765\uff0c\u4ec5\u51ed\u90a3\u9760\u4e0d\u4f4f\u7684\u5fd8\u8bb0\uff0c\u662f\u4e0d\u53ef\u80fd\u6709\u8fd9\u79cd\u5b9e\u5728\u7684\u611f\u89c9\u7684\u3002// \u4f5c\u4e3a\u4e00\u4e2a\u7ecf\u5e38\u628a\u81ea\u5df1\u5f53\u5b9e\u9a8c\u5bf9\u8c61\u7684\u4eba\uff0c\u540c\u610f\u8fd9\u70b9\u8bf4\u6cd5\u3002\n\n\u53cd\u8fc7\u6765\uff0c\u5982\u679c\u4f60\u6253\u5f00\u90a3\u4e2a\u672c\u5b50\uff0c\u7adf\u7136\u53d1\u73b0\u6700\u540e\u4e00\u9875\u8bb0\u5f55\u7684\u65e5\u671f\u662f\u597d\u51e0\u5929\u524d\u751a\u81f3\u4e0a\u4e2a\u6708\u7684\u65e5\u5b50\uff0c\u90a3\u4f60\u5c31\u4f1a\u5fc3\u614c\u5e76\u4e14\u6127\u759a\uff0c\u800c\u8fd9\u79cd\u611f\u89c9\u5c31\u662f\u4f60\u53bb\u505a\u4e00\u4e9b\u201c\u6b63\u7ecf\u4e8b\u513f\u201d\u7684\u6700\u5b9e\u5728\u7684\u52a8\u529b\u3002\u4f46\u662f\uff0c\u4f46\u662f\uff0c\u5982\u679c\u4f60\u4e0d\u8bb0\u5f55\u4e0b\u6765\uff0c\u4ec5\u51ed\u90a3\u9760\u4e0d\u4f4f\u7684\u8bb0\u5fc6\uff0c\u4f60\u5c31\u4f1a\u5f88\u5bb9\u6613\u539f\u8c05\u81ea\u5df1\uff0c\u7ee7\u7eed\u653e\u7eb5\u4e0b\u53bb\uff0c\u8ba9\u65f6\u95f4\u767d\u767d\u5ea6\u8fc7\uff0c\u4e0d\u7ed9\u4f60\u5e26\u6765\u4e00\u70b9\u6536\u76ca\u3002\u6700\u8981\u547d\u7684\u3001\u4e5f\u66f4\u53ef\u80fd\u56e0\u4e3a\u4f60\u6ca1\u6709\u8bb0\u5f55\u800c\u5e26\u6765\u7684\u7ed3\u679c\u662f\uff1a\u4f60\u6839\u672c\u5c31\u6ca1\u4f53\u4f1a\u5230\u81ea\u5df1\u6709\u4efb\u4f55\u7406\u7531\u81ea\u8d23\u2014\u2014\u56e0\u4e3a\u4f60\u4e0d\u77e5\u9053\u4f60\u5931\u53bb\u7684\u662f\u4ec0\u4e48\u3002\n\n\u4ee5\u524d\u63d0\u5230\u8fc7\u4eba\u7c7b\u7684\u5c34\u5c2c\u662f\uff1a\u5728\u6574\u4e2a\u4eba\u7c7b\u53d1\u5c55\u5230\u524d\u6240\u672a\u6709\u7684\u9ad8\u5ea6\u7684\u540c\u65f6\uff0c\u6bcf\u4e2a\u4eba\u7684\u5fc3\u667a\u6210\u957f\u5374\u8981\u4ece\u96f6\u5f00\u59cb\u2014\u2014\u6240\u4ee5\uff0c\u5f88\u591a\u4eba\u6700\u7ec8\u6ca1\u6709\u8fdb\u5316\u6210\u771f\u6b63\u610f\u4e49\u4e0a\u7684\u4eba\u3002\u800c\u66f4\u5c34\u5c2c\u7684\u4e8b\u60c5\u662f\uff0c\u5373\u4f7f\u9053\u7406\u90fd\u660e\u767d\uff0c\u6709\u7684\u65f6\u5019\u8fd8\u662f\u4f1a\u4e00\u4e0d\u7559\u795e\u5c31\u88ab\u81ea\u5df1\u7684\u5927\u8111\u63a7\u5236\u3002\n\n\u4ece\u4eca\u5929\u5f00\u59cb\uff0c\u517b\u6210\u8bb0\u5f55\u4f60\u6bcf\u65e5\u65f6\u95f4\u5f00\u9500\u7684\u4e60\u60ef\u5427\u3002\u8fd9\u662f\u7b2c\u4e00\u6b65\uff0c\u5176\u4ed6\u7684\u5f88\u591a\u826f\u597d\u7684\u65f6\u95f4\u4f7f\u7528\u4e60\u60ef\u90fd\u4f1a\u56e0\u6b64\u81ea\u7136\u5730\u517b\u6210\u3002\u5982\u679c\u4f60\u5df2\u7ecf\u4e60\u60ef\u6bcf\u5929\u665a\u4e0a\u7761\u89c9\u4e4b\u524d\u8bb0\u5f55\u4e00\u4e0b\u5f53\u65e5\u7684\u65f6\u95f4\u5f00\u9500\uff0c\u90a3\u4e48\uff0c\u7b2c\u4e8c\u5929\u65e9\u4e0a\u5c31\u4f1a\u5f88\u81ea\u7136\u5730\u5f00\u59cb\u5728\u8111\u91cc\u89c4\u5212\u5168\u5929\u7684\u65f6\u95f4\u4e86\u2014\u2014\u4e0d\u4fe1\u4f60\u5c31\u8bd5\u8bd5\u770b\uff01\n\n\u5224\u65ad\u4e00\u9879\u4efb\u52a1\u662f\u5426\u201c\u771f\u7684\u91cd\u8981\u201d\uff0c\u5176\u5b9e\u53ea\u9700\u8981\u4e00\u4e2a\u6807\u51c6\uff1a\u5c31\u662f\u770b\u8fd9\u9879\u4efb\u52a1\u7684\u5b8c\u6210\u662f\u5426\u5bf9\u4f60\u7684\u76ee\u6807\u8fbe\u6210\u786e\u5b9e\u6709\u76ca\u3002\u53ef\u662f\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u6b63\u5e38\u7684\u3001\u5404\u79cd\u5668\u5b98\u5b8c\u6574\u5065\u5168\u7684\u3001\u62e5\u6709\u4e03\u60c5\u516d\u6b32\u7684\u666e\u901a\u4eba\u6765\u8bb2\uff0c\u4e0d\u6323\u624e\u4e00\u4e0b\uff0c\u5c31\u5f88\u96be\u5b8c\u5168\u4e13\u6ce8\u4e8e\u8fd9\u4e2a\u6700\u5173\u952e\u6700\u6839\u672c\u7684\u51b3\u7b56\u6807\u51c6\u3002\n\n\u76f8\u4fe1\u6211\uff0c\u517b\u6210\u4efb\u52a1\u4e00\u4e2a\u54ea\u6015\u5f88\u5c0f\u7684\u4e60\u60ef\uff0c\u90fd\u662f\u8981\u6323\u624e\u7684\u3002\u7136\u800c\uff0c\u8c8c\u4f3c\u75db\u82e6\u7684\u6323\u624e\u8fc7\u7a0b\uff0c\u5728\u5c06\u6765\u7684\u67d0\u4e2a\u65f6\u523b\u7ec8\u5f52\u4f1a\u53d8\u5f97\u5176\u4e50\u65e0\u7a77\u3002\n\n\u771f\u6b63\u7d27\u6025\u7684\u4e8b\u513f\u5c11\u4e4b\u53c8\u5c11\uff0c\u5341\u4e07\u706b\u6025\u51e0\u4e4e\u53ea\u662f\u51fa\u73b0\u5728\u6545\u4e8b\u91cc\u3002\u4e0d\u4fe1\u4f60\u5c31\u5c1d\u8bd5\u7740\u628a\u6240\u6709\u4f60\u89c9\u5f97\u7d27\u6025\u7684\u4e8b\u513f\u5ef6\u8fdf\u4e00\u6bb5\u65f6\u95f4\u518d\u5904\u7406\uff0c\u5982\u6b64\u575a\u6301\u4e00\u4e2a\u6708\u5de6\u53f3\u3002\u6700\u7ec8\u4f60\u5c31\u4f1a\u660e\u767d\u90a3\u4e9b\u4e8b\u513f\u5b9e\u9645\u4e0a\u90fd\u6ca1\u6709\u90a3\u4e48\u7d27\u6025\u3002\u6240\u4ee5\uff0c\u4f60\u53ea\u9700\u8981\u4e00\u4e2a\u5224\u65ad\u6807\u51c6\u5c31\u591f\u4e86\uff1a\u8fd9\u4e8b\u513f\u662f\u5426\u771f\u7684\u91cd\u8981\u3002\u518d\u5f80\u540e\u7684\u9053\u7406\u5c31\u4e00\u76ee\u4e86\u7136\u4e86\uff1a\u771f\u6b63\u6700\u91cd\u8981\u7684\u4efb\u52a1\u6c38\u8fdc\u53ea\u6709\u4e00\u4e2a\u2014\u2014\u90a3\u4e2a\u771f\u6b63\u5bf9\u4f60\u7684\u76ee\u6807\u5b9e\u73b0\u6709\u5e2e\u52a9\u7684\u4efb\u52a1\u3002\n\n\u4e00\u4e8b\u65e0\u6210\u7684\u6700\u6839\u672c\u539f\u56e0\u5c31\u662f\u56e0\u4e3a\u653e\u5f03\u3002\u653e\u5f03\u7684\u539f\u56e0\u6709\u5f88\u591a\u79cd\uff0c\u6700\u5e38\u89c1\u7684\u662f\u201c\u6362\u4e00\u4e2a\u66f4\u597d\u7684\u65b9\u5411\u201d\u3002\u5982\u679c\u786e\u5b9e\u662f\u4e00\u4e2a\u66f4\u597d\u7684\u65b9\u5411\u5012\u4e5f\u7f62\u4e86\u3002\u4f46\u662f\uff0c\u597d\u50cf\u201c\u66f4\u597d\u7684\u65b9\u5411\u201d\u5176\u5b9e\u5e76\u4e0d\u5b58\u5728\u3002\u56e0\u4e3a\uff0c\u5982\u6b64\u4e0b\u53bb\uff0c\u4f60\u4f1a\u4e0d\u505c\u5730\u53d1\u73b0\u201c\u66f4\u597d\u7684\u65b9\u5411\u201d\u3002\u5343\u4e07\u4e0d\u8981\u8bef\u4ee5\u4e3a\u80fd\u591f\u4e0d\u505c\u5730\u627e\u5230\u201c\u66f4\u597d\u7684\u65b9\u5411\u201d\u7684\u4eba\u53ea\u6709\u4f60\u4e00\u4e2a\u3002\u5927\u5bb6\u90fd\u5728\u4e0d\u505c\u5730\u201c\u627e\u5230\u201d\u66f4\u597d\u7684\u65b9\u5411\uff0c\u600e\u4e48\u4e0d\u89c1\u5927\u5bb6\u90fd\u6210\u529f\u5462\uff1f\u6211\u4ece\u6765\u90fd\u4e0d\u76f8\u4fe1\u4eba\u4eba\u90fd\u80fd\u6210\u529f\u4e4b\u7c7b\u7684\u8bdd\uff0c\u6211\u9876\u591a\u76f8\u4fe1\u201c\u5176\u5b9e\u4eba\u4eba\u539f\u672c\u90fd\u6709\u53ef\u80fd\u6210\u529f\u201d\u3002\u6211\u603b\u89c9\u5f97\u4e00\u4e2a\u4eba\u6700\u7ec8\u6210\u529f\uff0c\u5e76\u4e0d\u662f\u56e0\u4e3a\u4ed6\u66fe\u7ecf\u7cbe\u786e\u5730\u8ba1\u5212\u81ea\u5df1\u7684\u6210\u529f\uff0c\u5173\u952e\u5728\u4e8e\u4ed6\u7684\u575a\u6301\u3002\n\n\u6bcf\u4e2a\u8ba1\u5212\u7684\u671f\u9650\u7a76\u7adf\u5e94\u8be5\u8bbe\u4e3a\u591a\u4e45\u624d\u53ef\u80fd\u7528\u6211\u5e73\u51e1\u751a\u81f3\u5e73\u5eb8\u7684\u80fd\u529b\u548c\u5929\u5206\u987a\u5229\u5b9e\u65bd\u5462\uff1f\u6211\u5c1d\u8bd5\u8fc7\u4e00\u5e74\uff0c\u53d1\u73b0\u81ea\u5df1\u7adf\u7136\u8fde\u4e00\u5e74\u7684\u8ba1\u5212\u90fd\u6ca1\u80fd\u529b\u5b8c\u6210\u3002\u4e8e\u662f\uff0c\u518d\u4e00\u6b21\u5e73\u9759\u63a5\u53d7\u81ea\u5df1\u5929\u5206\u5e73\u5e73\u7684\u4e8b\u5b9e\u7684\u540c\u65f6\uff0c\u4e00\u53e3\u6c14\u628a\u671f\u9650\u7f29\u77ed\u5230\u4e00\u4e2a\u661f\u671f\u3002\u7ec8\u4e8e\u53d1\u73b0\uff1a\u5982\u679c\u4e00\u4e2a\u8ba1\u5212\u7684\u671f\u9650\u53ea\u6709\u4e00\u4e2a\u661f\u671f\uff0c\u6211\u662f\u5f88\u5bb9\u6613\u575a\u6301\uff0c\u5e76\u4e14\u5f80\u5f80\u53ef\u4ee5\u51fa\u8272\u5730\u5b8c\u6210\u7684\u3002\uff08// me too\uff09\u8fd9\u4e2a\u53d1\u73b0\u4ee4\u6211\u5f88\u5f00\u5fc3\u3002\u56e0\u4e3a\uff0c\u6211\u53d1\u73b0\u6211\u8fd8\u662f\u53ef\u4ee5\u505a\u4e00\u4e9b\u4e8b\u60c5\u7684\u3002\u5e76\u4e14\uff0c\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u6211\u7adf\u7136\u53ef\u4ee5\u6162\u6162\u628a\u671f\u9650\u5ef6\u957f\uff0c\u4e24\u4e2a\u661f\u671f\uff0c\u4e00\u4e2a\u6708\uff0c\u751a\u81f3\u7adf\u7136\u53ef\u4ee5\u5236\u5b9a\u4e00\u4e2a\u5b63\u5ea6\u7684\u8ba1\u5212\u4e86\uff01\uff08// \u8fd9\u662f\u7ec3\u4e60\u575a\u6301\u7684\u597d\u529e\u6cd5\uff0c\u6162\u6162\u52a0\u957f\u65f6\u95f4\u3002\uff09\n\n\u505a\u8ba1\u5212\u7684\u65f6\u5019\uff0c\u8981\u77e5\u9053\u8fd9\u6837\u4e00\u4ef6\u4e8b\uff1a\u505a\u957f\u671f\u8ba1\u5212\u663e\u7136\u662f\u6b63\u786e\u7684\u5e76\u4e14\u662f\u5fc5\u9700\u7684\u3002\u4f46\u662f\uff0c\u4e0d\u662f\u6bcf\u4e2a\u4eba\u90fd\u6709\u80fd\u529b\u5236\u4f5c\u957f\u671f\u8ba1\u5212\u7684\u3002\u8fd9\u662f\u4e00\u79cd\u80fd\u529b\uff0c\u4e5f\u51e0\u4e4e\u662f\u6700\u91cd\u8981\u7684\u80fd\u529b\u4e4b\u4e00\u3002\u7136\u800c\uff0c\u8fd9\u9700\u8981\u6323\u624e\uff0c\u9700\u8981\u52aa\u529b\uff0c\u9700\u8981\u4ece\u4e00\u70b9\u4e00\u6ef4\u5f00\u59cb\u3002\u4e0d\u8981\u4e00\u4e0a\u6765\u5c31\u5f00\u59cb\u5236\u5b9a\u8fc7\u5206\u957f\u671f\u7684\u8ba1\u5212\u3002\u54ea\u6015\u5236\u5b9a\u4e00\u4e2a\u4e00\u661f\u671f\u7684\u8ba1\u5212\uff0c\u90fd\u4e0d\u662f\u4ef6\u5f88\u5bb9\u6613\u7684\u4e8b\u60c5\u2014\u2014\u5982\u679c\u4f60\u771f\u7684\u5df2\u7ecf\u5f00\u59cb\u5b9e\u8df5\u5c31\u77e5\u9053\u4e86\uff0c\u5c31\u50cf\u6211\u5f53\u5e74\u90a3\u6837\u3002\u4e0d\u8981\u65e0\u77e5\u65e0\u754f\u3002\u7136\u540e\u4e5f\u6ca1\u5fc5\u8981\u5fc3\u5b58\u60f6\u6050\uff0c\u8fd9\u662f\u4e00\u4e2a\u53ea\u8981\u52aa\u529b\u5c31\u5fc5\u7136\u53ef\u4ee5\u83b7\u5f97\u7684\u80fd\u529b\u2014\u2014\u653e\u5fc3\uff0c\u6ca1\u6709\u4eba\u662f\u5929\u751f\u7684\uff0c\u90fd\u662f\u540e\u5929\u4e70\u5f97\u7684\u3002\n\n\u6211\u4eec\u4e00\u751f\u505a\u7684\u4e8b\uff0c\u5927\u591a\u90fd\u662f\u4e00\u4e2a\u8bd5\u9519\u7684\u8fc7\u7a0b\u3002\u5bf9\u4e8e\u4eba\u751f\uff0c\u6ca1\u6709\u4eba\u80fd\u50cf\u89e3\u91ca\u6570\u5b66\u90a3\u6837\u7ed9\u51fa\u666e\u9002\u7684\u516c\u5f0f\u3002\u6c38\u8fdc\u8bb0\u4f4f\uff0c\u9a6c\u4e0a\u884c\u52a8\u662f\u6700\u91cd\u8981\u7684\u3002// \u8ba1\u5212\u4e5f\u8981\u5728\u8bd5\u9519\u4e2d\u4e0d\u65ad\u8c03\u6574\uff0c\u56e0\u4e3a\u4e00\u5f00\u59cb\u5f80\u5f80\u96be\u4ee5\u4f30\u8ba1\u51fa\u6b63\u786e\u7684\u5de5\u4f5c\u91cf\uff0c\u53ea\u6709\u4e0d\u65ad\u5730\u5438\u53d6\u7ecf\u9a8c\u6559\u8bad\uff0c\u4e0d\u65ad\u8c03\u6574\u624d\u80fd\u505a\u51fa\u6070\u5f53\u7684\u8ba1\u5212\u3002\n\n## <a id=\"OpenUp\">\u5f00\u62d3\u6211\u4eec\u7684\u5fc3\u667a</a>\n\n\u7262\u8bb0\u8fd9\u4e16\u754c\u786e\u5b9e\u5b58\u5728\u201c\u4e0e\u73b0\u6709\u7ecf\u9a8c\u76f8\u6096\u7684\u77e5\u8bc6\u201d\u3002\u800c\u540e\u628a\u8fd9\u53e5\u8bdd\u53d8\u6210\u73b0\u5b58\u7ecf\u9a8c\uff0c\u7528\u5b83\u53bb\u7c7b\u6bd4\u672a\u77e5\u3002\u800c\u540e\uff0c\u5fc5\u987b\u6295\u5165\u5927\u91cf\u7684\u65f6\u95f4\u548c\u7cbe\u529b\u53bb\u5b66\u4e60\u548c\u638c\u63e1\u201c\u79d1\u5b66\u65b9\u6cd5\u8bba\u201d\uff0c\u6323\u624e\u7740\u8fdb\u5316\u6210\u771f\u6b63\u610f\u4e49\u4e0a\u7684\u4eba\u7c7b\u3002\n\n\u66fe\u5728\u67d0\u672c\u4e66\u4e0a\u770b\u5230\u4e00\u53e5\u975e\u5e38\u4ee4\u4eba\u9707\u52a8\u7684\u63cf\u8ff0\uff1a\u201c\u5f88\u591a\u4eba\u6b63\u662f\u56e0\u4e3a\u6ca1\u6709\u76ee\u6807\u624d\u4e0d\u505c\u5730\u2019\u5b66\u4e60\u2019 \u201d\u3002\u5f88\u591a\u4eba\u90fd\u6168\u53f9\uff0c\u5de5\u4f5c\u4e4b\u540e\u624d\u77e5\u9053\u4ec0\u4e48\u771f\u6b63\u6709\u7528\uff0c\u53ef\u662f\u201c\u4e66\u5230\u7528\u65f6\u65b9\u6068\u5c11\u201d\u3002\u5982\u679c\uff0c\u4e00\u4e2a\u4eba\u4e0d\u662f\u5f88\u61d2\u60f0\u7684\u8bdd\uff0c\u90a3\u4ec0\u4e48\u65f6\u5019\u5f00\u59cb\u5b66\u90fd\u4e0d\u665a\uff01\u77e5\u9053\u81ea\u5df1\u9700\u8981\u7684\u662f\u4ec0\u4e48\uff0c\u771f\u6b63\u7684\u5b66\u4e60\u624d\u5f00\u59cb\u3002\n\n\u81ea\u5b66\u80fd\u529b\u7684\u6253\u9020\u5c31\u662f\u4ece\u4f60\u8ba4\u771f\u5bf9\u5f85\u5b83\u5f00\u59cb\uff0c\u5b83\u5c31\u50cf\u4f60\u7684\u604b\u4eba\u4e00\u6837\uff0c\u4f60\u5bf9\u5b83\u597d\uff0c\u5b83\u624d\u5bf9\u4f60\u597d\u3002\u5b8c\u5168\u9760\u81ea\u5df1\u5b66\u4e00\u6837\u4e1c\u897f\u5427\uff0c\u7ba1\u5b83\u662f\u4ec0\u4e48\u3002\u5e76\u4e14\u4e00\u5b9a\u8981\u5b66\u597d\uff0c\u5b66\u5230\u6bd4\u76f8\u5f53\u6570\u91cf\u7684\u4eba\u90fd\u597d\uff0c\u5982\u679c\u4f60\u771f\u7684\u505a\u5230\u8fd9\u4e2a\u5730\u6b65\uff0c\u90a3\u4f60\u4e0d\u4ec5\u5df2\u7ecf\u662f\u4e00\u4e2a\u5b8c\u6574\u7684\u4eba\uff0c\u8fd8\u662f\u4e00\u4e2a\u76f8\u5f53\u4f18\u79c0\u7684\u4eba\u2014\u2014\u54c8\uff0c\u4f60\u53ef\u4ee5\u5bf9\u4f60\u81ea\u5df1\u8bf4\u201c\u4f60\u592a\u6709\u624d\u4e86\uff01\u201d\u6211\u4e2a\u4eba\u7684\u5efa\u8bae\u662f\u53bb\u81ea\u89c9\u4e00\u95e8\u8ba1\u7b97\u673a\u7f16\u7a0b\u8bed\u8a00\u3002\u56e0\u4e3a\uff0c\u5173\u4e8e\u8ba1\u7b97\u673a\u7f16\u7a0b\u8bed\u8a00\u7684\u6587\u6863\uff0c\u4e92\u8054\u7f51\u4e0a\u6709\u6700\u5e7f\u6cdb\u6700\u5168\u9762\u7684\u8d44\u6e90\u3002\u5e76\u4e14\uff0c\u4f18\u79c0\u7684\u8d44\u6e90\u5f80\u5f80\u662f\u82f1\u6587\u6587\u6863\u3002\u6240\u4ee5\uff0c\u987a\u5e26\u8fd8\u7ec3\u4e60\u4e86\u82f1\u6587\u9605\u8bfb\u7406\u89e3\u80fd\u529b\u2014\u2014\u60f3\u60f3\u5427\uff0c\u80af\u5b9a\u4e0d\u4ec5\u4ec5\u662f\u4e00\u4e3e\u4e24\u5f97\u3002\n\n\u5982\u679c\uff0c\u4f60\u628a\u65f6\u95f4\u548c\u8fdb\u5c55\u4e4b\u95f4\u7684\u5173\u7cfb\u4ec5\u4ec5\u7406\u89e3\u4e3a\u7eaf\u7cb9\u7684\u7ebf\u6027\u5173\u7cfb\uff0c\u90a3\u4f60\u6700\u7ec8\u6839\u672c\u4e0d\u53ef\u80fd\u9047\u5230\u4f60\u6240\u6ee1\u610f\u7684\u8fdb\u5c55\u3002\u5176\u5b9e\uff0c\u6ca1\u6709\u54ea\u4e2a\u4eba\u53ef\u4ee5\u957f\u65f6\u95f4\u5fcd\u53d7\u5931\u671b\u3002\u8fd9\u6837\u770b\u6765\uff0c\u4f60\u66fe\u7ecf\u7684\u653e\u5f03\uff0c\u5f80\u5f80\u5e76\u4e0d\u662f\u56e0\u4e3a\u4f60\u6ca1\u6709\u6bc5\u529b\uff0c\u800c\u53ea\u662f\u5bf9\u65f6\u95f4\u548c\u8fdb\u5c55\u4e4b\u95f4\u7684\u5173\u7cfb\u7406\u89e3\u9519\u8bef\u9020\u6210\u7684\u3002\n\n\u89c1\u8bc6\u8d8a\u5c11\u7684\u4eba\u8d8a\u559c\u6b22\u7528\u81ea\u5df1\u6240\u6709\u7684\u89c1\u8bc6\u4f5c\u4e3a\u5224\u65ad\u4f9d\u636e\uff0c\u5e76\u4e14\u5b8c\u5168\u4e0d\u987e\u81ea\u5df1\u89c1\u8bc6\u7684\u5c40\u9650\uff0c\u4e5f\u4e0d\u77e5\u9053\u81ea\u5df1\u7684\u89c1\u8bc6\u6709\u5c40\u9650\u3002\n\n\u6559\u662f\u6700\u597d\u7684\u5b66\u4e60\u65b9\u6cd5\u3002\n\n\u542c\u542c\u529d\uff0c\u4ece\u4eca\u5929\u5f00\u59cb\u517b\u6210\u968f\u65f6\u8bb0\u7b14\u8bb0\u7684\u4e60\u60ef\u5427\u3002\u76f8\u4fe1\u6211\uff0c\u6700\u6734\u7d20\u7684\u7eb8\u548c\u7b14\u662f\u6700\u6709\u6548\u7684\u5de5\u5177\u3002\u53ea\u6709\u8bb0\u7b14\u8bb0\u6210\u4e3a\u957f\u671f\u4e60\u60ef\u4e4b\u540e\uff0c\u624d\u4f1a\u771f\u6b63\u4f53\u4f1a\u5230\u8fd9\u4e48\u505a\u7684\u597d\u5904\u3002\u800c\u90a3\u4e9b\u81ea\u4f5c\u806a\u660e\u4e0d\u8fd9\u4e48\u505a\u7684\u4eba\uff0c\u53ea\u4f1a\u56e0\u4e3a\u4ece\u672a\u4f53\u4f1a\u5230\u90a3\u6837\u7684\u597d\u5904\u800c\u201c\u65e0\u6028\u65e0\u6094\u201d\u3002\n\n## <a id=\"WatchOut\">\u5c0f\u5fc3\u6240\u8c13\"\u6210\u529f\u5b66\"</a>\n\n\u52aa\u529b\u662f\u5e94\u5f53\u7684\uff0c\u65e0\u987b\u5f3a\u8c03\u3002\n\n\u63a5\u53d7\u81ea\u5df1\u4e0e\u522b\u4eba\u6ca1\u4ec0\u4e48\u4e0d\u540c\uff0c\u81f3\u5c11\u6ca1\u4ec0\u4e48\u672c\u8d28\u6027\u4e0a\u7684\u4e0d\u540c\uff0c\u662f\u5fc3\u667a\u6b63\u5e38\u6210\u957f\u7684\u91cd\u8981\u524d\u63d0\u4e4b\u4e00\u3002\n\n\u503e\u542c\u4efb\u4f55\u4eba\u8bb2\u8bdd\u7684\u65f6\u5019\uff0c\u90fd\u4e0d\u5e94\u8be5\u5e26\u7740\u201c\u9632\u5907\u3001\u8d28\u7591\u201d\u7684\u5fc3\u6001\uff0c\u90a3\u6837\u53ef\u80fd\u4f1a\u9057\u6f0f\u91cd\u8981\u7684\u4fe1\u606f\u3002\u56e0\u4e3a\uff0c\u5fc3\u6001\u4f1a\u6210\u4e3a\u6211\u4eec\u7684\u6709\u8272\u773c\u955c\uff0c\u4f7f\u5f97\u6211\u4eec\u53ea\u80fd\u6536\u5230\u8fc7\u6ee4\u4e4b\u540e\u7684\u4fe1\u606f\u3002\u7136\u540e\uff0c\u6700\u7ec8\u5bf9\u6240\u83b7\u5f97\u7684\u5168\u90e8\u4fe1\u606f\uff0c\u4e0d\u52a0\u5206\u6790\uff0c\u4e0d\u52a0\u601d\u8003\u5730\u5168\u76d8\u63a5\u53d7\uff0c\u4e5f\u540c\u6837\u53ef\u80fd\u662f\u5371\u9669\u7684\uff0c\u6216\u8005\u662f\u6709\u5bb3\u7684\u3002\n\n\u6709\u4e00\u4e2a\u5f88\u5b9e\u7528\u7684\u5efa\u8bae\u662f\uff1a\u4e0d\u59a8\u53cd\u5176\u9053\u800c\u884c\u4e4b\u2014\u2014\u52aa\u529b\u4ece\u5931\u8d25\u8005\u8eab\u4e0a\u6c72\u53d6\u7ecf\u9a8c\u3002\n\n\u6253\u9020\u4eba\u8109\u4e0d\u5982\u6253\u9020\u81ea\u5df1\u3002\n\n\u76f8\u4fe1\u6211\uff0c\u6240\u8c13\u7684\u4eba\u8109\u5c31\u7b97\u91cd\u8981\uff0c\u4e5f\u6839\u672c\u6ca1\u4ed6\u4eec\u8bf4\u7684\u90a3\u4e48\u91cd\u8981\u3002\n\n\u5f80\u5f80\u53ea\u6709\u4f18\u79c0\u7684\u4eba\u624d\u62e5\u6709\u6709\u6548\u7684\u4eba\u8109\u3002\n\n\u52aa\u529b\u5e76\u4e0d\u50cf\u4f20\u8bf4\u4e2d\u7684\u90a3\u4e48\u8270\u82e6\uff0c\u53ea\u4e0d\u8fc7\u662f\u201c\u6bcf\u5929\u81f3\u5c11\u4e13\u5fc3\u5b66\u4e60\u5de5\u4f5c6\u5c0f\u65f6\u201d\uff1b\u8010\u5fc3\u5374\u8fdc\u6bd4\u5927\u591a\u6570\u4eba\u60f3\u8c61\u7684\u5de8\u5927\uff0c\u201c\u8981\u4e0e\u65f6\u95f4\u76f8\u4f34\u77ed\u5219\u81f3\u5c115\u5e74\uff0c\u957f\u521920\u5e74\u201d\u3002\n\n\u751f\u6d3b\u7684\u667a\u6167\u5c31\u5728\u4e8e\uff0c\u96c6\u4e2d\u7cbe\u529b\u6539\u53d8\u90a3\u4e9b\u80fd\u591f\u6539\u53d8\u7684\uff0c\u800c\u628a\u90a3\u4e9b\u4e0d\u80fd\u6539\u53d8\u7684\u6682\u65f6\u5ffd\u7565\u6389\u3002\u4e13\u5fc3\u6253\u9020\u81ea\u5df1\uff0c\u628a\u81ea\u5df1\u6253\u9020\u6210\u4e00\u4e2a\u4f18\u79c0\u7684\u4eba\uff0c\u4e00\u4e2a\u6709\u7528\u7684\u4eba\uff0c\u4e00\u4e2a\u72ec\u7acb\u7684\u4eba\uff0c\u6bd4\u4ec0\u4e48\u90fd\u91cd\u8981\u3002\n\n\u4e8b\u5b9e\u4e0a\uff0c\u771f\u6b63\u7684\u5173\u5fc3\u6700\u7ec8\u53ea\u6709\u4e00\u4e2a\u8868\u73b0\uff1a\u4e3a\u4e4b\u5fc3\u7518\u60c5\u613f\u5730\u82b1\u8d39\u65f6\u95f4\uff0c\u54ea\u6015\u201c\u6d6a\u8d39\u201d\u65f6\u95f4\u3002\n\n\u4e13\u5fc3\u505a\u53ef\u4ee5\u63d0\u5347\u81ea\u5df1\u7684\u4e8b\u60c5\uff1b\u5b66\u4e60\u5e76\u62e5\u6709\u66f4\u591a\u66f4\u597d\u7684\u6280\u80fd\uff1b\u6210\u4e3a\u4e00\u4e2a\u503c\u5f97\u4ea4\u5f80\u7684\u4eba\u3002\n\n\u5b66\u4f1a\u72ec\u5584\u5176\u8eab\uff0c\u4ee5\u4e0d\u7ed9\u4ed6\u4eba\u5236\u9020\u9ebb\u70e6\u4e3a\u7f8e\u5fb7\uff1b\u7528\u4f60\u7684\u72ec\u7acb\u8d62\u5f97\u5c0a\u91cd\u3002\n\n\u9664\u975e\u6709\u7279\u6b8a\u539f\u56e0\uff0c\u5e94\u8be5\u5c3d\u91cf\u56de\u907f\u90a3\u4e9b\u8fde\u7269\u8d28\u751f\u6d3b\u4e0a\u90fd\u4e0d\u80fd\u72ec\u5584\u5176\u8eab\u7684\u4eba\uff1b\u90a3\u4e9b\u7cbe\u795e\u751f\u6d3b\u4e0a\u90fd\u4e0d\u80fd\u72ec\u5584\u5176\u8eab\u7684\uff0c\u5c31\u66f4\u5e94\u8be5\u56de\u907f\u4e86\u2014\u2014\u5c3d\u7ba1\u7504\u522b\u8d77\u6765\u6bd4\u8f83\u56f0\u96be\u3002\n\n\u771f\u6b63\u5173\u5fc3\u4e00\u4e2a\u670b\u53cb\u7684\u610f\u601d\u662f\u8bf4\uff0c\u4f60\u60c5\u613f\u5728\u4ed6\u8eab\u4e0a\u82b1\u8d39\u751a\u81f3\u6d6a\u8d39\u66f4\u591a\u7684\u65f6\u95f4\u3002\n\n\u8bb0\u4f4f\uff0c\u4e00\u4e2a\u4eba\u7684\u5e78\u798f\u7a0b\u5ea6\uff0c\u5f80\u5f80\u53d6\u51b3\u4e8e\u4ed6\u591a\u5927\u7a0b\u5ea6\u4e0a\u53ef\u4ee5\u8131\u79bb\u5bf9\u5916\u90e8\u4e16\u754c\u7684\u4f9d\u9644\u3002// \u8d5e\u540c\n\n## <a id=\"More\">\u66f4\u591a\u601d\u8003</a>\n\n\u8bb0\u4f4f\uff0c\u4f60\u4e0d\u53ef\u80fd\u767e\u5206\u767e\u5730\u6709\u6548\u7387\uff0c\u81f3\u5c11\u4e0d\u53ef\u80fd\u603b\u662f\u767e\u5206\u767e\u5730\u6709\u6548\u7387\u3002\n\n\u4ed6\u4eec\u7684\u6548\u7387\u5f88\u5dee\u3002\u6839\u6e90\u5728\u4e8e\uff0c\u4ed6\u4eec\u5176\u5b9e\u53ea\u505a\u7b80\u5355\u7684\u4e8b\u60c5\uff0c\u800c\u56de\u907f\u90a3\u4e9b\u6709\u96be\u5ea6\u7684\u5de5\u4f5c\u3002\n\n\u53d7\u5230\u5956\u52b1\u4e4b\u540e\uff0c\u539f\u672c\u6709\u4e24\u4e2a\u9009\u62e9\uff1aa. \u518d\u6b21\u6765\u8fc7\uff1bb. \u89c1\u597d\u5c31\u6536\u3002\u6709\u610f\u601d\u7684\u662f\uff0c\u7edd\u5927\u591a\u6570\u4eba\u4f1a\u81ea\u52a8\u5ffd\u89c6\u7b2c\u4e8c\u4e2a\u9009\u9879\uff08\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u201c\u5e9e\u5179\u9a97\u5c40\u201d\u751f\u751f\u4e0d\u606f\u7684\u6839\u672c\u539f\u56e0\uff09\u3002\u53d7\u5230\u60e9\u7f5a\u4e4b\u540e\uff0c\u540c\u6837\u6709\u4e24\u4e2a\u9009\u9879\uff1aa. \u4ece\u6b64\u78b0\u90fd\u4e0d\u78b0\u90a3\u4ef6\u4e8b\u60c5\uff1bb. \u6323\u624e\u7740\u627e\u4e00\u4e2a\u51fa\u8def\u3002\u540c\u6837\u597d\u73a9\u7684\u662f\uff0c\u8fd9\u6b21\u7edd\u5927\u591a\u6570\u4eba\u8fd8\u662f\u4f1a\u81ea\u52a8\u5ffd\u89c6\u7b2c\u4e8c\u4e2a\u9009\u9879\u3002\n\n\u6240\u4ee5\uff0c\u5f88\u591a\u4eba\u5b9e\u9645\u4e0a\u6839\u672c\u4e0d\u77e5\u9053\u81ea\u5df1\u6240\u8c13\u7684\u201c\u559c\u6b22\u505a\u67d0\u4ef6\u4e8b\u60c5\u201d\u5b9e\u9645\u4e0a\u66f4\u53ef\u80fd\u53ea\u4e0d\u8fc7\u662f\u56e0\u4e3a\u90a3\u4ef6\u4e8b\u60c5\u76f8\u5bf9\u7b80\u5355\u3001\u5bb9\u6613\u83b7\u5f97\u5956\u52b1\u800c\u5df2\u3002\u529e\u4e8b\u62d6\u62c9\u7684\u4eba\u5176\u5b9e\u5e76\u975e\u4e0d\u505a\u4e8b\uff0c\u4ed6\u4eec\u505a\u4e8b\uff0c\u751a\u81f3\u505a\u5f88\u591a\u4e8b\uff1b\u4ed6\u4eec\u4e5f\u5e76\u975e\u201c\u4e0d\u52aa\u529b\u201d\uff0c\u4ed6\u4eec\u82b1\u5f88\u957f\u65f6\u95f4\u53bb\u505a\u4e8b\u2014\u2014\u53ea\u4e0d\u8fc7\u4ed6\u4eec\u82b1\u8d39\u5f88\u591a\u65f6\u95f4\u53ea\u505a\u5f88\u591a\u975e\u5e38\u5bb9\u6613\u7684\u4e8b\u60c5\u3002\n\n\u6211\u5e38\u5e38\u89c2\u5bdf\u90a3\u4e48\u591a\u7684\u4eba\u4e3a\u4ec0\u4e48\u65e0\u6cd5\u575a\u6301\u2014\u2014\u5c3d\u7ba1\u4ed6\u4eec\u548c\u90a3\u4e9b\u5c11\u6570\u6700\u7ec8\u575a\u6301\u4e0b\u6765\u7684\u4eba\u4e00\u6837\uff0c\u90fd\u6709\u7740\u826f\u597d\u7684\u613f\u671b\u3002\u7b2c\u4e00\u4e2a\u53ef\u80fd\u6027\u662f\uff0c\u4ed6\u4eec\u6700\u521d\u7684\u65f6\u5019\uff0c\u4e00\u4e0b\u5b50\u7ec3\u5f97\u592a\u72e0\u4e86\u2014\u2014\u72e0\u5230\u4e0d\u8981\u8bf4\u4ed6\u4eec\uff0c\u5b9e\u9645\u4e0a\u662f\u8c01\u90fd\u575a\u6301\u4e0d\u4e0b\u6765\u7684\u5730\u6b65\u3002\n\n\u5f88\u591a\u4eba\u7684\u8ba1\u5212\u4e4b\u6240\u4ee5\u4e0d\u80fd\u575a\u6301\u5b8c\u6210\uff0c\u662f\u56e0\u4e3a\u4ed6\u4eec\u7684\u8ba1\u5212\u5b9e\u9645\u4e0a\u662f\u201c\u8d85\u4eba\u8ba1\u5212\u201d\u2014\u2014\u201c\u4e0d\u53ef\u80fd\u5b8c\u6210\u4e4b\u4efb\u52a1\u201d\u3002\u6211\u7ecf\u5e38\u770b\u5230\u5b66\u751f\u8ba1\u5212\u4e0a\u5199\u7740\u201c\u6bcf\u5929\u80cc200\u4e2a\u5355\u8bcd\u201d\u3001\u201c\u6bcf\u5929\u51995\u7bc7\u82f1\u6587\u4f5c\u6587\u201d\u4ec0\u4e48\u7684\u3002\u8fd9\u6837\u7684\u5f3a\u5ea6\uff0c\u5bf9\u8d77\u6b65\u7684\u4eba\u6765\u8bb2\uff0c\u53ea\u4e0d\u8fc7\u662f\u201c\u8c8c\u4f3c\u53ef\u9760\u201d\u800c\u5df2\uff08// \u53ef\u80fd\u521a\u5f00\u59cb\u51e0\u5929\u53ef\u4ee5\u505a\u5230\uff0c\u4f46\u662f\u5f88\u96be\u575a\u6301\u4e0b\u6765\u7684\uff0c\u65f6\u95f4\u4e5f\u5f80\u5f80\u4e0d\u5141\u8bb8\uff0c\u56e0\u4e3a\u6bcf\u5929\u4f60\u8fd8\u6709\u5f88\u591a\u522b\u7684\u4e8b\u9700\u8981\u5904\u7406\uff09\u3002\u5728\u4e00\u4e2a\u6240\u6709\u4eba\u90fd\u5306\u5306\u5fd9\u5fd9\u7684\u4e16\u754c\u91cc\uff0c\u60f3\u653e\u6162\u8282\u594f\u5b9e\u5728\u662f\u4e00\u4ef6\u975e\u5e38\u96be\u7684\u4e8b\u60c5\u3002\u4f46\u662f\uff0c\u5e94\u8be5\u8bb0\u4f4f\u7684\u662f\uff1a\u51e1\u662f\u503c\u5f97\u505a\u7684\u4e8b\u60c5\uff0c\u90fd\u503c\u5f97\u6162\u6162\u505a\u2014\u2014\u505a\u5f88\u4e45\u5f88\u4e45\u3002\n\n\u8981\u60f3\u529e\u6cd5\u63d0\u524d\u9884\u77e5\u81ea\u5df1\u9700\u8981\u600e\u6837\u7684\u6280\u80fd\uff0c\u7136\u540e\u786e\u5b9a\u90a3\u662f\u4e00\u4e2a\u81ea\u5df1\u53ef\u4ee5\u901a\u8fc7\u7ec3\u4e60\u771f\u6b63\u719f\u7ec3\u7684\u6280\u80fd\uff0c\u800c\u540e\u5236\u5b9a\u957f\u671f\u8ba1\u5212\uff0c\u4e00\u70b9\u4e00\u70b9\u5730\u6267\u884c\u8be5\u8ba1\u5212\u3002\n\n\u505a\u4e2a\u4e0d\u8fdf\u5230\u7684\u4eba\u30021. \u517b\u6210\u89c4\u5f8b\u751f\u6d3b\u7684\u4e60\u60ef\u3002 2. \u6bcf\u5929\u68c0\u67e5\u81ea\u5df1\u7684\u65f6\u95f4\u8868\u81f3\u5c11\u4e09\u6b21\u3002 3. \u5047\u5b9a\u81ea\u5df1\u505a\u7684\u6bcf\u4ef6\u4e8b\u60c5\u9700\u8981\u7684\u65f6\u95f4\u6bd4\u60f3\u8c61\u4e2d\u66f4\u591a\u4e00\u70b9\u30024. \u5047\u5b9a\u4f60\u6c38\u8fdc\u90fd\u4f1a\u9047\u5230\u4ea4\u901a\u5835\u585e\u3002\uff08// \u5e26\u4e0a\u4e00\u672c\u4e66\u5728\u53d1\u751f\u8fd9\u4e9b\u610f\u5916\u65f6\u53ef\u4ee5\u4e0d\u6d6a\u8d39\u65f6\u95f4\u3002\u8bb0\u4f4f\uff0c\u610f\u5916\u603b\u662f\u53d1\u751f\u7edd\u5bf9\u4e0d\u662f\u56e0\u4e3a\u4f60\u7684\u8fd0\u6c14\u683c\u5916\u5dee\uff0c\u800c\u5f80\u5f80\u53ea\u4e0d\u8fc7\u662f\u56e0\u4e3a\u4f60\u8003\u8651\u5f97\u4e0d\u591f\u5468\u5168\u3002\uff095. \u5047\u5b9a\u5176\u4ed6\u4eba\u90fd\u4f1a\u8fdf\u5230\u3002 6. \u5c3d\u91cf\u4e0d\u8981\u56e0\u4e3a\u522b\u4eba\u4ee5\u81f4\u800c\u8d23\u602a\u4ed6\u4eec\u3002\n\n\u6210\u719f\u7684\u4eba\u603b\u662f\u77e5\u9053\u5982\u4f55\u8ba9\u522b\u4eba\u8212\u670d\u3002\n\n\u5f88\u591a\u65f6\u5019\uff0c\u6240\u8c13\u7684\u201c\u8c26\u865a\u201d\u548c\u201c\u4f4e\u8c03\u201d\u4e8b\u5b9e\u4e0a\u662f\u4e00\u79cd\u81ea\u6211\u4fdd\u62a4\u7684\u4f18\u5316\u7b56\u7565\u3002\n\n## <a id=\"Change\">\u4ece\u6b64\u65f6\u6b64\u523b\u5f00\u59cb\u6539\u53d8</a>\n\n\u5927\u591a\u6570\u4e8b\u60c5\u90fd\u9700\u8981\u63d0\u524d\u51c6\u5907\uff0c\u4e5f\u90fd\u53ef\u4ee5\u63d0\u524d\u51c6\u5907\u3002\u8ba4\u8bc6\u5230\u8fd9\u4e00\u70b9\u672c\u8eab\u5c31\u51e0\u4e4e\u662f\u4e00\u5207\u6539\u53d8\u7684\u8d77\u70b9\u3002\n\n\u4e0d\u8981\u65e0\u8c13\u5730\u76f8\u4fe1\u4ec0\u4e48\u201c\u7a81\u7136\u95ea\u73b0\u7684\u7075\u611f\u201d\u7684\u5b58\u5728\u3002\u7075\u611f\u8fd9\u4e1c\u897f\u5c31\u7b97\u5b58\u5728\uff0c\u4e5f\u4e0d\u4f1a\u662f\u5e73\u767d\u65e0\u6545\u51fa\u73b0\u7684\uff0c\u80af\u5b9a\u662f\u6709\u6765\u5386\u7684\u3002\u53ea\u4e0d\u8fc7\u662f\u6211\u4eec\u7ecf\u5e38\u8bf4\u7684\u201c\u91cf\u53d8\u5230\u8d28\u53d8\u201d\u7684\u90a3\u4e00\u77ac\u95f4\u7a81\u7136\u7efd\u653e\u7684\u94c1\u6811\u4e4b\u82b1\u3002\n\n\u4eba\u5fc5\u987b\u52aa\u529b\u3002\u5982\u679c\u5927\u5bb6\u90fd\u52aa\u529b\u7684\u65f6\u5019\uff0c\u90a3\u4f60\u5c31\u6700\u597d\u5c3d\u91cf\u5f00\u59cb\u52aa\u529b\uff0c\u5e76\u4e14\u66f4\u52aa\u529b\u624d\u597d\u3002\u4eba\u4eec\u603b\u662f\u8bf4\uff0c\u7b28\u9e1f\u5148\u98de\uff0c\u5176\u5b9e\uff0c\u6709\u5f88\u591a\u9e1f\u4e4b\u6240\u4ee5\u5148\u98de\u4e5f\u8bb8\u5e76\u4e0d\u662f\u56e0\u4e3a\u5b83\u4eec\u7b28\u3002\u76f8\u53cd\uff0c\u66f4\u53ef\u80fd\u662f\u56e0\u4e3a\u5b83\u4eec\u66f4\u806a\u660e\u3002\n\n\u65e9\u5c31\u8bf4\u8fc7\uff0c\u6240\u8c13\u575a\u6301\u4e0d\u61c8\uff0c\u5176\u672c\u8d28\u662f\u65f6\u95f4\u7684\u6295\u5165\u3002\u56e0\u4e3a\u4eba\u4eec\u5728\u505a\u4e00\u4ef6\u4e8b\uff0c\u4e3a\u4e86\u6210\u529f\u575a\u6301\u4e0d\u61c8\u7684\u65f6\u5019\uff0c\u6700\u7ec8\u4f1a\u53d1\u73b0\u5927\u591a\u7684\u52aa\u529b\u5176\u5b9e\u4e0d\u8fc7\u662f\u7b80\u5355\u800c\u53c8\u8c8c\u4f3c\u67af\u71e5\u7684\u91cd\u590d\u3002\u6bd5\u6dd1\u654f\u5728\u5979\u7684\u5c0f\u8bd5\u300a\u5973\u5fc3\u7406\u5e08\u300b\u91cc\u8bf4\uff1a\u201c\u4e00\u676f\u5496\u5561\u6700\u91cd\u8981\u7684\u662f\u4ec0\u4e48\uff1f\u662f\u6c34\u3002\u4e00\u676f\u5496\u5561\u91cc98%\u90fd\u662f\u6c34\u201d\u3002\u800c\u90a3\u4e9b\u7b80\u5355\u800c\u53c8\u8c8c\u4f3c\u67af\u71e5\u7684\u91cd\u590d\u5c31\u597d\u50cf\u5496\u5561\u91cc\u7684\u6c34\u4e00\u6837\u91cd\u8981\u3002\n\n\u9996\u5148\uff0c\u6240\u6709\u7684\u8010\u5fc3\u90fd\u6765\u81ea\u4e8e\u4e86\u89e3\u3002// \u56e0\u4e3a\u4e86\u89e3\uff0c\u4f60\u4f1a\u77e5\u9053\u4f60\u7684\u8d77\u70b9\u5728\u54ea\u91cc\uff0c\u4f60\u7684\u7ec8\u70b9\u5728\u54ea\u91cc\uff0c\u800c\u4f60\u6b64\u523b\u5728\u54ea\u91cc\u3002\u56e0\u4e3a\u4e86\u89e3\uff0c\u4f60\u77e5\u9053\u8010\u5fc3\u5730\u518d\u575a\u6301\u591a\u957f\u65f6\u95f4\uff0c\u5c31\u80fd\u53d6\u5f97\u9636\u6bb5\u6027\u7684\u80dc\u5229\u3002\u7136\u540e\u53ef\u4ee5\u6574\u88c5\u5f85\u53d1\uff0c\u5f00\u59cb\u4e0b\u4e00\u9636\u6bb5\u7684\u8def\u7a0b\u3002\n\n\u201c\u6bcf\u6b21\u6bd4\u8d5b\u4e4b\u524d\uff0c\u6211\u90fd\u8981\u4e58\u8f66\u628a\u6bd4\u8d5b\u7684\u7ebf\u8def\u4ed4\u7ec6\u770b\u4e00\u904d\uff0c\u5e76\u628a\u6cbf\u9014\u6bd4\u8f83\u9192\u76ee\u7684\u6807\u5fd7\u753b\u4e0b\u6765\u3002\u6bd4\u5982\u7b2c\u4e00\u4e2a\u6807\u5fd7\u662f\u94f6\u884c\uff0c\u7b2c\u4e8c\u4e2a\u6807\u5fd7\u662f\u4e00\u68f5\u5927\u6811\uff0c\u7b2c\u4e09\u4e2a\u6807\u5fd7\u662f\u4e00\u5ea7\u7ea2\u623f\u5b50\uff0c\u8fd9\u6837\u4e00\u76f4\u753b\u5230\u8d5b\u7a0b\u7684\u7ec8\u70b9\u3002\u6bd4\u8d5b\u5f00\u59cb\u540e\uff0c\u6211\u5c31\u4ee5\u767e\u7c73\u51b2\u523a\u7684\u901f\u5ea6\u594b\u529b\u5411\u7b2c\u4e00\u4e2a\u76ee\u6807\u51b2\u53bb\uff0c\u7b49\u5230\u8fbe\u7b2c\u4e00\u4e2a\u76ee\u6807\uff0c\u6211\u53c8\u4ee5\u540c\u6837\u7684\u901f\u5ea6\u5411\u7b2c\u4e8c\u4e2a\u76ee\u6807\u51b2\u53bb\u3002\u56db\u5341\u51e0\u516c\u91cc\u7684\u8d5b\u7a0b\uff0c\u5c31\u88ab\u6211\u5206\u89e3\u6210\u8fd9\u4e48\u51e0\u4e2a\u5c0f\u76ee\u6807\u8f7b\u677e\u5730\u8dd1\u5b8c\u4e86\u3002\u8d77\u521d\uff0c\u6211\u5e76\u4e0d\u61c2\u8fd9\u6837\u7684\u9053\u7406\uff0c\u6211\u628a\u6211\u7684\u76ee\u6807\u5b9a\u5728\u56db\u5341\u51e0\u516c\u91cc\u5904\u7684\u7ec8\u70b9\u7ebf\u4e0a\uff0c\u7ed3\u679c\u6211\u8dd1\u5230\u5341\u51e0\u516c\u91cc\u65f6\u5c31\u75b2\u60eb\u4e0d\u582a\u4e86\uff0c\u6211\u88ab\u524d\u9762\u90a3\u6bb5\u9065\u8fdc\u7684\u8def\u7a0b\u7ed9\u5413\u5012\u4e86\u3002\u201d // \u4e86\u89e3\u4f60\u8981\u505a\u7684\u4e8b\u60c5\uff08\u5373\u4f7f\u4e0d\u80fd\u6e05\u695a\u5730\u4e86\u89e3\uff0c\u4e5f\u5c3d\u91cf\u53bb\u5f04\u6e05\u66f4\u591a\u7684\u7ec6\u8282\uff0c\u5e76\u5728\u6267\u884c\u8fc7\u7a0b\u4e2d\u8c03\u6574\uff09\uff0c\u5e76\u5c06\u5927\u4efb\u52a1\u5206\u4e3a\u5c0f\u4efb\u52a1\u3002\u4eba\u4eec\u505a\u4e8b\u662f\u9700\u8981\u53cd\u9988\u7684\uff0c\u5c0f\u4efb\u52a1\u7684\u8fbe\u6210\u4f1a\u7ed9\u6267\u884c\u8005\u4ee5\u6b63\u9762\u53cd\u9988\uff0c\u8ba9\u4ed6\u80fd\u4fe1\u5fc3\u6ee1\u6ee1\u5730\u5f00\u59cb\u4e0b\u4e00\u4e2a\u5c0f\u4efb\u52a1\u3002\u5982\u679c\u957f\u65f6\u95f4\u6ca1\u6709\u6b63\u9762\u7684\u53cd\u9988\uff0c\u6bc5\u529b\u518d\u597d\u4e5f\u5f88\u96be\u575a\u6301\u4e0b\u6765\u3002\n\n\u5f88\u591a\u4eba\u5b81\u613f\u6b7b\u4e5f\u4e0d\u613f\u601d\u8003\u3002", 
                        "published_at": 1431583320000, 
                        "published_by": 1, 
                        "slug": "\u628a\u300a\u628a\u65f6\u95f4\u5f53\u4f5c\u670b\u53cb\u300b\u8bfb\u8584", 
                        "status": "published", 
                        "title": "\u628a\u300a\u628a\u65f6\u95f4\u5f53\u4f5c\u670b\u53cb\u300b\u8bfb\u8584", 
                        "updated_at": 1431583320000, 
                        "updated_by": 1, 
                        "uuid": "31524404-71eb-401a-87d7-467217698241"
                    }, 
                    {
                        "created_at": 1431959520000, 
                        "created_by": 1, 
                        "id": 11, 
                        "language": "en_US", 
                        "markdown": "- Nginx\u591a\u7ad9\u70b9SSL\u8bc1\u4e66\u652f\u6301\n[https://blog.hackroad.com/operations-engineer/linux_server/8813.html](https://blog.hackroad.com/operations-engineer/linux_server/8813.html)\n- nginx \u76ee\u5f55\u4fdd\u62a4\u3001IP\u8bbf\u95ee\u9650\u5236\u3001\u9632\u76d7\u94fe\u3001\u4e0b\u8f7d\u9650\u901f\u53ca\u8bbe\u7f6e\u591a\u57df\u540d\u7b49\u7b49 [https://blog.hackroad.com/operations-engineer/linux_server/1429.html](https://blog.hackroad.com/operations-engineer/linux_server/1429.html)", 
                        "published_at": 1431959520000, 
                        "published_by": 1, 
                        "slug": "nginx-studing", 
                        "status": "published", 
                        "title": "nginx studing", 
                        "updated_at": 1431959520000, 
                        "updated_by": 1, 
                        "uuid": "6f115a60-67bb-4b9b-a5bc-c2e9ed6aff1a"
                    }
                ], 
                "posts_tags": [
                    {
                        "id": 1, 
                        "post_id": 1, 
                        "tag_id": 1
                    }, 
                    {
                        "id": 2, 
                        "post_id": 1, 
                        "tag_id": 2
                    }, 
                    {
                        "id": 3, 
                        "post_id": 2, 
                        "tag_id": 3
                    }, 
                    {
                        "id": 4, 
                        "post_id": 3, 
                        "tag_id": 4
                    }, 
                    {
                        "id": 5, 
                        "post_id": 4, 
                        "tag_id": 5
                    }, 
                    {
                        "id": 6, 
                        "post_id": 4, 
                        "tag_id": 6
                    }, 
                    {
                        "id": 7, 
                        "post_id": 5, 
                        "tag_id": 7
                    }, 
                    {
                        "id": 8, 
                        "post_id": 6, 
                        "tag_id": 8
                    }, 
                    {
                        "id": 9, 
                        "post_id": 6, 
                        "tag_id": 9
                    }, 
                    {
                        "id": 10, 
                        "post_id": 7, 
                        "tag_id": 10
                    }, 
                    {
                        "id": 11, 
                        "post_id": 8, 
                        "tag_id": 11
                    }, 
                    {
                        "id": 12, 
                        "post_id": 9, 
                        "tag_id": 12
                    }, 
                    {
                        "id": 13, 
                        "post_id": 9, 
                        "tag_id": 13
                    }, 
                    {
                        "id": 14, 
                        "post_id": 10, 
                        "tag_id": 7
                    }, 
                    {
                        "id": 15, 
                        "post_id": 11, 
                        "tag_id": 14
                    }, 
                    {
                        "id": 16, 
                        "post_id": 11, 
                        "tag_id": 15
                    }
                ], 
                "roles": [
                    {
                        "created_at": "2015-08-21T15:37:48.000Z", 
                        "created_by": 1, 
                        "description": "\u7ba1\u7406\u5458", 
                        "id": 1, 
                        "name": "Administrator", 
                        "updated_at": "2015-08-21T15:37:48.000Z", 
                        "updated_by": 1, 
                        "uuid": "b9093ce9-6f8e-4338-83e1-cbeb934ab5b4"
                    }, 
                    {
                        "created_at": "2015-08-21T15:37:48.000Z", 
                        "created_by": 1, 
                        "description": "\u7f16\u8f91", 
                        "id": 2, 
                        "name": "Editor", 
                        "updated_at": "2015-08-21T15:37:48.000Z", 
                        "updated_by": 1, 
                        "uuid": "39c553ed-721e-4523-830c-e1e868ae3eae"
                    }, 
                    {
                        "created_at": "2015-08-21T15:37:48.000Z", 
                        "created_by": 1, 
                        "description": "\u4f5c\u8005", 
                        "id": 3, 
                        "name": "Author", 
                        "updated_at": "2015-08-21T15:37:48.000Z", 
                        "updated_by": 1, 
                        "uuid": "6e0f6c78-8096-41c5-b4c3-74be39a5058d"
                    }, 
                    {
                        "created_at": "2015-08-21T15:37:48.000Z", 
                        "created_by": 1, 
                        "description": "\u535a\u5ba2\u6240\u6709\u8005", 
                        "id": 4, 
                        "name": "Owner", 
                        "updated_at": "2015-08-21T15:37:48.000Z", 
                        "updated_by": 1, 
                        "uuid": "7e42ff06-e282-4186-b4f4-44fa28b363d5"
                    }
                ], 
                "roles_users": [
                    {
                        "id": 1, 
                        "role_id": 4, 
                        "user_id": 1
                    }
                ], 
                "settings": [
                    {
                        "created_at": "2015-08-21T15:37:49.000Z", 
                        "created_by": 1, 
                        "id": 1, 
                        "key": "databaseVersion", 
                        "type": "core", 
                        "updated_at": "2015-08-21T15:37:49.000Z", 
                        "updated_by": 1, 
                        "uuid": "870c2ab7-d267-4e0d-b3bc-407c7b1b22d8", 
                        "value": "003"
                    }, 
                    {
                        "created_at": "2015-08-21T15:37:49.000Z", 
                        "created_by": 1, 
                        "id": 2, 
                        "key": "dbHash", 
                        "type": "core", 
                        "updated_at": "2015-08-21T15:37:49.000Z", 
                        "updated_by": 1, 
                        "uuid": "9ddf8675-e516-49ee-91b2-2dd1e3a56bff", 
                        "value": "56ffd985-d741-4cf2-b881-dd2f1ca53ab1"
                    }, 
                    {
                        "created_at": "2015-08-21T15:37:49.000Z", 
                        "created_by": 1, 
                        "id": 3, 
                        "key": "nextUpdateCheck", 
                        "type": "core", 
                        "updated_at": "2015-09-04T06:32:37.000Z", 
                        "updated_by": 1, 
                        "uuid": "8d1eddae-6935-44d3-8d09-352cb63e2eae", 
                        "value": "1441434757"
                    }, 
                    {
                        "created_at": "2015-08-21T15:37:49.000Z", 
                        "created_by": 1, 
                        "id": 4, 
                        "key": "displayUpdateNotification", 
                        "type": "core", 
                        "updated_at": "2015-09-04T06:32:37.000Z", 
                        "updated_by": 1, 
                        "uuid": "e51dc1cd-4d36-41ad-b2a6-6f2063837d43", 
                        "value": "0.6.3"
                    }, 
                    {
                        "created_at": "2015-08-21T15:37:49.000Z", 
                        "created_by": 1, 
                        "id": 5, 
                        "key": "title", 
                        "type": "blog", 
                        "updated_at": "2015-09-04T08:36:54.000Z", 
                        "updated_by": 1, 
                        "uuid": "7ff16846-34c7-4998-8e7c-3a909d666be6", 
                        "value": "Sherlocky's blog"
                    }, 
                    {
                        "created_at": "2015-08-21T15:37:49.000Z", 
                        "created_by": 1, 
                        "id": 6, 
                        "key": "description", 
                        "type": "blog", 
                        "updated_at": "2015-09-04T08:36:54.000Z", 
                        "updated_by": 1, 
                        "uuid": "a8acc123-ca8a-4053-bfee-584121769741", 
                        "value": "Thoughts, stories and ideas."
                    }, 
                    {
                        "created_at": "2015-08-21T15:37:49.000Z", 
                        "created_by": 1, 
                        "id": 7, 
                        "key": "email", 
                        "type": "blog", 
                        "updated_at": "2015-09-04T08:36:54.000Z", 
                        "updated_by": 1, 
                        "uuid": "ee896fcd-41b5-48b2-b735-9f340e44f93a", 
                        "value": "y836097668@126.com"
                    }, 
                    {
                        "created_at": "2015-08-21T15:37:49.000Z", 
                        "created_by": 1, 
                        "id": 8, 
                        "key": "logo", 
                        "type": "blog", 
                        "updated_at": "2015-09-04T08:36:54.000Z", 
                        "updated_by": 1, 
                        "uuid": "e7e70576-2234-462b-8304-7e6664c1d3d3", 
                        "value": "http://7xljyg.com1.z0.glb.clouddn.com/b/73/3d393dea6ef03994a875106d45656.png"
                    }, 
                    {
                        "created_at": "2015-08-21T15:37:49.000Z", 
                        "created_by": 1, 
                        "id": 9, 
                        "key": "cover", 
                        "type": "blog", 
                        "updated_at": "2015-09-04T08:36:54.000Z", 
                        "updated_by": 1, 
                        "uuid": "b39486e4-821a-45fb-b453-6cbe486f2361", 
                        "value": "http://7xljyg.com1.z0.glb.clouddn.com/2/39/daeeac0bdd18fcc35bd52639d611f.jpg"
                    }, 
                    {
                        "created_at": "2015-08-21T15:37:49.000Z", 
                        "created_by": 1, 
                        "id": 10, 
                        "key": "defaultLang", 
                        "type": "blog", 
                        "updated_at": "2015-09-04T08:36:54.000Z", 
                        "updated_by": 1, 
                        "uuid": "77535bb8-956a-4032-b2b6-f74ba116b057", 
                        "value": "zh_CN"
                    }, 
                    {
                        "created_at": "2015-08-21T15:37:49.000Z", 
                        "created_by": 1, 
                        "id": 11, 
                        "key": "postsPerPage", 
                        "type": "blog", 
                        "updated_at": "2015-09-04T08:36:54.000Z", 
                        "updated_by": 1, 
                        "uuid": "d03ede1e-14d0-415c-a2bb-8c52d28adb34", 
                        "value": "5"
                    }, 
                    {
                        "created_at": "2015-08-21T15:37:49.000Z", 
                        "created_by": 1, 
                        "id": 12, 
                        "key": "forceI18n", 
                        "type": "blog", 
                        "updated_at": "2015-09-04T08:36:54.000Z", 
                        "updated_by": 1, 
                        "uuid": "fa79ffda-d9f5-4bc2-8f2a-8a1e96897b0e", 
                        "value": "true"
                    }, 
                    {
                        "created_at": "2015-08-21T15:37:49.000Z", 
                        "created_by": 1, 
                        "id": 13, 
                        "key": "permalinks", 
                        "type": "blog", 
                        "updated_at": "2015-09-04T08:36:54.000Z", 
                        "updated_by": 1, 
                        "uuid": "ace61fa2-28aa-480a-87cc-fcba5b337dc0", 
                        "value": "/:year/:month/:day/:slug/"
                    }, 
                    {
                        "created_at": "2015-08-21T15:37:49.000Z", 
                        "created_by": 1, 
                        "id": 14, 
                        "key": "ghost_head", 
                        "type": "blog", 
                        "updated_at": "2015-09-04T08:36:54.000Z", 
                        "updated_by": 1, 
                        "uuid": "b3b37fce-6381-4aac-b926-1db81e552afe", 
                        "value": ""
                    }, 
                    {
                        "created_at": "2015-08-21T15:37:49.000Z", 
                        "created_by": 1, 
                        "id": 15, 
                        "key": "ghost_foot", 
                        "type": "blog", 
                        "updated_at": "2015-09-04T08:36:54.000Z", 
                        "updated_by": 1, 
                        "uuid": "4adf3f27-5d65-4d9e-9a61-8e9bd8ac107f", 
                        "value": ""
                    }, 
                    {
                        "created_at": "2015-08-21T15:37:49.000Z", 
                        "created_by": 1, 
                        "id": 16, 
                        "key": "labs", 
                        "type": "blog", 
                        "updated_at": "2015-09-04T08:36:54.000Z", 
                        "updated_by": 1, 
                        "uuid": "5e9b6fc0-0efb-4cd6-a230-a3ded18590cc", 
                        "value": "{}"
                    }, 
                    {
                        "created_at": "2015-08-21T15:37:49.000Z", 
                        "created_by": 1, 
                        "id": 17, 
                        "key": "navigation", 
                        "type": "blog", 
                        "updated_at": "2015-09-04T08:36:54.000Z", 
                        "updated_by": 1, 
                        "uuid": "048ea3b0-20cb-4c5b-bca0-8c8d31eba48f", 
                        "value": "[{\"label\":\"\u9996\u9875\",\"url\":\"http://gblog.sherlocky.com/\"}]"
                    }, 
                    {
                        "created_at": "2015-08-21T15:37:49.000Z", 
                        "created_by": 1, 
                        "id": 18, 
                        "key": "isPrivate", 
                        "type": "blog", 
                        "updated_at": "2015-09-04T08:36:54.000Z", 
                        "updated_by": 1, 
                        "uuid": "7c619b10-8840-486f-862e-69d79db3f3dc", 
                        "value": "false"
                    }, 
                    {
                        "created_at": "2015-08-21T15:37:49.000Z", 
                        "created_by": 1, 
                        "id": 19, 
                        "key": "password", 
                        "type": "blog", 
                        "updated_at": "2015-09-04T08:36:54.000Z", 
                        "updated_by": 1, 
                        "uuid": "c7152259-f143-4d71-a27a-37c4455e7bb9", 
                        "value": ""
                    }, 
                    {
                        "created_at": "2015-08-21T15:37:49.000Z", 
                        "created_by": 1, 
                        "id": 20, 
                        "key": "activeApps", 
                        "type": "app", 
                        "updated_at": "2015-08-21T15:37:49.000Z", 
                        "updated_by": 1, 
                        "uuid": "b2edf06c-9fd0-400b-8c87-b097dbb3d74c", 
                        "value": "[]"
                    }, 
                    {
                        "created_at": "2015-08-21T15:37:49.000Z", 
                        "created_by": 1, 
                        "id": 21, 
                        "key": "installedApps", 
                        "type": "app", 
                        "updated_at": "2015-09-04T08:34:45.000Z", 
                        "updated_by": 1, 
                        "uuid": "2541c2e8-a2ed-4e14-b1bc-143125466a2a", 
                        "value": "[]"
                    }, 
                    {
                        "created_at": "2015-08-21T15:37:49.000Z", 
                        "created_by": 1, 
                        "id": 22, 
                        "key": "activeTheme", 
                        "type": "theme", 
                        "updated_at": "2015-09-04T08:36:54.000Z", 
                        "updated_by": 1, 
                        "uuid": "32bf509b-afc0-473d-a1e3-f53bba59d9bb", 
                        "value": "roon-zh"
                    }
                ], 
                "tags": [
                    {
                        "id": 1, 
                        "name": "iptables", 
                        "slug": "iptables", 
                        "uuid": "d450b329-ebfd-411a-b286-4511f9a76ce0"
                    }, 
                    {
                        "id": 2, 
                        "name": "vps", 
                        "slug": "vps", 
                        "uuid": "f189ca60-304d-4840-8ac8-37f3f93fddc3"
                    }, 
                    {
                        "id": 3, 
                        "name": "mysql", 
                        "slug": "mysql", 
                        "uuid": "07fbd548-79e9-4886-8944-28cc6290868a"
                    }, 
                    {
                        "id": 4, 
                        "name": "markdown", 
                        "slug": "markdown", 
                        "uuid": "9b08995c-2388-4d20-add2-e769740e7302"
                    }, 
                    {
                        "id": 5, 
                        "name": "git", 
                        "slug": "git", 
                        "uuid": "e056bf0a-e195-45f5-9f06-de2ba842bcb4"
                    }, 
                    {
                        "id": 6, 
                        "name": "github", 
                        "slug": "github", 
                        "uuid": "3f823722-77a8-4aa7-a67a-3902acede173"
                    }, 
                    {
                        "id": 7, 
                        "name": "reading", 
                        "slug": "reading", 
                        "uuid": "d78108bd-d8bb-47ba-912a-d5fecf2e1959"
                    }, 
                    {
                        "id": 8, 
                        "name": "redis", 
                        "slug": "redis", 
                        "uuid": "e50e5ecd-503f-4b0c-b36e-47b413b0e672"
                    }, 
                    {
                        "id": 9, 
                        "name": "cache", 
                        "slug": "cache", 
                        "uuid": "21ba2c25-0854-4627-a35f-4aa42935ad54"
                    }, 
                    {
                        "id": 10, 
                        "name": "java", 
                        "slug": "java", 
                        "uuid": "4f5d14f5-d4a4-4d67-8e0f-3a509fa4a21c"
                    }, 
                    {
                        "id": 11, 
                        "name": "octopress", 
                        "slug": "octopress", 
                        "uuid": "85b0fa5a-a28b-4c25-aabc-a1186f9e95b3"
                    }, 
                    {
                        "id": 12, 
                        "name": "java", 
                        "slug": "java", 
                        "uuid": "4764858a-c177-45c4-b67c-6176acf4f55b"
                    }, 
                    {
                        "id": 13, 
                        "name": "jvm", 
                        "slug": "jvm", 
                        "uuid": "565586e5-4f63-4cde-a818-334ef07bea99"
                    }, 
                    {
                        "id": 14, 
                        "name": "nginx", 
                        "slug": "nginx", 
                        "uuid": "939f5ba1-45f8-46c4-9a4c-0e0d1844e9f6"
                    }, 
                    {
                        "id": 15, 
                        "name": "web", 
                        "slug": "web", 
                        "uuid": "3aa9be72-6004-4e1b-a5e6-6e935c3fb928"
                    }
                ], 
                "users": [
                    {
                        "accessibility": null, 
                        "bio": null, 
                        "cover": "http://7xljyg.com1.z0.glb.clouddn.com/2/00/bd3c5d69de82562eb1a83fdea6a12.jpg", 
                        "created_at": "2015-08-21T15:37:48.000Z", 
                        "created_by": 1, 
                        "email": "y836097668@126.com", 
                        "id": 1, 
                        "image": "http://7xljyg.com1.z0.glb.clouddn.com/5/8c/b1cfbde079c3f6a3835428993eb39.png", 
                        "language": "zh_CN", 
                        "last_login": "2015-09-04T06:33:38.000Z", 
                        "location": null, 
                        "meta_description": null, 
                        "meta_title": null, 
                        "name": "sherlocky", 
                        "password": "$2a$10$6cFh.zfDgoWFjFzea/MvqusQcTyAXsWHD/nw.Ou8XWPbClOHtbsA6", 
                        "slug": "sherlocky", 
                        "status": "active", 
                        "updated_at": "2015-09-04T08:35:55.000Z", 
                        "updated_by": 1, 
                        "uuid": "df3f8ca5-f205-489c-8ab4-f00db495a703", 
                        "website": null
                    }
                ]
            }, 
            "meta": {
                "exported_on": 1441359135135, 
                "version": "003"
            }
        }
    ]
}
